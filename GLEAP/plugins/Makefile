#############################################################################
# Makefile for building: libplugins.a
# Generated by qmake (2.01a) (Qt 4.2.1) on: Thu Dec 21 22:07:15 2006
# Project:  plugins.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile plugins.pro
#############################################################################

####### Compiler, tools and options

include ../../config.h
ifeq ($(CXX),g++)
DEFINES       = 
CFLAGS        = -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -O2 -Wall -W -D_REENTRANT $(DEFINES)
endif
INCPATH       = -I. -I../mortsrc -I../mortsrc/guilib -I../freelib
CFLAGS       += $(INCPATH)
CXXFLAGS     += $(INCPATH)
LEXFLAGS      = 
YACCFLAGS     = -d
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = add.cpp \
		addmap.cpp \
		addions.cpp \
		bond.cpp \
		center.cpp \
		charge.cpp \
		copy.cpp \
		create.cpp \
		delete.cpp \
		desc.cpp \
		energy.cpp \
		geom.cpp \
		help.cpp \
		impose.cpp \
		list.cpp \
		loadcrd.cpp \
		loadfrc.cpp \
		loadmol2.cpp \
		loadoff.cpp \
		loadpdb.cpp \
                loadprep.cpp \
		loadsdf.cpp \
		measure.cpp \
		merge.cpp \
		moloper.cpp \
		savemol2.cpp \
		saveoff.cpp \
		savepdb.cpp \
		saveprm.cpp \
		savesdf.cpp \
		set.cpp \
		shell.cpp \
		solvate.cpp \
		source.cpp \
		transform.cpp \
		zmatrix.cpp 
OBJECTS       = add.o \
		addmap.o \
		addions.o \
		bond.o \
		center.o \
		charge.o \
		copy.o \
		create.o \
		desc.o \
		delete.o \
		energy.o \
		geom.o \
		help.o \
		impose.o \
		list.o \
		loadcrd.o \
		loadfrc.o \
		loadmol2.o \
		loadoff.o \
		loadpdb.o \
                loadprep.o \
		loadsdf.o \
		measure.o \
		merge.o \
		moloper.o \
		savemol2.o \
		saveoff.o \
		savepdb.o \
		saveprm.o \
		savesdf.o \
		set.o \
		shell.o \
		solvate.o \
		source.o \
		transform.o \
		zmatrix.o
DESTDIR       = 
TARGET        = libplugins.a

first: all
####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)



dist: 
	@$(CHK_DIR_EXISTS) .tmp/plugins1.0.0 || $(MKDIR) .tmp/plugins1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/plugins1.0.0/ && $(COPY_FILE) --parents add.hpp addions.hpp bond.hpp build.hpp center.hpp charge.hpp copy.hpp create.hpp desc.hpp help.hpp impose.hpp leaplib.hpp leaprc.hpp list.hpp loadcrd.hpp loadfrc.hpp loadmol2.hpp loadoff.hpp loadpdb.hpp loadsdf.hpp measure.hpp merge.hpp savemol2.hpp saveoff.hpp savepdb.hpp saveprm.hpp savesdf.hpp set.hpp shell.hpp solvate.hpp source.hpp zmatrix.hpp .tmp/plugins1.0.0/ && $(COPY_FILE) --parents add.cpp addions.cpp bond.cpp center.cpp charge.cpp copy.cpp create.cpp desc.cpp geom.cpp help.cpp impose.cpp leaprc.cpp list.cpp loadcrd.cpp loadfrc.cpp loadmol2.cpp loadoff.cpp loadpdb.cpp loadsdf.cpp measure.cpp merge.cpp savemol2.cpp saveoff.cpp savepdb.cpp saveprm.cpp savesdf.cpp set.cpp shell.cpp solvate.cpp source.cpp zmatrix.cpp .tmp/plugins1.0.0/ && (cd `dirname .tmp/plugins1.0.0` && $(TAR) plugins1.0.0.tar plugins1.0.0 && $(COMPRESS) plugins1.0.0.tar) && $(MOVE) `dirname .tmp/plugins1.0.0`/plugins1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/plugins1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

include depend

####### Install

install:   FORCE

uninstall:   FORCE
	-rm -f $(TARGET)

FORCE:

