#############################################################################
# Makefile for building: sleap
# Generated by qmake (2.01a) (Qt 4.2.1) on: Thu Dec 21 22:09:15 2006
# Project:  leapsrc.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile leapsrc.pro
#############################################################################

####### Compiler, tools and options

include ../../config.h
ifeq ($(CXX),g++)
DEFINES       = 
CFLAGS        = -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -O2 -Wall -W -D_REENTRANT $(DEFINES)
ifeq ($(OSTYPE),darwin)
LINK          = g++ -static-libgcc
else
LINK          = g++ -static-libgcc
endif
else
LINK          = $(CXX) `find .. -name cxx_repository -exec echo -ptr {} \;`
endif
INCPATH       = -I../mortsrc -I../mortsrc/guilib -I../plugins -I../freelib -I.
LEXFLAGS      = 
YACCFLAGS     = -d
LFLAGS        = 
LIBS          =  ../freelib/readline/libreadline.a -lm ../plugins/libplugins.a ../mortsrc/libmort.a
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = strmain.cpp strbuff.cpp plugins.cpp 
OBJECTS       = strmain.o   strbuff.o   plugins.o
DESTDIR       = 
TARGET        = sleap$(SFX)

first: all

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  ../mortsrc/libmort.a ../plugins/libplugins.a
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

dist: 
	@$(CHK_DIR_EXISTS) .tmp/sleap1.0.0 || $(MKDIR) .tmp/sleap1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/sleap1.0.0/ && $(COPY_FILE) --parents strbuff.hpp .tmp/sleap1.0.0/ && $(COPY_FILE) --parents strbuff.cpp strmain.cpp plugins.cpp .tmp/sleap1.0.0/ && (cd `dirname .tmp/sleap1.0.0` && $(TAR) sleap1.0.0.tar sleap1.0.0 && $(COMPRESS) sleap1.0.0.tar) && $(MOVE) `dirname .tmp/sleap1.0.0`/sleap1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/sleap1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

strbuff.o: strbuff.cpp strbuff.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o strbuff.o strbuff.cpp

strmain.o: strmain.cpp strbuff.hpp \
		../plugins/help.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o strmain.o strmain.cpp

plugins.o: plugins.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o plugins.o plugins.cpp

####### Install

install:   $(TARGET)
	mv $(TARGET) $(BINDIR)

uninstall:   FORCE
	-for file in $(TARGET) ; do \
	rm -f $(BINDIR)/$${file} ; \
	done

FORCE:

