/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *val = NULL, *type = NULL, *tb = NULL;
      PyErr_Fetch(&val, &type, &tb);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(val, type, tb);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version_tag */
#endif
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
#if PY_VERSION_HEX >= 0x02050000
      0,                                    /* tp_prev */
#endif
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version_tag */
#endif
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
#if PY_VERSION_HEX >= 0x02050000
      0,                                    /* tp_prev */
#endif
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          PyObject_SetAttr(inst, SWIG_This(), swig_this);
          Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}


SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError, "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError, "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_BuildWorldCmp swig_types[0]
#define SWIGTYPE_p_BuildWorldEu swig_types[1]
#define SWIGTYPE_p_BuildWorldNI swig_types[2]
#define SWIGTYPE_p_BuildWorldScaled swig_types[3]
#define SWIGTYPE_p_Bytef swig_types[4]
#define SWIGTYPE_p_ContWorld swig_types[5]
#define SWIGTYPE_p_DielDiffMapsPatcher swig_types[6]
#define SWIGTYPE_p_FILE swig_types[7]
#define SWIGTYPE_p_FieldBW swig_types[8]
#define SWIGTYPE_p_GOAtoms swig_types[9]
#define SWIGTYPE_p_GOAtomsStruct swig_types[10]
#define SWIGTYPE_p_GODonut swig_types[11]
#define SWIGTYPE_p_GOMembraneZ swig_types[12]
#define SWIGTYPE_p_GOTube swig_types[13]
#define SWIGTYPE_p_GenericGeometricalObject swig_types[14]
#define SWIGTYPE_p_GenericSolver swig_types[15]
#define SWIGTYPE_p_HaVectorField3DT_double_t swig_types[16]
#define SWIGTYPE_p_IAVCalc swig_types[17]
#define SWIGTYPE_p_MapsIOData swig_types[18]
#define SWIGTYPE_p_NPMaskBuilder swig_types[19]
#define SWIGTYPE_p_NernstPlankSolver swig_types[20]
#define SWIGTYPE_p_NodeIndexing swig_types[21]
#define SWIGTYPE_p_PBwithLJSolver swig_types[22]
#define SWIGTYPE_p_PNPSApp swig_types[23]
#define SWIGTYPE_p_PNPUtil swig_types[24]
#define SWIGTYPE_p_PSolverOnCudaStructDouble swig_types[25]
#define SWIGTYPE_p_PartialWorldForSAS swig_types[26]
#define SWIGTYPE_p_PnpsObject swig_types[27]
#define SWIGTYPE_p_PoissonBoltzmannSolver swig_types[28]
#define SWIGTYPE_p_PoissonNernstPlanckSolver swig_types[29]
#define SWIGTYPE_p_PoissonSolver swig_types[30]
#define SWIGTYPE_p_PoissonSolverOnCuda1Struct swig_types[31]
#define SWIGTYPE_p_PoissonSolverOnCuda4Struct swig_types[32]
#define SWIGTYPE_p_PoissonSolverOnCudaParamStruct swig_types[33]
#define SWIGTYPE_p_PoissonSolverOnCudaStruct swig_types[34]
#define SWIGTYPE_p_TiXmlElement swig_types[35]
#define SWIGTYPE_p_VectorField3D swig_types[36]
#define SWIGTYPE_p_VectorIntField3D swig_types[37]
#define SWIGTYPE_p__PoissonSolverData swig_types[38]
#define SWIGTYPE_p__object swig_types[39]
#define SWIGTYPE_p_a_6__p_double swig_types[40]
#define SWIGTYPE_p_a_6__p_doublep swig_types[41]
#define SWIGTYPE_p_a_6__p_float swig_types[42]
#define SWIGTYPE_p_allocator_type swig_types[43]
#define SWIGTYPE_p_bool swig_types[44]
#define SWIGTYPE_p_char swig_types[45]
#define SWIGTYPE_p_difference_type swig_types[46]
#define SWIGTYPE_p_double swig_types[47]
#define SWIGTYPE_p_doublep swig_types[48]
#define SWIGTYPE_p_float swig_types[49]
#define SWIGTYPE_p_float3 swig_types[50]
#define SWIGTYPE_p_float4 swig_types[51]
#define SWIGTYPE_p_gzFile swig_types[52]
#define SWIGTYPE_p_int swig_types[53]
#define SWIGTYPE_p_int3 swig_types[54]
#define SWIGTYPE_p_int4 swig_types[55]
#define SWIGTYPE_p_intp swig_types[56]
#define SWIGTYPE_p_long swig_types[57]
#define SWIGTYPE_p_p_Bytef swig_types[58]
#define SWIGTYPE_p_p_TiXmlElement swig_types[59]
#define SWIGTYPE_p_p__object swig_types[60]
#define SWIGTYPE_p_p_double swig_types[61]
#define SWIGTYPE_p_p_doublep swig_types[62]
#define SWIGTYPE_p_p_float swig_types[63]
#define SWIGTYPE_p_p_int swig_types[64]
#define SWIGTYPE_p_p_intp swig_types[65]
#define SWIGTYPE_p_p_signed_char swig_types[66]
#define SWIGTYPE_p_short swig_types[67]
#define SWIGTYPE_p_size_type swig_types[68]
#define SWIGTYPE_p_std__allocatorT_float_t swig_types[69]
#define SWIGTYPE_p_std__invalid_argument swig_types[70]
#define SWIGTYPE_p_std__string swig_types[71]
#define SWIGTYPE_p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t swig_types[72]
#define SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t swig_types[73]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t swig_types[74]
#define SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t swig_types[75]
#define SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t swig_types[76]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[77]
#define SWIGTYPE_p_timeval swig_types[78]
#define SWIGTYPE_p_uLong swig_types[79]
#define SWIGTYPE_p_uLongf swig_types[80]
#define SWIGTYPE_p_unsigned_int swig_types[81]
#define SWIGTYPE_p_value_type swig_types[82]
static swig_type_info *swig_types[84];
static swig_module_info swig_module = {swig_types, 83, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _pnpsll.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__pnpsll

#else
#  define SWIG_init    init_pnpsll

#endif
#define SWIG_name    "_pnpsll"

#define SWIGVERSION 0x030012 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <cstddef> 
#ifdef HARLEM_MOD
#include <hampi.h>                                                                 
#include "hastl.h"                 
#include "hatypes.h"                                                                    
#include "abstree.h"                     
#include "rapidxml.hpp"                                             
#include "hastring.h"                            
#include "harlemapp.h"                     
#include "hampi.h"           
#include "haxml.h"      
#include "halinalg.h"        
#include "haatom.h"    
#include "hamolecule.h"          
#include "atom_mapping.h" 
#include "hamolset.h"  
#include "moleditor.h"   
#include "haresdb.h"
#include "qc_params.h"
#include "haqchem.h"
#include "hamultipole.h" 
#include "hapseudopot.h"
#include "hagaussian.h"
#include "hazindo.h"
#include "haatbasdb.h"  
#include "halocorb.h"
#include "hacoord.h"
#include "haintcrd.h"
#include "rigidbodycoord.h"
#include "trajanal.h"
#include "haenefunc.h"
#include "haintermol.h"
#include "etcoupl.h"
#include "hamatdb.h"
#include "hatypes.h"
#include "mm_elements.h"
#include "mm_model.h"
#include "mm_params.h"
#include "hamolmech.h" 
#include "mm_traj_anal.h"
#include "mm_driver_amber.h"
#include "mm_driver_tinker.h"
#include "mm_force_field.h"
#include "electrostmod.h"
#include "elmod.h"
#include "nuclacidmod.h"
#include "stmmod.h"
#include "canvas3d.h"
#include "hamolview.h"
#include "haempirical.h"
#include "hasurface.h"
#include "apbsmod.h"
#include "hatests.h"
#include "moleditor.h" 
#include "protonredox.h"
#endif


#include <typeinfo>
#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>


#include <stddef.h>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <vector>


#include <utility>


#include <map>


#include <algorithm>


#include "pnps.h"
#include "pnpsapp.h"
#include "pnpinterfaces.h"
#include "mapio.h"
#include "contworld.h"
#include "pnpstructs.h"
#include "poissonsolver.h"
#include "poissonboltzmannsolver.h"
#include "poissonnernstplancksolver.h"
#include "pnputil.h"
#include "buildworldni.h"
#include "pbwithljsolver.h"

#include <stdexcept>


typedef int intp;

SWIGINTERN intp *new_intp(){
    return (new int());
  }
SWIGINTERN void delete_intp(intp *self){
    if (self) delete self;
  }

SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}

SWIGINTERN void intp_assign(intp *self,int value){
    *self = value;
  }
SWIGINTERN int intp_value(intp *self){
    return *self;
  }

SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}

SWIGINTERN int *intp_cast(intp *self){
    return self;
  }
SWIGINTERN intp *intp_frompointer(int *t){
    return (intp *) t;
  }

typedef double doublep;

SWIGINTERN doublep *new_doublep(){
    return (new double());
  }
SWIGINTERN void delete_doublep(doublep *self){
    if (self) delete self;
  }
SWIGINTERN void doublep_assign(doublep *self,double value){
    *self = value;
  }
SWIGINTERN double doublep_value(doublep *self){
    return *self;
  }

  #define SWIG_From_double   PyFloat_FromDouble 

SWIGINTERN double *doublep_cast(doublep *self){
    return self;
  }
SWIGINTERN doublep *doublep_frompointer(double *t){
    return (doublep *) t;
  }

  static double *new_doublepf() { 
    return (new double());
  }
  
  static double *copy_doublepf(double value) { 
    return (new double(static_cast< const double& >(value)));
  }

  static void delete_doublepf(double *obj) { 
    if (obj) delete obj;
  }

  static void doublepf_assign(double *obj, double value) {
    *obj = value;
  }

  static double doublepf_value(double *obj) {
    return *obj;
  }


  static int *new_intArray(size_t nelements) { 
    return (new int[nelements]());
  }

  static void delete_intArray(int *ary) {
    delete[] ary;
  }

  static int intArray_getitem(int *ary, size_t index) {
    return ary[index];
  }
  static void intArray_setitem(int *ary, size_t index, int value) {
    ary[index] = value;
  }


  static bool *new_boolArray(size_t nelements) { 
    return (new bool[nelements]());
  }

  static void delete_boolArray(bool *ary) {
    delete[] ary;
  }

  static bool boolArray_getitem(bool *ary, size_t index) {
    return ary[index];
  }
  static void boolArray_setitem(bool *ary, size_t index, bool value) {
    ary[index] = value;
  }


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


  static float *new_floatArray(size_t nelements) { 
    return (new float[nelements]());
  }

  static void delete_floatArray(float *ary) {
    delete[] ary;
  }

  static float floatArray_getitem(float *ary, size_t index) {
    return ary[index];
  }
  static void floatArray_setitem(float *ary, size_t index, float value) {
    ary[index] = value;
  }


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined __cplusplus && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


namespace swig {
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  /*
    Partial specialization for pointers (traits_info)
  */
  template <class Type> struct traits_info<Type *> {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers (traits)
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category>
  struct traits_as { };

  template <class Type, class Category>
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      swig_type_info *descriptor = type_info<Type>();
      int res = descriptor ? SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0) : SWIG_ERROR;
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size, i <= j
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if (j < 0) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
      if (jj < ii)
        jj = ii;
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1, i >= j
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
      if (ii < jj)
        ii = jj;
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence>
  inline void
  erase(Sequence* seq, const typename Sequence::iterator& position) {
    seq->erase(position);
  }

  template <class Sequence>
  struct traits_reserve {
    static void reserve(Sequence & /*seq*/, typename Sequence::size_type /*n*/) {
      // This should be specialized for types that support reserve
    }
  };

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        swig::traits_reserve<Sequence>::reserve(*sequence, (jj - ii + step - 1) / step);
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      swig::traits_reserve<Sequence>::reserve(*sequence, (ii - jj - step - 1) / -step);
      typename Sequence::const_reverse_iterator sb = self->rbegin();
      typename Sequence::const_reverse_iterator se = self->rbegin();
      std::advance(sb,size-ii-1);
      std::advance(se,size-jj-1);
      typename Sequence::const_reverse_iterator it = sb;
      while (it!=se) {
        sequence->push_back(*it);
        for (Py_ssize_t c=0; c<-step && it!=se; ++c)
          it++;
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          swig::traits_reserve<Sequence>::reserve(*self, self->size() - ssize + is.size());
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount; ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount; ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      typename Sequence::iterator sb = self->begin();
      std::advance(sb,ii);
      if (step == 1) {
        typename Sequence::iterator se = self->begin();
        std::advance(se,jj);
        self->erase(sb,se);
      } else {
        typename Sequence::iterator it = sb;
        size_t delcount = (jj - ii + step - 1) / step;
        while (delcount) {
          it = self->erase(it);
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
          delcount--;
        }
      }
    } else {
      typename Sequence::reverse_iterator sb = self->rbegin();
      std::advance(sb,size-ii-1);
      typename Sequence::reverse_iterator it = sb;
      size_t delcount = (ii - jj - step - 1) / -step;
      while (delcount) {
        it = typename Sequence::reverse_iterator(self->erase((++it).base()));
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
        delcount--;
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", (int)_index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    Py_ssize_t _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  // STL container wrapper around a Python sequence
  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;
    typedef size_t size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      Py_ssize_t s = size();
      for (Py_ssize_t i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", (int)i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


namespace swig {
  template <> struct traits< float > {
    typedef value_category category;
    static const char* type_name() { return"float"; }
  };
  template <>  struct traits_asval< float > {
    typedef float value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_float (obj, val);
    }
  };
  template <>  struct traits_from< float > {
    typedef float value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_float  (val);
    }
  };
}


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	swig_type_info *descriptor = swig::type_info<sequence>();
	if (descriptor && SWIG_IsOK(::SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0))) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_InternalNewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((Py_ssize_t)size);
	Py_ssize_t i = 0;
	for (const_iterator it = seq.begin(); it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_reserve<std::vector<T> > {
      static void reserve(std::vector<T> &seq, typename std::vector<T>::size_type n) {
        seq.reserve(n);
      }
    };

    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector< float, std::allocator< float > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "float" "," "std::allocator< float >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_float_Sg__iterator(std::vector< float > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_float_Sg____nonzero__(std::vector< float > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_float_Sg____bool__(std::vector< float > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< float >::size_type std_vector_Sl_float_Sg____len__(std::vector< float > const *self){
      return self->size();
    }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}

SWIGINTERN std::vector< float,std::allocator< float > > *std_vector_Sl_float_Sg____getslice__(std::vector< float > *self,std::vector< float >::difference_type i,std::vector< float >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_float_Sg____setslice____SWIG_0(std::vector< float > *self,std::vector< float >::difference_type i,std::vector< float >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< float,std::allocator< float > >());
    }
SWIGINTERN void std_vector_Sl_float_Sg____setslice____SWIG_1(std::vector< float > *self,std::vector< float >::difference_type i,std::vector< float >::difference_type j,std::vector< float,std::allocator< float > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_float_Sg____delslice__(std::vector< float > *self,std::vector< float >::difference_type i,std::vector< float >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_float_Sg____delitem____SWIG_0(std::vector< float > *self,std::vector< float >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< float,std::allocator< float > > *std_vector_Sl_float_Sg____getitem____SWIG_0(std::vector< float > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< float,std::allocator< float > >::difference_type id = i;
      std::vector< float,std::allocator< float > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_float_Sg____setitem____SWIG_0(std::vector< float > *self,PySliceObject *slice,std::vector< float,std::allocator< float > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< float,std::allocator< float > >::difference_type id = i;
      std::vector< float,std::allocator< float > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_float_Sg____setitem____SWIG_1(std::vector< float > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< float,std::allocator< float > >::difference_type id = i;
      std::vector< float,std::allocator< float > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_float_Sg____delitem____SWIG_1(std::vector< float > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< float,std::allocator< float > >::difference_type id = i;
      std::vector< float,std::allocator< float > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< float >::value_type const &std_vector_Sl_float_Sg____getitem____SWIG_1(std::vector< float > const *self,std::vector< float >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_float_Sg____setitem____SWIG_2(std::vector< float > *self,std::vector< float >::difference_type i,std::vector< float >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< float >::value_type std_vector_Sl_float_Sg__pop(std::vector< float > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< float,std::allocator< float > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_float_Sg__append(std::vector< float > *self,std::vector< float >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< float >::iterator std_vector_Sl_float_Sg__erase__SWIG_0(std::vector< float > *self,std::vector< float >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< float >::iterator std_vector_Sl_float_Sg__erase__SWIG_1(std::vector< float > *self,std::vector< float >::iterator first,std::vector< float >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< float >::iterator std_vector_Sl_float_Sg__insert__SWIG_0(std::vector< float > *self,std::vector< float >::iterator pos,std::vector< float >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_float_Sg__insert__SWIG_1(std::vector< float > *self,std::vector< float >::iterator pos,std::vector< float >::size_type n,std::vector< float >::value_type const &x){ self->insert(pos, n, x); }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
#if PY_VERSION_HEX >= 0x03010000
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#else
      return PyUnicode_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if(alloc) *alloc = SWIG_NEWOBJ;
#endif
    PyBytes_AsStringAndSize(obj, &cstr, &len);
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	{
	  *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}





SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    /* special case of single char conversion when we don't need space for NUL */
    if (size == 1 && csize == 2 && cptr && !cptr[1]) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (PyObject * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_char  (char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_intp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  intp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_intp")) SWIG_fail;
  {
    try {
      result = (intp *)new_intp();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_intp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_intp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  intp *arg1 = (intp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_intp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_intp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_intp" "', argument " "1"" of type '" "intp *""'"); 
  }
  arg1 = reinterpret_cast< intp * >(argp1);
  {
    try {
      delete_intp(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intp_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  intp *arg1 = (intp *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:intp_assign",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_intp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intp_assign" "', argument " "1"" of type '" "intp *""'"); 
  }
  arg1 = reinterpret_cast< intp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "intp_assign" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      intp_assign(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intp_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  intp *arg1 = (intp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:intp_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_intp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intp_value" "', argument " "1"" of type '" "intp *""'"); 
  }
  arg1 = reinterpret_cast< intp * >(argp1);
  {
    try {
      result = (int)intp_value(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intp_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  intp *arg1 = (intp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:intp_cast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_intp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intp_cast" "', argument " "1"" of type '" "intp *""'"); 
  }
  arg1 = reinterpret_cast< intp * >(argp1);
  {
    try {
      result = (int *)intp_cast(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intp_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  intp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:intp_frompointer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intp_frompointer" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  {
    try {
      result = (intp *)intp_frompointer(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_intp, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *intp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_intp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_doublep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  doublep *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_doublep")) SWIG_fail;
  {
    try {
      result = (doublep *)new_doublep();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_doublep, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_doublep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  doublep *arg1 = (doublep *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_doublep",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_doublep, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_doublep" "', argument " "1"" of type '" "doublep *""'"); 
  }
  arg1 = reinterpret_cast< doublep * >(argp1);
  {
    try {
      delete_doublep(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_doublep_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  doublep *arg1 = (doublep *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:doublep_assign",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_doublep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "doublep_assign" "', argument " "1"" of type '" "doublep *""'"); 
  }
  arg1 = reinterpret_cast< doublep * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "doublep_assign" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      doublep_assign(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_doublep_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  doublep *arg1 = (doublep *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:doublep_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_doublep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "doublep_value" "', argument " "1"" of type '" "doublep *""'"); 
  }
  arg1 = reinterpret_cast< doublep * >(argp1);
  {
    try {
      result = (double)doublep_value(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_doublep_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  doublep *arg1 = (doublep *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:doublep_cast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_doublep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "doublep_cast" "', argument " "1"" of type '" "doublep *""'"); 
  }
  arg1 = reinterpret_cast< doublep * >(argp1);
  {
    try {
      result = (double *)doublep_cast(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_doublep_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  doublep *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:doublep_frompointer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "doublep_frompointer" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  {
    try {
      result = (doublep *)doublep_frompointer(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_doublep, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *doublep_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_doublep, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_doublepf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_doublepf")) SWIG_fail;
  {
    try {
      result = (double *)new_doublepf();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_copy_doublepf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:copy_doublepf",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "copy_doublepf" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  {
    try {
      result = (double *)copy_doublepf(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_doublepf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_doublepf",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_doublepf" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  {
    try {
      delete_doublepf(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_doublepf_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:doublepf_assign",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "doublepf_assign" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "doublepf_assign" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      doublepf_assign(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_doublepf_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:doublepf_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "doublepf_value" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  {
    try {
      result = (double)doublepf_value(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_intArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_intArray",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_intArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = (int *)new_intArray(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_intArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_intArray",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_intArray" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  {
    try {
      delete_intArray(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intArray_getitem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:intArray_getitem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intArray_getitem" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "intArray_getitem" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (int)intArray_getitem(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intArray_setitem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  size_t arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:intArray_setitem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intArray_setitem" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "intArray_setitem" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "intArray_setitem" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      intArray_setitem(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_boolArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_boolArray",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_boolArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = (bool *)new_boolArray(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_boolArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool *arg1 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_boolArray",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_boolArray" "', argument " "1"" of type '" "bool *""'"); 
  }
  arg1 = reinterpret_cast< bool * >(argp1);
  {
    try {
      delete_boolArray(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_boolArray_getitem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool *arg1 = (bool *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:boolArray_getitem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "boolArray_getitem" "', argument " "1"" of type '" "bool *""'"); 
  }
  arg1 = reinterpret_cast< bool * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "boolArray_getitem" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)boolArray_getitem(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_boolArray_setitem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool *arg1 = (bool *) 0 ;
  size_t arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:boolArray_setitem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "boolArray_setitem" "', argument " "1"" of type '" "bool *""'"); 
  }
  arg1 = reinterpret_cast< bool * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "boolArray_setitem" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "boolArray_setitem" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      boolArray_setitem(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_floatArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_floatArray",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_floatArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = (float *)new_floatArray(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_floatArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_floatArray",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_floatArray" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  {
    try {
      delete_floatArray(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_floatArray_getitem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:floatArray_getitem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "floatArray_getitem" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "floatArray_getitem" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (float)floatArray_getitem(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_floatArray_setitem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  size_t arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:floatArray_setitem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "floatArray_setitem" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "floatArray_setitem" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "floatArray_setitem" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      floatArray_setitem(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_iterator" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (swig::SwigPyIterator *)std_vector_Sl_float_Sg__iterator(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___nonzero__" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (bool)std_vector_Sl_float_Sg____nonzero__((std::vector< float > const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___bool__" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (bool)std_vector_Sl_float_Sg____bool__((std::vector< float > const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___len__" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = std_vector_Sl_float_Sg____len__((std::vector< float > const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::difference_type arg2 ;
  std::vector< float >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___getslice__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf___getslice__" "', argument " "2"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< float >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf___getslice__" "', argument " "3"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< float >::difference_type >(val3);
  {
    try {
      try {
        result = (std::vector< float,std::allocator< float > > *)std_vector_Sl_float_Sg____getslice__(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::difference_type arg2 ;
  std::vector< float >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___setslice__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf___setslice__" "', argument " "2"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< float >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf___setslice__" "', argument " "3"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< float >::difference_type >(val3);
  {
    try {
      try {
        std_vector_Sl_float_Sg____setslice____SWIG_0(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::difference_type arg2 ;
  std::vector< float >::difference_type arg3 ;
  std::vector< float,std::allocator< float > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:vectorf___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___setslice__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf___setslice__" "', argument " "2"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< float >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf___setslice__" "', argument " "3"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< float >::difference_type >(val3);
  {
    std::vector< float,std::allocator< float > > *ptr = (std::vector< float,std::allocator< float > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorf___setslice__" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorf___setslice__" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      try {
        std_vector_Sl_float_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< float,std::allocator< float > > const &)*arg4);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorf___setslice____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< float,std::allocator< float > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorf___setslice____SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'vectorf___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::__setslice__(std::vector< float >::difference_type,std::vector< float >::difference_type)\n"
    "    std::vector< float >::__setslice__(std::vector< float >::difference_type,std::vector< float >::difference_type,std::vector< float,std::allocator< float > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorf___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::difference_type arg2 ;
  std::vector< float >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___delslice__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf___delslice__" "', argument " "2"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< float >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf___delslice__" "', argument " "3"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< float >::difference_type >(val3);
  {
    try {
      try {
        std_vector_Sl_float_Sg____delslice__(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___delitem__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf___delitem__" "', argument " "2"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< float >::difference_type >(val2);
  {
    try {
      try {
        std_vector_Sl_float_Sg____delitem____SWIG_0(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___getitem__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    try {
      try {
        result = (std::vector< float,std::allocator< float > > *)std_vector_Sl_float_Sg____getitem____SWIG_0(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___setitem__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector< float,std::allocator< float > > *ptr = (std::vector< float,std::allocator< float > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorf___setitem__" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorf___setitem__" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      try {
        std_vector_Sl_float_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< float,std::allocator< float > > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___setitem__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    try {
      try {
        std_vector_Sl_float_Sg____setitem____SWIG_1(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___delitem__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    try {
      try {
        std_vector_Sl_float_Sg____delitem____SWIG_1(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorf___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorf___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'vectorf___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::__delitem__(std::vector< float >::difference_type)\n"
    "    std::vector< float >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorf___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< float >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___getitem__" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf___getitem__" "', argument " "2"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< float >::difference_type >(val2);
  {
    try {
      try {
        result = (std::vector< float >::value_type *) &std_vector_Sl_float_Sg____getitem____SWIG_1((std::vector< float > const *)arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorf___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorf___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'vectorf___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::__getitem__(PySliceObject *)\n"
    "    std::vector< float >::__getitem__(std::vector< float >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorf___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::difference_type arg2 ;
  std::vector< float >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< float >::value_type temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf___setitem__" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf___setitem__" "', argument " "2"" of type '" "std::vector< float >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< float >::difference_type >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf___setitem__" "', argument " "3"" of type '" "std::vector< float >::value_type""'");
  } 
  temp3 = static_cast< std::vector< float >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      try {
        std_vector_Sl_float_Sg____setitem____SWIG_2(arg1,arg2,(float const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorf___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< float,std::allocator< float > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorf___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorf___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'vectorf___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::__setitem__(PySliceObject *,std::vector< float,std::allocator< float > > const &)\n"
    "    std::vector< float >::__setitem__(PySliceObject *)\n"
    "    std::vector< float >::__setitem__(std::vector< float >::difference_type,std::vector< float >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorf_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_pop" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      try {
        result = (std::vector< float >::value_type)std_vector_Sl_float_Sg__pop(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
      
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< float >::value_type temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_append" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf_append" "', argument " "2"" of type '" "std::vector< float >::value_type""'");
  } 
  temp2 = static_cast< std::vector< float >::value_type >(val2);
  arg2 = &temp2;
  {
    try {
      std_vector_Sl_float_Sg__append(arg1,(float const &)*arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_vectorf")) SWIG_fail;
  {
    try {
      result = (std::vector< float > *)new std::vector< float >();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_vectorf",&obj0)) SWIG_fail;
  {
    std::vector< float,std::allocator< float > > *ptr = (std::vector< float,std::allocator< float > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorf" "', argument " "1"" of type '" "std::vector< float > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorf" "', argument " "1"" of type '" "std::vector< float > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (std::vector< float > *)new std::vector< float >((std::vector< float > const &)*arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_empty" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (bool)((std::vector< float > const *)arg1)->empty();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_size" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = ((std::vector< float > const *)arg1)->size();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_swap" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorf_swap" "', argument " "2"" of type '" "std::vector< float > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorf_swap" "', argument " "2"" of type '" "std::vector< float > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float > * >(argp2);
  {
    try {
      (arg1)->swap(*arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_begin" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (arg1)->begin();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< float >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_end" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (arg1)->end();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< float >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_rbegin" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (arg1)->rbegin();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< float >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_rend" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (arg1)->rend();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< float >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_clear" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      (arg1)->clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< float > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_get_allocator" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = ((std::vector< float > const *)arg1)->get_allocator();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector< float >::allocator_type(static_cast< const std::vector< float >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_vectorf",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorf" "', argument " "1"" of type '" "std::vector< float >::size_type""'");
  } 
  arg1 = static_cast< std::vector< float >::size_type >(val1);
  {
    try {
      result = (std::vector< float > *)new std::vector< float >(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_pop_back" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      (arg1)->pop_back();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_resize" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf_resize" "', argument " "2"" of type '" "std::vector< float >::size_type""'");
  } 
  arg2 = static_cast< std::vector< float >::size_type >(val2);
  {
    try {
      (arg1)->resize(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< float >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_erase" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_erase" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< float >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_erase" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
    }
  }
  {
    try {
      result = std_vector_Sl_float_Sg__erase__SWIG_0(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< float >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::iterator arg2 ;
  std::vector< float >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< float >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_erase" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_erase" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< float >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_erase" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_erase" "', argument " "3"" of type '" "std::vector< float >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< float >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_erase" "', argument " "3"" of type '" "std::vector< float >::iterator""'");
    }
  }
  {
    try {
      result = std_vector_Sl_float_Sg__erase__SWIG_1(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< float >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorf_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorf_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'vectorf_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::erase(std::vector< float >::iterator)\n"
    "    std::vector< float >::erase(std::vector< float >::iterator,std::vector< float >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorf__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float >::size_type arg1 ;
  std::vector< float >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< float >::value_type temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_vectorf",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorf" "', argument " "1"" of type '" "std::vector< float >::size_type""'");
  } 
  arg1 = static_cast< std::vector< float >::size_type >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vectorf" "', argument " "2"" of type '" "std::vector< float >::value_type""'");
  } 
  temp2 = static_cast< std::vector< float >::value_type >(val2);
  arg2 = &temp2;
  {
    try {
      result = (std::vector< float > *)new std::vector< float >(arg1,(std::vector< float >::value_type const &)*arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorf(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_vectorf__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorf__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorf__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_vectorf__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_vectorf'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::vector()\n"
    "    std::vector< float >::vector(std::vector< float > const &)\n"
    "    std::vector< float >::vector(std::vector< float >::size_type)\n"
    "    std::vector< float >::vector(std::vector< float >::size_type,std::vector< float >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorf_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< float >::value_type temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_push_back" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf_push_back" "', argument " "2"" of type '" "std::vector< float >::value_type""'");
  } 
  temp2 = static_cast< std::vector< float >::value_type >(val2);
  arg2 = &temp2;
  {
    try {
      (arg1)->push_back((std::vector< float >::value_type const &)*arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_front" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (std::vector< float >::value_type *) &((std::vector< float > const *)arg1)->front();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_back" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = (std::vector< float >::value_type *) &((std::vector< float > const *)arg1)->back();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type arg2 ;
  std::vector< float >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< float >::value_type temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_assign" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf_assign" "', argument " "2"" of type '" "std::vector< float >::size_type""'");
  } 
  arg2 = static_cast< std::vector< float >::size_type >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf_assign" "', argument " "3"" of type '" "std::vector< float >::value_type""'");
  } 
  temp3 = static_cast< std::vector< float >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      (arg1)->assign(arg2,(std::vector< float >::value_type const &)*arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type arg2 ;
  std::vector< float >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< float >::value_type temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_resize" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf_resize" "', argument " "2"" of type '" "std::vector< float >::size_type""'");
  } 
  arg2 = static_cast< std::vector< float >::size_type >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf_resize" "', argument " "3"" of type '" "std::vector< float >::value_type""'");
  } 
  temp3 = static_cast< std::vector< float >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      (arg1)->resize(arg2,(std::vector< float >::value_type const &)*arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorf_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorf_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'vectorf_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::resize(std::vector< float >::size_type)\n"
    "    std::vector< float >::resize(std::vector< float >::size_type,std::vector< float >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorf_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::iterator arg2 ;
  std::vector< float >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< float >::value_type temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< float >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorf_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_insert" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_insert" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< float >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_insert" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf_insert" "', argument " "3"" of type '" "std::vector< float >::value_type""'");
  } 
  temp3 = static_cast< std::vector< float >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      result = std_vector_Sl_float_Sg__insert__SWIG_0(arg1,arg2,(float const &)*arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< float >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::iterator arg2 ;
  std::vector< float >::size_type arg3 ;
  std::vector< float >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  std::vector< float >::value_type temp4 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:vectorf_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_insert" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_insert" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< float >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorf_insert" "', argument " "2"" of type '" "std::vector< float >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorf_insert" "', argument " "3"" of type '" "std::vector< float >::size_type""'");
  } 
  arg3 = static_cast< std::vector< float >::size_type >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vectorf_insert" "', argument " "4"" of type '" "std::vector< float >::value_type""'");
  } 
  temp4 = static_cast< std::vector< float >::value_type >(val4);
  arg4 = &temp4;
  {
    try {
      std_vector_Sl_float_Sg__insert__SWIG_1(arg1,arg2,arg3,(float const &)*arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorf_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< float,std::allocator< float > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< float >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_vectorf_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'vectorf_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< float >::insert(std::vector< float >::iterator,std::vector< float >::value_type const &)\n"
    "    std::vector< float >::insert(std::vector< float >::iterator,std::vector< float >::size_type,std::vector< float >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorf_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorf_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_reserve" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorf_reserve" "', argument " "2"" of type '" "std::vector< float >::size_type""'");
  } 
  arg2 = static_cast< std::vector< float >::size_type >(val2);
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorf_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorf_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorf_capacity" "', argument " "1"" of type '" "std::vector< float > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      result = ((std::vector< float > const *)arg1)->capacity();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_vectorf",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorf" "', argument " "1"" of type '" "std::vector< float > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< float > * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PnpsObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PnpsObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PnpsObject")) SWIG_fail;
  {
    try {
      result = (PnpsObject *)new PnpsObject();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PnpsObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PnpsObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PnpsObject *arg1 = (PnpsObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PnpsObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PnpsObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PnpsObject" "', argument " "1"" of type '" "PnpsObject *""'"); 
  }
  arg1 = reinterpret_cast< PnpsObject * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PnpsObject_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PnpsObject *arg1 = (PnpsObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PnpsObject_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PnpsObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PnpsObject_Clear" "', argument " "1"" of type '" "PnpsObject *""'"); 
  }
  arg1 = reinterpret_cast< PnpsObject * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PnpsObject_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PnpsObject *arg1 = (PnpsObject *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PnpsObject_SetName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PnpsObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PnpsObject_SetName" "', argument " "1"" of type '" "PnpsObject *""'"); 
  }
  arg1 = reinterpret_cast< PnpsObject * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PnpsObject_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PnpsObject_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->SetName((std::string const &)*arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PnpsObject_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PnpsObject *arg1 = (PnpsObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PnpsObject_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PnpsObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PnpsObject_GetName" "', argument " "1"" of type '" "PnpsObject const *""'"); 
  }
  arg1 = reinterpret_cast< PnpsObject * >(argp1);
  {
    try {
      result = (char *)((PnpsObject const *)arg1)->GetName();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PnpsObject_GetCStrName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PnpsObject *arg1 = (PnpsObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PnpsObject_GetCStrName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PnpsObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PnpsObject_GetCStrName" "', argument " "1"" of type '" "PnpsObject const *""'"); 
  }
  arg1 = reinterpret_cast< PnpsObject * >(argp1);
  {
    try {
      result = (char *)((PnpsObject const *)arg1)->GetCStrName();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PnpsObject_GetStdStrName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PnpsObject *arg1 = (PnpsObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PnpsObject_GetStdStrName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PnpsObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PnpsObject_GetStdStrName" "', argument " "1"" of type '" "PnpsObject const *""'"); 
  }
  arg1 = reinterpret_cast< PnpsObject * >(argp1);
  {
    try {
      result = ((PnpsObject const *)arg1)->GetStdStrName();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PnpsObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PnpsObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PNPSApp_GetMyAbsRank(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetMyAbsRank",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetMyAbsRank" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetMyAbsRank();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetTotalProc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetTotalProc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetTotalProc" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetTotalProc();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetMyGroupNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetMyGroupNumber",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetMyGroupNumber" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetMyGroupNumber();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetNumberOfGroups(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetNumberOfGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetNumberOfGroups" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetNumberOfGroups();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetMyRankInGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetMyRankInGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetMyRankInGroup" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetMyRankInGroup();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetNumProcsInMyGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetNumProcsInMyGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetNumProcsInMyGroup" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetNumProcsInMyGroup();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetMyGroupLeader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetMyGroupLeader",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetMyGroupLeader" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetMyGroupLeader();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetMaster(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetMaster",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetMaster" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetMaster();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetNumProcsInGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_GetNumProcsInGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetNumProcsInGroup" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_GetNumProcsInGroup" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->GetNumProcsInGroup(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AmIGroupLeader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_AmIGroupLeader",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AmIGroupLeader" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (bool)(arg1)->AmIGroupLeader();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AmIBigBrother(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_AmIBigBrother",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AmIBigBrother" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (bool)(arg1)->AmIBigBrother();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetMasterProc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetMasterProc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetMasterProc" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)(arg1)->GetMasterProc();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_SendCStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_SendCStr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_SendCStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_SendCStr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PNPSApp_SendCStr" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      result = (int)(arg1)->SendCStr(arg2,(char const *)arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_RecvCStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_RecvCStr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_RecvCStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_RecvCStr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PNPSApp_RecvCStr" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      result = (int)(arg1)->RecvCStr(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_BcastCStr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_BcastCStr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_BcastCStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_BcastCStr" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPSApp_BcastCStr" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->BcastCStr(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_BcastCStr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_BcastCStr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_BcastCStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_BcastCStr" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->BcastCStr(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_BcastCStr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_PNPSApp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PNPSApp_BcastCStr__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_PNPSApp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_PNPSApp_BcastCStr__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PNPSApp_BcastCStr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PNPSApp::BcastCStr(char *,int)\n"
    "    PNPSApp::BcastCStr(char *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PNPSApp_BcastTiXmlElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  TiXmlElement *arg2 = (TiXmlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  TiXmlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_BcastTiXmlElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_BcastTiXmlElement" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_TiXmlElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_BcastTiXmlElement" "', argument " "2"" of type '" "TiXmlElement *""'"); 
  }
  arg2 = reinterpret_cast< TiXmlElement * >(argp2);
  {
    try {
      result = (TiXmlElement *)(arg1)->BcastTiXmlElement(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TiXmlElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_BcastTiXmlElementWithinGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  TiXmlElement *arg2 = (TiXmlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  TiXmlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_BcastTiXmlElementWithinGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_BcastTiXmlElementWithinGroup" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_TiXmlElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_BcastTiXmlElementWithinGroup" "', argument " "2"" of type '" "TiXmlElement *""'"); 
  }
  arg2 = reinterpret_cast< TiXmlElement * >(argp2);
  {
    try {
      result = (TiXmlElement *)(arg1)->BcastTiXmlElementWithinGroup(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TiXmlElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetNumOfThreads(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_GetNumOfThreads",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_GetNumOfThreads" "', argument " "1"" of type '" "PNPSApp const *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (int)((PNPSApp const *)arg1)->GetNumOfThreads();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_SetNumOfThreads(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_SetNumOfThreads",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_SetNumOfThreads" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_SetNumOfThreads" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->SetNumOfThreads(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_InitPNPSApp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":PNPSApp_InitPNPSApp")) SWIG_fail;
  {
    try {
      result = (int)PNPSApp::InitPNPSApp();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_InitPNPSApp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:PNPSApp_InitPNPSApp",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "PNPSApp_InitPNPSApp" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_InitPNPSApp" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPSApp_InitPNPSApp" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PNPSApp_InitPNPSApp" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PNPSApp_InitPNPSApp" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "PNPSApp_InitPNPSApp" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (int)PNPSApp::InitPNPSApp(arg1,arg2,arg3,(char const *)arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_InitPNPSApp__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:PNPSApp_InitPNPSApp",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "PNPSApp_InitPNPSApp" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_InitPNPSApp" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPSApp_InitPNPSApp" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PNPSApp_InitPNPSApp" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PNPSApp_InitPNPSApp" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (int)PNPSApp::InitPNPSApp(arg1,arg2,arg3,(char const *)arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_InitPNPSApp__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:PNPSApp_InitPNPSApp",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "PNPSApp_InitPNPSApp" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_InitPNPSApp" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPSApp_InitPNPSApp" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PNPSApp_InitPNPSApp" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  {
    try {
      result = (int)PNPSApp::InitPNPSApp(arg1,arg2,arg3,(char const *)arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_InitPNPSApp(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_PNPSApp_InitPNPSApp__SWIG_0(self, args);
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_PNPSApp_InitPNPSApp__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_PNPSApp_InitPNPSApp__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_PNPSApp_InitPNPSApp__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PNPSApp_InitPNPSApp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PNPSApp::InitPNPSApp()\n"
    "    PNPSApp::InitPNPSApp(int,int,int,char const *,int,int)\n"
    "    PNPSApp::InitPNPSApp(int,int,int,char const *,int)\n"
    "    PNPSApp::InitPNPSApp(int,int,int,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PNPSApp_DeletePNPSApp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":PNPSApp_DeletePNPSApp")) SWIG_fail;
  {
    try {
      result = (int)PNPSApp::DeletePNPSApp();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_GetPNPSApp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":PNPSApp_GetPNPSApp")) SWIG_fail;
  {
    try {
      result = (PNPSApp *)PNPSApp::GetPNPSApp();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PNPSApp, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_DropArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  Bytef *arg2 = (Bytef *) 0 ;
  uLong arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_DropArray",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_DropArray" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Bytef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_DropArray" "', argument " "2"" of type '" "Bytef *""'"); 
  }
  arg2 = reinterpret_cast< Bytef * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uLong,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PNPSApp_DropArray" "', argument " "3"" of type '" "uLong""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PNPSApp_DropArray" "', argument " "3"" of type '" "uLong""'");
    } else {
      uLong * temp = reinterpret_cast< uLong * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      result = (int)(arg1)->DropArray(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_PullArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  Bytef *arg2 = (Bytef *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_PullArray",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_PullArray" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Bytef, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_PullArray" "', argument " "2"" of type '" "Bytef *""'"); 
  }
  arg2 = reinterpret_cast< Bytef * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPSApp_PullArray" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->PullArray(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_compress3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Bytef **arg1 = (Bytef **) 0 ;
  uLongf *arg2 = (uLongf *) 0 ;
  Bytef *arg3 = (Bytef *) 0 ;
  uLong arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:PNPSApp_compress3",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_p_Bytef, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_compress3" "', argument " "1"" of type '" "Bytef **""'"); 
  }
  arg1 = reinterpret_cast< Bytef ** >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_uLongf, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_compress3" "', argument " "2"" of type '" "uLongf *""'"); 
  }
  arg2 = reinterpret_cast< uLongf * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Bytef, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PNPSApp_compress3" "', argument " "3"" of type '" "Bytef const *""'"); 
  }
  arg3 = reinterpret_cast< Bytef * >(argp3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_uLong,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PNPSApp_compress3" "', argument " "4"" of type '" "uLong""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PNPSApp_compress3" "', argument " "4"" of type '" "uLong""'");
    } else {
      uLong * temp = reinterpret_cast< uLong * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PNPSApp_compress3" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (int)PNPSApp::compress3(arg1,arg2,(Bytef const *)arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AddProcessNumberToFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:PNPSApp_AddProcessNumberToFileName",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AddProcessNumberToFileName" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_AddProcessNumberToFileName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PNPSApp_AddProcessNumberToFileName" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PNPSApp_AddProcessNumberToFileName" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PNPSApp_AddProcessNumberToFileName" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      PNPSApp::AddProcessNumberToFileName(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AddMyAbsProcNumberToFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_AddMyAbsProcNumberToFileName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AddMyAbsProcNumberToFileName" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_AddMyAbsProcNumberToFileName" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PNPSApp_AddMyAbsProcNumberToFileName" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->AddMyAbsProcNumberToFileName(arg2,(char const *)arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AddMyGroupNumberToFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_AddMyGroupNumberToFileName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AddMyGroupNumberToFileName" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_AddMyGroupNumberToFileName" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PNPSApp_AddMyGroupNumberToFileName" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      (arg1)->AddMyGroupNumberToFileName(arg2,(char const *)arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AddMyGroupNumberToFileNameStdStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_AddMyGroupNumberToFileNameStdStr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AddMyGroupNumberToFileNameStdStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_AddMyGroupNumberToFileNameStdStr" "', argument " "2"" of type '" "std::string *""'"); 
  }
  arg2 = reinterpret_cast< std::string * >(argp2);
  {
    try {
      (arg1)->AddMyGroupNumberToFileNameStdStr(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AddMyGroupStringNameToFileNameStdStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_AddMyGroupStringNameToFileNameStdStr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AddMyGroupStringNameToFileNameStdStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_AddMyGroupStringNameToFileNameStdStr" "', argument " "2"" of type '" "std::string *""'"); 
  }
  arg2 = reinterpret_cast< std::string * >(argp2);
  {
    try {
      (arg1)->AddMyGroupStringNameToFileNameStdStr(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AddGroupStringNameToFileNameStdStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_AddGroupStringNameToFileNameStdStr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AddGroupStringNameToFileNameStdStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_AddGroupStringNameToFileNameStdStr" "', argument " "2"" of type '" "std::string *""'"); 
  }
  arg2 = reinterpret_cast< std::string * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPSApp_AddGroupStringNameToFileNameStdStr" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      (arg1)->AddGroupStringNameToFileNameStdStr(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_AddGroupStringNameToFileNameCStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPSApp_AddGroupStringNameToFileNameCStr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_AddGroupStringNameToFileNameCStr" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_AddGroupStringNameToFileNameCStr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPSApp_AddGroupStringNameToFileNameCStr" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (char *)(arg1)->AddGroupStringNameToFileNameCStr((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_RedirectOutputToFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_RedirectOutputToFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_RedirectOutputToFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_RedirectOutputToFile" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      result = (int)PNPSApp::RedirectOutputToFile((char const *)arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_RedirectOutputToStd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":PNPSApp_RedirectOutputToStd")) SWIG_fail;
  {
    try {
      result = (int)PNPSApp::RedirectOutputToStd();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_HaveTimeToRun(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_HaveTimeToRun",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_HaveTimeToRun" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    try {
      result = (bool)(arg1)->HaveTimeToRun();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_bTimerOn_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_bTimerOn_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_bTimerOn_set" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_bTimerOn_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->bTimerOn = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_bTimerOn_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_bTimerOn_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_bTimerOn_get" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  result = (bool) ((arg1)->bTimerOn);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_SetWallTimeToRun(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_SetWallTimeToRun",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_SetWallTimeToRun" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_SetWallTimeToRun" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->SetWallTimeToRun((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_StartTime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  timeval arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_StartTime_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_StartTime_set" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_timeval,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PNPSApp_StartTime_set" "', argument " "2"" of type '" "timeval""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PNPSApp_StartTime_set" "', argument " "2"" of type '" "timeval""'");
    } else {
      timeval * temp = reinterpret_cast< timeval * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->StartTime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_StartTime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  timeval result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_StartTime_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_StartTime_get" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  result =  ((arg1)->StartTime);
  resultobj = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_SecondsToRun_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPSApp_SecondsToRun_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_SecondsToRun_set" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPSApp_SecondsToRun_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->SecondsToRun = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPSApp_SecondsToRun_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPSApp *arg1 = (PNPSApp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPSApp_SecondsToRun_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPSApp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPSApp_SecondsToRun_get" "', argument " "1"" of type '" "PNPSApp *""'"); 
  }
  arg1 = reinterpret_cast< PNPSApp * >(argp1);
  result = (double) ((arg1)->SecondsToRun);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PNPSApp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PNPSApp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_MaxNumOfParts_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable MaxNumOfParts is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_MaxNumOfParts_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(MaxNumOfParts));
  return pyobj;
}


SWIGINTERN int Swig_var_MaxNPartSize_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable MaxNPartSize is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_MaxNPartSize_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(MaxNPartSize));
  return pyobj;
}


SWIGINTERN int Swig_var_pnpsapp_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_PNPSApp,  0 );  
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""pnpsapp""' of type '""PNPSApp *""'");
    }
    pnpsapp = reinterpret_cast< PNPSApp * >(argp);
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_pnpsapp_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(pnpsapp), SWIGTYPE_p_PNPSApp,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_delete_GenericSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericSolver *arg1 = (GenericSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GenericSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GenericSolver" "', argument " "1"" of type '" "GenericSolver *""'"); 
  }
  arg1 = reinterpret_cast< GenericSolver * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericSolver_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericSolver *arg1 = (GenericSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericSolver_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericSolver_InitZero" "', argument " "1"" of type '" "GenericSolver *""'"); 
  }
  arg1 = reinterpret_cast< GenericSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericSolver_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericSolver *arg1 = (GenericSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericSolver_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericSolver_Clear" "', argument " "1"" of type '" "GenericSolver *""'"); 
  }
  arg1 = reinterpret_cast< GenericSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericSolver_ShowParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericSolver *arg1 = (GenericSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericSolver_ShowParameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericSolver_ShowParameters" "', argument " "1"" of type '" "GenericSolver *""'"); 
  }
  arg1 = reinterpret_cast< GenericSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowParameters();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericSolver_ShowProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericSolver *arg1 = (GenericSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericSolver_ShowProperties",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericSolver_ShowProperties" "', argument " "1"" of type '" "GenericSolver *""'"); 
  }
  arg1 = reinterpret_cast< GenericSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowProperties();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericSolver_InitSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericSolver *arg1 = (GenericSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericSolver_InitSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericSolver_InitSolver" "', argument " "1"" of type '" "GenericSolver *""'"); 
  }
  arg1 = reinterpret_cast< GenericSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericSolver_Solve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericSolver *arg1 = (GenericSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericSolver_Solve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericSolver_Solve" "', argument " "1"" of type '" "GenericSolver *""'"); 
  }
  arg1 = reinterpret_cast< GenericSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Solve();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GenericSolver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_GenericSolver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TypeOfMapFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TypeOfMapFile",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TypeOfMapFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try {
      result = (int)TypeOfMapFile((char const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZ__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  TiXmlElement *arg2 = (TiXmlElement *) 0 ;
  float *arg3 = (float *) 0 ;
  int *arg4 = (int *) 0 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:WriteMapGZ",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZ" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_TiXmlElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZ" "', argument " "2"" of type '" "TiXmlElement *""'"); 
  }
  arg2 = reinterpret_cast< TiXmlElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "WriteMapGZ" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "WriteMapGZ" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "WriteMapGZ" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "WriteMapGZ" "', argument " "6"" of type '" "char *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  {
    try {
      result = (int)WriteMapGZ((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZ__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:WriteMapGZ",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZ" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZ" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "WriteMapGZ" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "WriteMapGZ" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "WriteMapGZ" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "WriteMapGZ" "', argument " "6"" of type '" "char *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  {
    try {
      result = (int)WriteMapGZ((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZ__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:WriteMapGZ",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZ" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZ" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "WriteMapGZ" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "WriteMapGZ" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "WriteMapGZ" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (int)WriteMapGZ((char const *)arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZ__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:WriteMapGZ",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZ" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZ" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "WriteMapGZ" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "WriteMapGZ" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)WriteMapGZ((char const *)arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZ(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_WriteMapGZ__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_WriteMapGZ__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_TiXmlElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_int, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_WriteMapGZ__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_WriteMapGZ__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'WriteMapGZ'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    WriteMapGZ(char const *,TiXmlElement *,float *,int *,float,char *)\n"
    "    WriteMapGZ(char const *,float *,int *,float,int,char *)\n"
    "    WriteMapGZ(char const *,float *,int *,float,int)\n"
    "    WriteMapGZ(char const *,float *,int *,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ReadMapGZ__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ReadMapGZ",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadMapGZ" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadMapGZ" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ReadMapGZ" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ReadMapGZ" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)ReadMapGZ((char const *)arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadMapGZ__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  TiXmlElement **arg2 = (TiXmlElement **) 0 ;
  float **arg3 = (float **) 0 ;
  int *arg4 = (int *) 0 ;
  float arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ReadMapGZ",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadMapGZ" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_TiXmlElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadMapGZ" "', argument " "2"" of type '" "TiXmlElement **""'"); 
  }
  arg2 = reinterpret_cast< TiXmlElement ** >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ReadMapGZ" "', argument " "3"" of type '" "float **""'"); 
  }
  arg3 = reinterpret_cast< float ** >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ReadMapGZ" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ReadMapGZ" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)ReadMapGZ((char const *)arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadMapGZ(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ReadMapGZ__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_TiXmlElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_int, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ReadMapGZ__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ReadMapGZ'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ReadMapGZ(char const *,float *,int *,float)\n"
    "    ReadMapGZ(char const *,TiXmlElement **,float **,int *,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_WriteIndexGZinTwoColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:WriteIndexGZinTwoColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteIndexGZinTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WriteIndexGZinTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteIndexGZinTwoColumns" "', argument " "2"" of type '" "unsigned int *""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "WriteIndexGZinTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)WriteIndexGZinTwoColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadIndexGZfromTwoColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ReadIndexGZfromTwoColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadIndexGZfromTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReadIndexGZfromTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadIndexGZfromTwoColumns" "', argument " "2"" of type '" "unsigned int *""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ReadIndexGZfromTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)ReadIndexGZfromTwoColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteIndexGZTwoColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  int *arg2 = (int *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:WriteIndexGZTwoColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteIndexGZTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WriteIndexGZTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteIndexGZTwoColumns" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "WriteIndexGZTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)WriteIndexGZTwoColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadIndexGZTwoColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  int *arg2 = (int *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ReadIndexGZTwoColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadIndexGZTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReadIndexGZTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadIndexGZTwoColumns" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ReadIndexGZTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)ReadIndexGZTwoColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZOneColumns__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  float arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:WriteMapGZOneColumns",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WriteMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZOneColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "WriteMapGZOneColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "WriteMapGZOneColumns" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)WriteMapGZOneColumns(arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZOneColumns__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:WriteMapGZOneColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WriteMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZOneColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "WriteMapGZOneColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)WriteMapGZOneColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZOneColumns(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_WriteMapGZOneColumns__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_WriteMapGZOneColumns__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'WriteMapGZOneColumns'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    WriteMapGZOneColumns(gzFile,float *,unsigned int,float)\n"
    "    WriteMapGZOneColumns(gzFile,float *,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ReadMapGZOneColumns__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  float arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ReadMapGZOneColumns",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReadMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadMapGZOneColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ReadMapGZOneColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ReadMapGZOneColumns" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)ReadMapGZOneColumns(arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadMapGZOneColumns__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ReadMapGZOneColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReadMapGZOneColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadMapGZOneColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ReadMapGZOneColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)ReadMapGZOneColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadMapGZOneColumns(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ReadMapGZOneColumns__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ReadMapGZOneColumns__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ReadMapGZOneColumns'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ReadMapGZOneColumns(gzFile,float *,unsigned int,float)\n"
    "    ReadMapGZOneColumns(gzFile,float *,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_WriteMapGZTwoColumns__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  float arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:WriteMapGZTwoColumns",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WriteMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZTwoColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "WriteMapGZTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "WriteMapGZTwoColumns" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)WriteMapGZTwoColumns(arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZTwoColumns__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:WriteMapGZTwoColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WriteMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WriteMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WriteMapGZTwoColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "WriteMapGZTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)WriteMapGZTwoColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WriteMapGZTwoColumns(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_WriteMapGZTwoColumns__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_WriteMapGZTwoColumns__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'WriteMapGZTwoColumns'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    WriteMapGZTwoColumns(gzFile,float *,unsigned int,float)\n"
    "    WriteMapGZTwoColumns(gzFile,float *,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ReadMapGZTwoColumns__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  float arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ReadMapGZTwoColumns",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReadMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadMapGZTwoColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ReadMapGZTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ReadMapGZTwoColumns" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)ReadMapGZTwoColumns(arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadMapGZTwoColumns__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gzFile arg1 ;
  float *arg2 = (float *) 0 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ReadMapGZTwoColumns",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_gzFile,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReadMapGZTwoColumns" "', argument " "1"" of type '" "gzFile""'");
    } else {
      gzFile * temp = reinterpret_cast< gzFile * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReadMapGZTwoColumns" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ReadMapGZTwoColumns" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (int)ReadMapGZTwoColumns(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReadMapGZTwoColumns(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ReadMapGZTwoColumns__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_gzFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ReadMapGZTwoColumns__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ReadMapGZTwoColumns'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ReadMapGZTwoColumns(gzFile,float *,unsigned int,float)\n"
    "    ReadMapGZTwoColumns(gzFile,float *,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ConvertToPBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ConvertToPBC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToPBC" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConvertToPBC" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToPBC" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvertToPBC" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ConvertToPBC" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvertToPBC" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ConvertToPBC" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  {
    try {
      result = (int)ConvertToPBC(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RemovePBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:RemovePBC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RemovePBC" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RemovePBC" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RemovePBC" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "RemovePBC" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "RemovePBC" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "RemovePBC" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "RemovePBC" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  {
    try {
      result = (int)RemovePBC(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorIntField3D__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VectorIntField3D")) SWIG_fail;
  {
    try {
      result = (VectorIntField3D *)new VectorIntField3D();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorIntField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorIntField3D__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  float arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  VectorIntField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_VectorIntField3D",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorIntField3D" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorIntField3D" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorIntField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (VectorIntField3D *)new VectorIntField3D(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorIntField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorIntField3D__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  int arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  VectorIntField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_VectorIntField3D",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorIntField3D" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorIntField3D" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorIntField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_VectorIntField3D" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_VectorIntField3D" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (VectorIntField3D *)new VectorIntField3D(arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorIntField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorIntField3D__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  float arg2 ;
  int arg3 ;
  int **arg4 = (int **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  VectorIntField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_VectorIntField3D",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorIntField3D" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorIntField3D" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorIntField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_VectorIntField3D" "', argument " "4"" of type '" "int **""'"); 
  }
  arg4 = reinterpret_cast< int ** >(argp4);
  {
    try {
      result = (VectorIntField3D *)new VectorIntField3D(arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorIntField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorIntField3D__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  VectorIntField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorIntField3D",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorIntField3D" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try {
      result = (VectorIntField3D *)new VectorIntField3D((char const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorIntField3D, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorIntField3D(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VectorIntField3D__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorIntField3D__SWIG_4(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_VectorIntField3D__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_p_int, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_VectorIntField3D__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_VectorIntField3D__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_VectorIntField3D'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    VectorIntField3D::VectorIntField3D()\n"
    "    VectorIntField3D::VectorIntField3D(int *,float,int)\n"
    "    VectorIntField3D::VectorIntField3D(int,int,int,float,int)\n"
    "    VectorIntField3D::VectorIntField3D(int *,float,int,int **)\n"
    "    VectorIntField3D::VectorIntField3D(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_VectorIntField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VectorIntField3D",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorIntField3D" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_amode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  VectorIntField3D::AllocMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_amode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_amode_set" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_amode_set" "', argument " "2"" of type '" "VectorIntField3D::AllocMode""'");
  } 
  arg2 = static_cast< VectorIntField3D::AllocMode >(val2);
  if (arg1) (arg1)->amode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_amode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VectorIntField3D::AllocMode result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_amode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_amode_get" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  result = (VectorIntField3D::AllocMode) ((arg1)->amode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_InitZero" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_Clear" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GridSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_GridSize_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GridSize_set" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorIntField3D_GridSize_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->GridSize[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GridSize""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GridSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_GridSize_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GridSize_get" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  result = (int *)(int *) ((arg1)->GridSize);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GridScale_set" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GridScale_get" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_Nelem_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_Nelem_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_Nelem_set" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_Nelem_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Nelem = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_Nelem_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_Nelem_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_Nelem_get" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  result = (int) ((arg1)->Nelem);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_V_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int **arg2 = (int **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_V_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_V_set" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorIntField3D_V_set" "', argument " "2"" of type '" "int **""'"); 
  }
  arg2 = reinterpret_cast< int ** >(argp2);
  if (arg1) (arg1)->V = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_V_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_V_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_V_get" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  result = (int **) ((arg1)->V);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_SetVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorIntField3D_SetVectorField3D",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_SetVectorField3D" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorIntField3D_SetVectorField3D" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorIntField3D_SetVectorField3D" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorIntField3D_SetVectorField3D" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->SetVectorField3D(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_ReadFromFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_ReadFromFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_ReadFromFile" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorIntField3D_ReadFromFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadFromFile((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_WriteToFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorIntField3D_WriteToFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_WriteToFile" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorIntField3D_WriteToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorIntField3D_WriteToFile" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->WriteToFile((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_WriteToFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_WriteToFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_WriteToFile" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorIntField3D_WriteToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteToFile((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_WriteToFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_VectorIntField3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorIntField3D_WriteToFile__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_VectorIntField3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorIntField3D_WriteToFile__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VectorIntField3D_WriteToFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    VectorIntField3D::WriteToFile(char const *,int)\n"
    "    VectorIntField3D::WriteToFile(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GetNelem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_GetNelem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GetNelem" "', argument " "1"" of type '" "VectorIntField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  {
    try {
      result = (int)((VectorIntField3D const *)arg1)->GetNelem();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GetNx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_GetNx",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GetNx" "', argument " "1"" of type '" "VectorIntField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  {
    try {
      result = (int)((VectorIntField3D const *)arg1)->GetNx();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GetNy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_GetNy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GetNy" "', argument " "1"" of type '" "VectorIntField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  {
    try {
      result = (int)((VectorIntField3D const *)arg1)->GetNy();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GetNz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorIntField3D_GetNz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GetNz" "', argument " "1"" of type '" "VectorIntField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  {
    try {
      result = (int)((VectorIntField3D const *)arg1)->GetNz();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:VectorIntField3D_GetValue",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GetValue" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_GetValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorIntField3D_GetValue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorIntField3D_GetValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorIntField3D_GetValue" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (int)(arg1)->GetValue(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_SetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:VectorIntField3D_SetValue",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_SetValue" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_SetValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorIntField3D_SetValue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorIntField3D_SetValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorIntField3D_SetValue" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VectorIntField3D_SetValue" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      (arg1)->SetValue(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_GetValueByGrdNmb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorIntField3D_GetValueByGrdNmb",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_GetValueByGrdNmb" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_GetValueByGrdNmb" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorIntField3D_GetValueByGrdNmb" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->GetValueByGrdNmb(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_SetValueByGrdNmb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorIntField3D_SetValueByGrdNmb",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_SetValueByGrdNmb" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_SetValueByGrdNmb" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorIntField3D_SetValueByGrdNmb" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorIntField3D_SetValueByGrdNmb" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      (arg1)->SetValueByGrdNmb(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorIntField3D_FillValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorIntField3D *arg1 = (VectorIntField3D *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorIntField3D_FillValue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorIntField3D_FillValue" "', argument " "1"" of type '" "VectorIntField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorIntField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorIntField3D_FillValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->FillValue(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorIntField3D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_VectorIntField3D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_VectorField3D__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VectorField3D")) SWIG_fail;
  {
    try {
      result = (VectorField3D *)new VectorField3D();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorField3D__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  float arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_VectorField3D",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorField3D" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorField3D" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (VectorField3D *)new VectorField3D(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorField3D__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  int arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_VectorField3D",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorField3D" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorField3D" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_VectorField3D" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_VectorField3D" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (VectorField3D *)new VectorField3D(arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorField3D__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  float arg2 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_VectorField3D",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorField3D" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorField3D" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_VectorField3D" "', argument " "4"" of type '" "float **""'"); 
  }
  arg4 = reinterpret_cast< float ** >(argp4);
  {
    try {
      result = (VectorField3D *)new VectorField3D(arg1,arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorField3D__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  float arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_VectorField3D",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorField3D" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorField3D" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (VectorField3D *)new VectorField3D((char const *)arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorField3D__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorField3D",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorField3D" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try {
      result = (VectorField3D *)new VectorField3D((char const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorField3D(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VectorField3D__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorField3D__SWIG_5(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_VectorField3D__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_VectorField3D__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_VectorField3D__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_VectorField3D__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_VectorField3D'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    VectorField3D::VectorField3D()\n"
    "    VectorField3D::VectorField3D(int *,float,int)\n"
    "    VectorField3D::VectorField3D(int,int,int,float,int)\n"
    "    VectorField3D::VectorField3D(int *,float,int,float **)\n"
    "    VectorField3D::VectorField3D(char const *,float)\n"
    "    VectorField3D::VectorField3D(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_VectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VectorField3D",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorField3D" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_amode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D::AllocMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_amode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_amode_set" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_amode_set" "', argument " "2"" of type '" "VectorField3D::AllocMode""'");
  } 
  arg2 = static_cast< VectorField3D::AllocMode >(val2);
  if (arg1) (arg1)->amode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_amode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VectorField3D::AllocMode result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_amode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_amode_get" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  result = (VectorField3D::AllocMode) ((arg1)->amode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_InitZero" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_Clear" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GridSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_GridSize_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GridSize_set" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_GridSize_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->GridSize[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GridSize""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GridSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_GridSize_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GridSize_get" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  result = (int *)(int *) ((arg1)->GridSize);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GridScale_set" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GridScale_get" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_Nelem_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_Nelem_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_Nelem_set" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_Nelem_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Nelem = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_Nelem_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_Nelem_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_Nelem_get" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  result = (int) ((arg1)->Nelem);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_V_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float **arg2 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_V_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_V_set" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_V_set" "', argument " "2"" of type '" "float **""'"); 
  }
  arg2 = reinterpret_cast< float ** >(argp2);
  if (arg1) (arg1)->V = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_V_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_V_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_V_get" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  result = (float **) ((arg1)->V);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_GetField",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetField" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_GetField" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (float *)(arg1)->GetField(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_SetField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorField3D_SetField",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_SetField" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_SetField" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorField3D_SetField" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  {
    try {
      (arg1)->SetField(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_SetVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_SetVectorField3D",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_SetVectorField3D" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_SetVectorField3D" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_SetVectorField3D" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_SetVectorField3D" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->SetVectorField3D(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ReadFromFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorField3D_ReadFromFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ReadFromFile" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_ReadFromFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_ReadFromFile" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)(arg1)->ReadFromFile((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ReadFromFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_ReadFromFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ReadFromFile" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_ReadFromFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadFromFile((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ReadFromFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_VectorField3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorField3D_ReadFromFile__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_VectorField3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorField3D_ReadFromFile__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VectorField3D_ReadFromFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    VectorField3D::ReadFromFile(char const *,float)\n"
    "    VectorField3D::ReadFromFile(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorField3D_WriteToFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_WriteToFile",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_WriteToFile" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_WriteToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_WriteToFile" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_WriteToFile" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->WriteToFile((char const *)arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_WriteToFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorField3D_WriteToFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_WriteToFile" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_WriteToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_WriteToFile" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)(arg1)->WriteToFile((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_WriteToFile__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_WriteToFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_WriteToFile" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_WriteToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteToFile((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_WriteToFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_VectorField3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorField3D_WriteToFile__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_VectorField3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorField3D_WriteToFile__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_VectorField3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_VectorField3D_WriteToFile__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VectorField3D_WriteToFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    VectorField3D::WriteToFile(char const *,float,int)\n"
    "    VectorField3D::WriteToFile(char const *,float)\n"
    "    VectorField3D::WriteToFile(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorField3D_RMSD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_RMSD",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_RMSD" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_RMSD" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (float)(arg1)->RMSD(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_RMSDInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_RMSDInternal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_RMSDInternal" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_RMSDInternal" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (float)(arg1)->RMSDInternal(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetNelem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_GetNelem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetNelem" "', argument " "1"" of type '" "VectorField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  {
    try {
      result = (int)((VectorField3D const *)arg1)->GetNelem();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetNx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_GetNx",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetNx" "', argument " "1"" of type '" "VectorField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  {
    try {
      result = (int)((VectorField3D const *)arg1)->GetNx();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetNy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_GetNy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetNy" "', argument " "1"" of type '" "VectorField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  {
    try {
      result = (int)((VectorField3D const *)arg1)->GetNy();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetNz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorField3D_GetNz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetNz" "', argument " "1"" of type '" "VectorField3D const *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  {
    try {
      result = (int)((VectorField3D const *)arg1)->GetNz();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:VectorField3D_GetValue",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetValue" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_GetValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_GetValue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_GetValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_GetValue" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (float)(arg1)->GetValue(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetInterpolatedValueGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:VectorField3D_GetInterpolatedValueGrid",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetInterpolatedValueGrid" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_GetInterpolatedValueGrid" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_GetInterpolatedValueGrid" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_GetInterpolatedValueGrid" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_GetInterpolatedValueGrid" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (float)(arg1)->GetInterpolatedValueGrid(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_SetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:VectorField3D_SetValue",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_SetValue" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_SetValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_SetValue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_SetValue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_SetValue" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VectorField3D_SetValue" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      (arg1)->SetValue(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_GetValueByGrdNmb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorField3D_GetValueByGrdNmb",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_GetValueByGrdNmb" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_GetValueByGrdNmb" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_GetValueByGrdNmb" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (float)(arg1)->GetValueByGrdNmb(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_SetValueByGrdNmb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_SetValueByGrdNmb",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_SetValueByGrdNmb" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_SetValueByGrdNmb" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_SetValueByGrdNmb" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_SetValueByGrdNmb" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      (arg1)->SetValueByGrdNmb(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_FillValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_FillValue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_FillValue" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_FillValue" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->FillValue(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_MultiplyBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_MultiplyBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_MultiplyBy" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_MultiplyBy" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->MultiplyBy(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_MultiplyOneElementBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorField3D_MultiplyOneElementBy",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_MultiplyOneElementBy" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_MultiplyOneElementBy" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_MultiplyOneElementBy" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->MultiplyOneElementBy(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_MaskWithVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:VectorField3D_MaskWithVectorField3D",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_MaskWithVectorField3D" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_MaskWithVectorField3D" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_MaskWithVectorField3D" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_MaskWithVectorField3D" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_MaskWithVectorField3D" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->MaskWithVectorField3D(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_MaskWithVectorField3DUseOneElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:VectorField3D_MaskWithVectorField3DUseOneElement",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_MaskWithVectorField3DUseOneElement" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_MaskWithVectorField3DUseOneElement" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_MaskWithVectorField3DUseOneElement" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_MaskWithVectorField3DUseOneElement" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_MaskWithVectorField3DUseOneElement" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VectorField3D_MaskWithVectorField3DUseOneElement" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "VectorField3D_MaskWithVectorField3DUseOneElement" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->MaskWithVectorField3DUseOneElement(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_Copy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_Copy" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_Copy" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (int)(arg1)->Copy(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_CopyOneElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_CopyOneElement",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_CopyOneElement" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_CopyOneElement" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_CopyOneElement" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_CopyOneElement" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->CopyOneElement(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_AddVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_AddVectorField3D",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_AddVectorField3D" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_AddVectorField3D" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (int)(arg1)->AddVectorField3D(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_AddOneElementOfVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_AddOneElementOfVectorField3D",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_AddOneElementOfVectorField3D" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_AddOneElementOfVectorField3D" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_AddOneElementOfVectorField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_AddOneElementOfVectorField3D" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->AddOneElementOfVectorField3D(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_SubtractVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_SubtractVectorField3D",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_SubtractVectorField3D" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_SubtractVectorField3D" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (int)(arg1)->SubtractVectorField3D(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_SubtractOneElementOfVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_SubtractOneElementOfVectorField3D",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_SubtractOneElementOfVectorField3D" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_SubtractOneElementOfVectorField3D" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_SubtractOneElementOfVectorField3D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_SubtractOneElementOfVectorField3D" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->SubtractOneElementOfVectorField3D(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_MinMax(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:VectorField3D_MinMax",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_MinMax" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_MinMax" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorField3D_MinMax" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorField3D_MinMax" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorField3D_MinMax" "', argument " "5"" of type '" "int *""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "VectorField3D_MinMax" "', argument " "6"" of type '" "int *""'"); 
  }
  arg6 = reinterpret_cast< int * >(argp6);
  {
    try {
      (arg1)->MinMax(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ReadFromFileAddPBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:VectorField3D_ReadFromFileAddPBC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ReadFromFileAddPBC" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_ReadFromFileAddPBC" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_ReadFromFileAddPBC" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_ReadFromFileAddPBC" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_ReadFromFileAddPBC" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VectorField3D_ReadFromFileAddPBC" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    try {
      result = (int)(arg1)->ReadFromFileAddPBC((char const *)arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  bool *arg4 = (bool *) 0 ;
  int arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ" "', argument " "4"" of type '" "bool *""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (int)(arg1)->ReadFromFileAddPBCandSplitSDMPI4FDaZ((char const *)arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_SplitExtVF3DSDMPI4FDaZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_SplitExtVF3DSDMPI4FDaZ",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_SplitExtVF3DSDMPI4FDaZ" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_SplitExtVF3DSDMPI4FDaZ" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_SplitExtVF3DSDMPI4FDaZ" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_SplitExtVF3DSDMPI4FDaZ" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->SplitExtVF3DSDMPI4FDaZ(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_WriteToFileRemovePBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  int arg4 ;
  bool arg5 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:VectorField3D_WriteToFileRemovePBC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_WriteToFileRemovePBC" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_WriteToFileRemovePBC" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_WriteToFileRemovePBC" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_WriteToFileRemovePBC" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_WriteToFileRemovePBC" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VectorField3D_WriteToFileRemovePBC" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "VectorField3D_WriteToFileRemovePBC" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  {
    try {
      result = (int)(arg1)->WriteToFileRemovePBC((char const *)arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  int arg4 ;
  int *arg5 = (int *) 0 ;
  bool *arg6 = (bool *) 0 ;
  int arg7 ;
  int arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "5"" of type '" "int *""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "6"" of type '" "bool *""'"); 
  }
  arg6 = reinterpret_cast< bool * >(argp6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  ecode8 = SWIG_AsVal_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = static_cast< int >(val8);
  {
    try {
      result = (int)(arg1)->WriteToFileCombineSDMPIDistrRemovePBC((char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_CalcLinInterFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_CalcLinInterFloat",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_CalcLinInterFloat" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_CalcLinInterFloat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_CalcLinInterFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_CalcLinInterFloat" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (float)(arg1)->CalcLinInterFloat(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_InterpolateFromExt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_InterpolateFromExt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_InterpolateFromExt" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_InterpolateFromExt" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (int)(arg1)->InterpolateFromExt(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_InterpolateBoarderFromExt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_InterpolateBoarderFromExt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_InterpolateBoarderFromExt" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_InterpolateBoarderFromExt" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (int)(arg1)->InterpolateBoarderFromExt(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_InterpolateBoarderFromExtWithMultipl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorField3D_InterpolateBoarderFromExtWithMultipl",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_InterpolateBoarderFromExtWithMultipl" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_InterpolateBoarderFromExtWithMultipl" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_InterpolateBoarderFromExtWithMultipl" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)(arg1)->InterpolateBoarderFromExtWithMultipl(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_InterpolateInternalBoarderFromExt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_InterpolateInternalBoarderFromExt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_InterpolateInternalBoarderFromExt" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_InterpolateInternalBoarderFromExt" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorField3D_InterpolateInternalBoarderFromExt" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorField3D_InterpolateInternalBoarderFromExt" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  {
    try {
      result = (int)(arg1)->InterpolateInternalBoarderFromExt(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_InterpolateInternalBoarderFromExtWithMultipl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:VectorField3D_InterpolateInternalBoarderFromExtWithMultipl",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_InterpolateInternalBoarderFromExtWithMultipl" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_InterpolateInternalBoarderFromExtWithMultipl" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorField3D_InterpolateInternalBoarderFromExtWithMultipl" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorField3D_InterpolateInternalBoarderFromExtWithMultipl" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VectorField3D_InterpolateInternalBoarderFromExtWithMultipl" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->InterpolateInternalBoarderFromExtWithMultipl(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvFloatToIntUnitsX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_ConvFloatToIntUnitsX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvFloatToIntUnitsX" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvFloatToIntUnitsX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToIntUnitsX(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvFloatToIntUnitsY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_ConvFloatToIntUnitsY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvFloatToIntUnitsY" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvFloatToIntUnitsY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToIntUnitsY(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvFloatToIntUnitsZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_ConvFloatToIntUnitsZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvFloatToIntUnitsZ" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvFloatToIntUnitsZ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToIntUnitsZ(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvIntXYZToGrdPnt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_ConvIntXYZToGrdPnt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvIntXYZToGrdPnt" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvIntXYZToGrdPnt" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_ConvIntXYZToGrdPnt" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_ConvIntXYZToGrdPnt" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->ConvIntXYZToGrdPnt(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvExtXYZToGrdPnt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_ConvExtXYZToGrdPnt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvExtXYZToGrdPnt" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvExtXYZToGrdPnt" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_ConvExtXYZToGrdPnt" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_ConvExtXYZToGrdPnt" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->ConvExtXYZToGrdPnt(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvIntToExtUnitsX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_ConvIntToExtUnitsX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvIntToExtUnitsX" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvIntToExtUnitsX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvIntToExtUnitsX(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvIntToExtUnitsY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_ConvIntToExtUnitsY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvIntToExtUnitsY" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvIntToExtUnitsY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvIntToExtUnitsY(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_ConvIntToExtUnitsZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorField3D_ConvIntToExtUnitsZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_ConvIntToExtUnitsZ" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorField3D_ConvIntToExtUnitsZ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvIntToExtUnitsZ(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorField3D_AverageThrLaplas(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VectorField3D *arg1 = (VectorField3D *) 0 ;
  VectorIntField3D *arg2 = (VectorIntField3D *) 0 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VectorField3D_AverageThrLaplas",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorField3D_AverageThrLaplas" "', argument " "1"" of type '" "VectorField3D *""'"); 
  }
  arg1 = reinterpret_cast< VectorField3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorIntField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorField3D_AverageThrLaplas" "', argument " "2"" of type '" "VectorIntField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorIntField3D * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorField3D_AverageThrLaplas" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorField3D_AverageThrLaplas" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->AverageThrLaplas(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorField3D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_VectorField3D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MapsIOData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MapsIOData")) SWIG_fail;
  {
    try {
      result = (MapsIOData *)new MapsIOData();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MapsIOData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MapsIOData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MapsIOData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MapsIOData" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_DielectricConstantMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_DielectricConstantMap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_DielectricConstantMap_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_DielectricConstantMap_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_DielectricConstantMap_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->DielectricConstantMap = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_DielectricConstantMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_DielectricConstantMap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_DielectricConstantMap_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->DielectricConstantMap);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_DiffusionMapFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_DiffusionMapFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_DiffusionMapFile_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_DiffusionMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_DiffusionMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->DiffusionMapFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_DiffusionMapFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_DiffusionMapFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_DiffusionMapFile_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->DiffusionMapFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_DynamicChargeMapFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_DynamicChargeMapFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_DynamicChargeMapFile_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_DynamicChargeMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_DynamicChargeMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->DynamicChargeMapFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_DynamicChargeMapFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_DynamicChargeMapFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_DynamicChargeMapFile_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->DynamicChargeMapFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_StaticChargeMapFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_StaticChargeMapFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_StaticChargeMapFile_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_StaticChargeMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_StaticChargeMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->StaticChargeMapFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_StaticChargeMapFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_StaticChargeMapFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_StaticChargeMapFile_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->StaticChargeMapFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_PotentialMapFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_PotentialMapFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_PotentialMapFile_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_PotentialMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_PotentialMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->PotentialMapFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_PotentialMapFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_PotentialMapFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_PotentialMapFile_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->PotentialMapFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_PMFMapFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_PMFMapFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_PMFMapFile_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_PMFMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_PMFMapFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->PMFMapFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_PMFMapFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_PMFMapFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_PMFMapFile_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->PMFMapFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_PMFMapFile2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_PMFMapFile2_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_PMFMapFile2_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_PMFMapFile2_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_PMFMapFile2_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->PMFMapFile2 = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_PMFMapFile2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_PMFMapFile2_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_PMFMapFile2_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->PMFMapFile2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_NodeIndexingFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_NodeIndexingFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_NodeIndexingFile_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_NodeIndexingFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MapsIOData_NodeIndexingFile_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->NodeIndexingFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_NodeIndexingFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_NodeIndexingFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_NodeIndexingFile_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::string *) & ((arg1)->NodeIndexingFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_Mode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_Mode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_Mode_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MapsIOData_Mode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Mode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_Mode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_Mode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_Mode_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (int) ((arg1)->Mode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_ModeStr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = (std::vector< std::string,std::allocator< std::string > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_ModeStr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_ModeStr_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MapsIOData_ModeStr_set" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  if (arg1) (arg1)->ModeStr = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_ModeStr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_ModeStr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_ModeStr_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *)& ((arg1)->ModeStr);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_AddGroupStringSuffix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_AddGroupStringSuffix_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_AddGroupStringSuffix_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MapsIOData_AddGroupStringSuffix_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->AddGroupStringSuffix = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_AddGroupStringSuffix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_AddGroupStringSuffix_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_AddGroupStringSuffix_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (bool) ((arg1)->AddGroupStringSuffix);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_AddGroupNumberSuffix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MapsIOData_AddGroupNumberSuffix_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_AddGroupNumberSuffix_set" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MapsIOData_AddGroupNumberSuffix_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->AddGroupNumberSuffix = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MapsIOData_AddGroupNumberSuffix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MapsIOData *arg1 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MapsIOData_AddGroupNumberSuffix_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MapsIOData_AddGroupNumberSuffix_get" "', argument " "1"" of type '" "MapsIOData *""'"); 
  }
  arg1 = reinterpret_cast< MapsIOData * >(argp1);
  result = (bool) ((arg1)->AddGroupNumberSuffix);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MapsIOData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_MapsIOData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_NodeIndexMaxValues_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable NodeIndexMaxValues is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_NodeIndexMaxValues_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(NodeIndexMaxValues));
  return pyobj;
}


SWIGINTERN int Swig_var_MaxIonTypes_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable MaxIonTypes is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_MaxIonTypes_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(MaxIonTypes));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_NodeIndexing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_NodeIndexing")) SWIG_fail;
  {
    try {
      result = (NodeIndexing *)new NodeIndexing();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_NodeIndexing, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NodeIndexing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_NodeIndexing",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NodeIndexing" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_InitZero" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_EpsilonField_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_EpsilonField_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_EpsilonField_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_EpsilonField_set" "', argument " "2"" of type '" "NodeIndex [MaxIonTypes]""'"); 
  } 
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)MaxIonTypes; ++ii) *(NodeIndex *)&arg1->EpsilonField[ii] = *((NodeIndex *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""EpsilonField""' of type '""NodeIndex [MaxIonTypes]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_EpsilonField_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndex *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_EpsilonField_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_EpsilonField_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (NodeIndex *)(NodeIndex *) ((arg1)->EpsilonField);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_EpsilonFieldSft_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_EpsilonFieldSft_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_EpsilonFieldSft_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_EpsilonFieldSft_set" "', argument " "2"" of type '" "NodeIndex [MaxIonTypes]""'"); 
  } 
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)MaxIonTypes; ++ii) *(NodeIndex *)&arg1->EpsilonFieldSft[ii] = *((NodeIndex *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""EpsilonFieldSft""' of type '""NodeIndex [MaxIonTypes]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_EpsilonFieldSft_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndex *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_EpsilonFieldSft_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_EpsilonFieldSft_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (NodeIndex *)(NodeIndex *) ((arg1)->EpsilonFieldSft);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_IonField_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_IonField_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_IonField_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_IonField_set" "', argument " "2"" of type '" "NodeIndex [MaxIonTypes]""'"); 
  } 
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)MaxIonTypes; ++ii) *(NodeIndex *)&arg1->IonField[ii] = *((NodeIndex *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""IonField""' of type '""NodeIndex [MaxIonTypes]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_IonField_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndex *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_IonField_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_IonField_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (NodeIndex *)(NodeIndex *) ((arg1)->IonField);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_IonFieldSft_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_IonFieldSft_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_IonFieldSft_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_IonFieldSft_set" "', argument " "2"" of type '" "NodeIndex [MaxIonTypes]""'"); 
  } 
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)MaxIonTypes; ++ii) *(NodeIndex *)&arg1->IonFieldSft[ii] = *((NodeIndex *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""IonFieldSft""' of type '""NodeIndex [MaxIonTypes]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_IonFieldSft_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndex *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_IonFieldSft_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_IonFieldSft_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (NodeIndex *)(NodeIndex *) ((arg1)->IonFieldSft);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_DiffBoarderMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_DiffBoarderMask_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_DiffBoarderMask_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_DiffBoarderMask_set" "', argument " "2"" of type '" "NodeIndex [MaxIonTypes]""'"); 
  } 
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)MaxIonTypes; ++ii) *(NodeIndex *)&arg1->DiffBoarderMask[ii] = *((NodeIndex *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DiffBoarderMask""' of type '""NodeIndex [MaxIonTypes]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_DiffBoarderMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndex *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_DiffBoarderMask_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_DiffBoarderMask_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (NodeIndex *)(NodeIndex *) ((arg1)->DiffBoarderMask);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_DiffBoarderMaskSft_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_DiffBoarderMaskSft_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_DiffBoarderMaskSft_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_DiffBoarderMaskSft_set" "', argument " "2"" of type '" "NodeIndex [MaxIonTypes]""'"); 
  } 
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)MaxIonTypes; ++ii) *(NodeIndex *)&arg1->DiffBoarderMaskSft[ii] = *((NodeIndex *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DiffBoarderMaskSft""' of type '""NodeIndex [MaxIonTypes]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_DiffBoarderMaskSft_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndex *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_DiffBoarderMaskSft_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_DiffBoarderMaskSft_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (NodeIndex *)(NodeIndex *) ((arg1)->DiffBoarderMaskSft);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GridSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  unsigned int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_GridSize_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GridSize_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_GridSize_set" "', argument " "2"" of type '" "unsigned int [3]""'"); 
  } 
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(unsigned int *)&arg1->GridSize[ii] = *((unsigned int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GridSize""' of type '""unsigned int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GridSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GridSize_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GridSize_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (unsigned int *)(unsigned int *) ((arg1)->GridSize);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GridScale_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GridScale_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_Eps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_Eps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_Eps_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_Eps_set" "', argument " "2"" of type '" "float [NodeIndexMaxValues]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)NodeIndexMaxValues; ++ii) *(float *)&arg1->Eps[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Eps""' of type '""float [NodeIndexMaxValues]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_Eps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_Eps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_Eps_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (float *)(float *) ((arg1)->Eps);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_D_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_D_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_D_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_D_set" "', argument " "2"" of type '" "float [NodeIndexMaxValues]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)NodeIndexMaxValues; ++ii) *(float *)&arg1->D[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""D""' of type '""float [NodeIndexMaxValues]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_D_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_D_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_D_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (float *)(float *) ((arg1)->D);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_C_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_C_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_C_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_C_set" "', argument " "2"" of type '" "float [NodeIndexMaxValues]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)NodeIndexMaxValues; ++ii) *(float *)&arg1->C[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""C""' of type '""float [NodeIndexMaxValues]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_C_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_C_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_C_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (float *)(float *) ((arg1)->C);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_NIonsTypes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_NIonsTypes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_NIonsTypes_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_NIonsTypes_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->NIonsTypes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_NIonsTypes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_NIonsTypes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_NIonsTypes_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (int) ((arg1)->NIonsTypes);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_IonsQ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_IonsQ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_IonsQ_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_IonsQ_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->IonsQ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_IonsQ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_IonsQ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_IonsQ_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (float *) ((arg1)->IonsQ);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_NIndex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 = (NodeIndex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_NIndex_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_NIndex_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_NIndex_set" "', argument " "2"" of type '" "NodeIndex *""'"); 
  }
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  if (arg1) (arg1)->NIndex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_NIndex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndex *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_NIndex_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_NIndex_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (NodeIndex *) ((arg1)->NIndex);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_Q_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_Q_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_Q_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_Q_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Q = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_Q_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_Q_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_Q_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (float *) ((arg1)->Q);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_PBC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  bool *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_PBC_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_PBC_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_PBC_set" "', argument " "2"" of type '" "bool [3]""'"); 
  } 
  arg2 = reinterpret_cast< bool * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(bool *)&arg1->PBC[ii] = *((bool *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBC""' of type '""bool [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_PBC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_PBC_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_PBC_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (bool *)(bool *) ((arg1)->PBC);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetNoPBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_SetNoPBC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetNoPBC" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->SetNoPBC();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetPBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:NodeIndexing_SetPBC",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetPBC" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_SetPBC" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_SetPBC" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NodeIndexing_SetPBC" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = (int)(arg1)->SetPBC(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_QNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_QNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_QNum_set" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_QNum_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->QNum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_QNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_QNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_QNum_get" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  result = (int) ((arg1)->QNum);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetNx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GetNx",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetNx" "', argument " "1"" of type '" "NodeIndexing const *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)((NodeIndexing const *)arg1)->GetNx();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetNy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GetNy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetNy" "', argument " "1"" of type '" "NodeIndexing const *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)((NodeIndexing const *)arg1)->GetNy();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetNz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GetNz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetNz" "', argument " "1"" of type '" "NodeIndexing const *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)((NodeIndexing const *)arg1)->GetNz();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetDielConstInUse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_GetDielConstInUse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetDielConstInUse" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetDielConstInUse" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (float)(arg1)->GetDielConstInUse(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetDielConstInUse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_SetDielConstInUse",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetDielConstInUse" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_SetDielConstInUse" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_SetDielConstInUse" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->SetDielConstInUse(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetNNodes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_SetNNodes",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetNNodes" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_SetNNodes" "', argument " "2"" of type '" "unsigned int *""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_SetNNodes" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)(arg1)->SetNNodes(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetBlackAndWhiteNodes__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_SetBlackAndWhiteNodes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetBlackAndWhiteNodes" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_SetBlackAndWhiteNodes" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->SetBlackAndWhiteNodes(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetBlackAndWhiteNodes__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_SetBlackAndWhiteNodes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetBlackAndWhiteNodes" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->SetBlackAndWhiteNodes();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetBlackAndWhiteNodes(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_NodeIndexing, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_NodeIndexing_SetBlackAndWhiteNodes__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_NodeIndexing, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_NodeIndexing_SetBlackAndWhiteNodes__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'NodeIndexing_SetBlackAndWhiteNodes'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    NodeIndexing::SetBlackAndWhiteNodes(int)\n"
    "    NodeIndexing::SetBlackAndWhiteNodes()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetIndexFieldFromIntArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int *arg2 = (int *) 0 ;
  NodeIndexing::NodeIndexDescriptor arg3 ;
  NodeIndexing::NodeIndexDescriptor arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:NodeIndexing_SetIndexFieldFromIntArray",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetIndexFieldFromIntArray" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_SetIndexFieldFromIntArray" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_SetIndexFieldFromIntArray" "', argument " "3"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg3 = static_cast< NodeIndexing::NodeIndexDescriptor >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NodeIndexing_SetIndexFieldFromIntArray" "', argument " "4"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg4 = static_cast< NodeIndexing::NodeIndexDescriptor >(val4);
  {
    try {
      result = (int)(arg1)->SetIndexFieldFromIntArray(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetIonAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float **arg2 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_SetIonAccess",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetIonAccess" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_SetIonAccess" "', argument " "2"" of type '" "float **""'"); 
  }
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    try {
      result = (int)(arg1)->SetIonAccess(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetCMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndexing::NodeIndexDescriptor arg2 ;
  NodeIndex arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetCMap",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetCMap" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetCMap" "', argument " "2"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg2 = static_cast< NodeIndexing::NodeIndexDescriptor >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetCMap" "', argument " "3"" of type '" "NodeIndex""'");
  } 
  arg3 = static_cast< NodeIndex >(val3);
  {
    try {
      result = (float *)(arg1)->GetCMap(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetIntArrayFromIndexField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndexing::NodeIndexDescriptor arg2 ;
  NodeIndex arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetIntArrayFromIndexField",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetIntArrayFromIndexField" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetIntArrayFromIndexField" "', argument " "2"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg2 = static_cast< NodeIndexing::NodeIndexDescriptor >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetIntArrayFromIndexField" "', argument " "3"" of type '" "NodeIndex""'");
  } 
  arg3 = static_cast< NodeIndex >(val3);
  {
    try {
      result = (int *)(arg1)->GetIntArrayFromIndexField(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetField__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndexing::NodeIndexDescriptor arg2 ;
  NodeIndexing::NodeIndexDescriptor arg3 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:NodeIndexing_GetField",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetField" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetField" "', argument " "2"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg2 = static_cast< NodeIndexing::NodeIndexDescriptor >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetField" "', argument " "3"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg3 = static_cast< NodeIndexing::NodeIndexDescriptor >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "NodeIndexing_GetField" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try {
      result = (float *)(arg1)->GetField(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetField__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndexing::NodeIndexDescriptor arg2 ;
  NodeIndexing::NodeIndexDescriptor arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetField",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetField" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetField" "', argument " "2"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg2 = static_cast< NodeIndexing::NodeIndexDescriptor >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetField" "', argument " "3"" of type '" "NodeIndexing::NodeIndexDescriptor""'");
  } 
  arg3 = static_cast< NodeIndexing::NodeIndexDescriptor >(val3);
  {
    try {
      result = (float *)(arg1)->GetField(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetField(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_NodeIndexing, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_NodeIndexing_GetField__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_NodeIndexing, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_NodeIndexing_GetField__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'NodeIndexing_GetField'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    NodeIndexing::GetField(NodeIndexing::NodeIndexDescriptor,NodeIndexing::NodeIndexDescriptor,float *)\n"
    "    NodeIndexing::GetField(NodeIndexing::NodeIndexDescriptor,NodeIndexing::NodeIndexDescriptor)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_CalcDielBoarder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_CalcDielBoarder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_CalcDielBoarder" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->CalcDielBoarder();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_CalcDiffBoarder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_CalcDiffBoarder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_CalcDiffBoarder" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->CalcDiffBoarder();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_InsertSphereInDielMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:NodeIndexing_InsertSphereInDielMap",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_InsertSphereInDielMap" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_InsertSphereInDielMap" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_InsertSphereInDielMap" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NodeIndexing_InsertSphereInDielMap" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->InsertSphereInDielMap(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_CheckBoarder4Q(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_CheckBoarder4Q",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_CheckBoarder4Q" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->CheckBoarder4Q();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_CheckNodeIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_CheckNodeIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_CheckNodeIndex" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->CheckNodeIndex();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_RemoveBadDiffusionPoints(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_RemoveBadDiffusionPoints",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_RemoveBadDiffusionPoints" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->RemoveBadDiffusionPoints();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetChargeMapFromArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_SetChargeMapFromArray",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetChargeMapFromArray" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_SetChargeMapFromArray" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try {
      result = (int)(arg1)->SetChargeMapFromArray(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetChargeMapFromArrayNoQonBoarder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_SetChargeMapFromArrayNoQonBoarder",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetChargeMapFromArrayNoQonBoarder" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_SetChargeMapFromArrayNoQonBoarder" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try {
      result = (int)(arg1)->SetChargeMapFromArrayNoQonBoarder(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetChargeMapToZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_SetChargeMapToZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetChargeMapToZero" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->SetChargeMapToZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetChargeArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GetChargeArray",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetChargeArray" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (float *)(arg1)->GetChargeArray();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetChargeIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GetChargeIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetChargeIndex" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int *)(arg1)->GetChargeIndex();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_ReadFromFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_ReadFromFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_ReadFromFile" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_ReadFromFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadFromFile((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_ConvertToPBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndex *arg2 = (NodeIndex *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:NodeIndexing_ConvertToPBC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "2"" of type '" "NodeIndex *""'"); 
  }
  arg2 = reinterpret_cast< NodeIndex * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "NodeIndexing_ConvertToPBC" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  {
    try {
      result = (int)(arg1)->ConvertToPBC(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_ReadFromFileAddPBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:NodeIndexing_ReadFromFileAddPBC",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_ReadFromFileAddPBC" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_ReadFromFileAddPBC" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_ReadFromFileAddPBC" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NodeIndexing_ReadFromFileAddPBC" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "NodeIndexing_ReadFromFileAddPBC" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (int)(arg1)->ReadFromFileAddPBC((char const *)arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_ReadFromFile4SDMPI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  char *arg2 = (char *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_ReadFromFile4SDMPI",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_ReadFromFile4SDMPI" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_ReadFromFile4SDMPI" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NodeIndexing_ReadFromFile4SDMPI" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  {
    try {
      result = (int)(arg1)->ReadFromFile4SDMPI((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_WriteToFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_WriteToFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_WriteToFile" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_WriteToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteToFile((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetMyPart4MPI__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  NodeIndexing *arg3 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetMyPart4MPI",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetMyPart4MPI" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_GetMyPart4MPI" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NodeIndexing_GetMyPart4MPI" "', argument " "3"" of type '" "NodeIndexing *""'"); 
  }
  arg3 = reinterpret_cast< NodeIndexing * >(argp3);
  {
    try {
      result = (int)(arg1)->GetMyPart4MPI(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetMyPart4MPI__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_GetMyPart4MPI",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetMyPart4MPI" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_GetMyPart4MPI" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->GetMyPart4MPI(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetMyPart4MPI(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_NodeIndexing, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ContWorld, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_NodeIndexing_GetMyPart4MPI__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_NodeIndexing, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ContWorld, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_NodeIndexing, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_NodeIndexing_GetMyPart4MPI__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'NodeIndexing_GetMyPart4MPI'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    NodeIndexing::GetMyPart4MPI(ContWorld *,NodeIndexing *)\n"
    "    NodeIndexing::GetMyPart4MPI(ContWorld *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetCentralPartFromNIExtMyPart4MPI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  NodeIndexing *arg2 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NodeIndexing_GetCentralPartFromNIExtMyPart4MPI",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetCentralPartFromNIExtMyPart4MPI" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_GetCentralPartFromNIExtMyPart4MPI" "', argument " "2"" of type '" "NodeIndexing *""'"); 
  }
  arg2 = reinterpret_cast< NodeIndexing * >(argp2);
  {
    try {
      result = (int)(arg1)->GetCentralPartFromNIExtMyPart4MPI(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetDiel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetDiel",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetDiel" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetDiel" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetDiel" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->GetDiel(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetDielFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetDielFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetDielFloat" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetDielFloat" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetDielFloat" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (float)(arg1)->GetDielFloat(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetSCharDielMapForGAPS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  signed char **arg2 = (signed char **) 0 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_SetSCharDielMapForGAPS",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetSCharDielMapForGAPS" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeIndexing_SetSCharDielMapForGAPS" "', argument " "2"" of type '" "signed char **""'"); 
  }
  arg2 = reinterpret_cast< signed char ** >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NodeIndexing_SetSCharDielMapForGAPS" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  {
    try {
      result = (int)(arg1)->SetSCharDielMapForGAPS(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetDiel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:NodeIndexing_SetDiel",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetDiel" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_SetDiel" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_SetDiel" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NodeIndexing_SetDiel" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      (arg1)->SetDiel(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetIonField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetIonField",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetIonField" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetIonField" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetIonField" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->GetIonField(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetDiffFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetDiffFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetDiffFloat" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetDiffFloat" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetDiffFloat" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (float)(arg1)->GetDiffFloat(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetDiffDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetDiffDouble",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetDiffDouble" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetDiffDouble" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetDiffDouble" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (double)(arg1)->GetDiffDouble(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetConcFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_GetConcFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetConcFloat" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_GetConcFloat" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_GetConcFloat" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (float)(arg1)->GetConcFloat(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetIonField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:NodeIndexing_SetIonField",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetIonField" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_SetIonField" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_SetIonField" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NodeIndexing_SetIonField" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      (arg1)->SetIonField(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_GetDiffZeroInd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NodeIndexing_GetDiffZeroInd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_GetDiffZeroInd" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  {
    try {
      result = (int)(arg1)->GetDiffZeroInd();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeIndexing_SetDiffToZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NodeIndexing *arg1 = (NodeIndexing *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:NodeIndexing_SetDiffToZero",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeIndexing_SetDiffToZero" "', argument " "1"" of type '" "NodeIndexing *""'"); 
  }
  arg1 = reinterpret_cast< NodeIndexing * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NodeIndexing_SetDiffToZero" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NodeIndexing_SetDiffToZero" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      (arg1)->SetDiffToZero(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NodeIndexing_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_NodeIndexing, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ContWorld__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ContWorld")) SWIG_fail;
  {
    try {
      result = (ContWorld *)new ContWorld();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ContWorld__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  bool arg5 ;
  bool arg6 ;
  bool arg7 ;
  float arg8 ;
  float arg9 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_ContWorld",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ContWorld" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ContWorld" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ContWorld" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ContWorld" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ContWorld" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ContWorld" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ContWorld" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_ContWorld" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_ContWorld" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  {
    try {
      result = (ContWorld *)new ContWorld(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ContWorld__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  float arg2 ;
  bool *arg3 = (bool *) 0 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_ContWorld",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ContWorld" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ContWorld" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ContWorld" "', argument " "3"" of type '" "bool *""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ContWorld" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ContWorld" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  {
    try {
      result = (ContWorld *)new ContWorld(arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ContWorld(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[10] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 9) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ContWorld__SWIG_0(self, args);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_bool, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_ContWorld__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_ContWorld__SWIG_1(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ContWorld'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::ContWorld()\n"
    "    ContWorld::ContWorld(int,int,int,float,bool,bool,bool,float,float)\n"
    "    ContWorld::ContWorld(int *,float,bool *,int,float *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ContWorld",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ContWorld" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_InitZero" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Clear" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MyRank_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_MyRank_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MyRank_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_MyRank_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MyRank = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MyRank_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_MyRank_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MyRank_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->MyRank);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_NProcs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_NProcs_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_NProcs_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_NProcs_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->NProcs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_NProcs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_NProcs_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_NProcs_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->NProcs);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MyGlobalZ0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_MyGlobalZ0_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MyGlobalZ0_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_MyGlobalZ0_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MyGlobalZ0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MyGlobalZ0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_MyGlobalZ0_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MyGlobalZ0_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->MyGlobalZ0);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MyGlobalZ1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_MyGlobalZ1_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MyGlobalZ1_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_MyGlobalZ1_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MyGlobalZ1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MyGlobalZ1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_MyGlobalZ1_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MyGlobalZ1_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->MyGlobalZ1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MPISpreadWorld_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int **arg2 = (int **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_MPISpreadWorld_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MPISpreadWorld_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_MPISpreadWorld_set" "', argument " "2"" of type '" "int **""'"); 
  }
  arg2 = reinterpret_cast< int ** >(argp2);
  if (arg1) (arg1)->MPISpreadWorld = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_MPISpreadWorld_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_MPISpreadWorld_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_MPISpreadWorld_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int **) ((arg1)->MPISpreadWorld);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_NIonsTypes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_NIonsTypes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_NIonsTypes_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_NIonsTypes_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->NIonsTypes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_NIonsTypes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_NIonsTypes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_NIonsTypes_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->NIonsTypes);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_IonsQ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_IonsQ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_IonsQ_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_IonsQ_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->IonsQ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_IonsQ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_IonsQ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_IonsQ_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float *) ((arg1)->IonsQ);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GridSize_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSize_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_GridSize_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->GridSize[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GridSize""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GridSize_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSize_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int *)(int *) ((arg1)->GridSize);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeGlobal_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GridSizeGlobal_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeGlobal_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_GridSizeGlobal_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->GridSizeGlobal[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GridSizeGlobal""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeGlobal_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GridSizeGlobal_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeGlobal_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int *)(int *) ((arg1)->GridSizeGlobal);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeOriginal_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GridSizeOriginal_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeOriginal_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_GridSizeOriginal_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->GridSizeOriginal[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GridSizeOriginal""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeOriginal_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GridSizeOriginal_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeOriginal_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int *)(int *) ((arg1)->GridSizeOriginal);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_XYZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GS_XYZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_XYZ_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GS_XYZ_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_XYZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_XYZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GS_XYZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_XYZ_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->GS_XYZ);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GS_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_XY_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GS_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GS_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_XY_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->GS_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GS_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_X_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GS_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GS_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_X_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->GS_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_Y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GS_Y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_Y_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GS_Y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_Y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GS_Y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_Y_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->GS_Y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GS_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_Z_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GS_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GS_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GS_Z_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->GS_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeXYZGlobal_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GridSizeXYZGlobal_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeXYZGlobal_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GridSizeXYZGlobal_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GridSizeXYZGlobal = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeXYZGlobal_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GridSizeXYZGlobal_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeXYZGlobal_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->GridSizeXYZGlobal);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeXYZOriginal_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GridSizeXYZOriginal_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeXYZOriginal_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GridSizeXYZOriginal_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GridSizeXYZOriginal = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridSizeXYZOriginal_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GridSizeXYZOriginal_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridSizeXYZOriginal_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->GridSizeXYZOriginal);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_startBlackAndWhite_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_startBlackAndWhite_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_startBlackAndWhite_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_startBlackAndWhite_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->startBlackAndWhite = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_startBlackAndWhite_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_startBlackAndWhite_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_startBlackAndWhite_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->startBlackAndWhite);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridScale_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GridScale_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_NIndexing_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  NodeIndexing *arg2 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_NIndexing_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_NIndexing_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_NodeIndexing, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_NIndexing_set" "', argument " "2"" of type '" "NodeIndexing *""'"); 
  }
  arg2 = reinterpret_cast< NodeIndexing * >(argp2);
  if (arg1) (arg1)->NIndexing = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_NIndexing_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NodeIndexing *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_NIndexing_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_NIndexing_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (NodeIndexing *) ((arg1)->NIndexing);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_NodeIndexing, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Epsilon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_Epsilon_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Epsilon_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_Epsilon_set" "', argument " "2"" of type '" "float *[3]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(float * *)&arg1->Epsilon[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Epsilon""' of type '""float *[3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Epsilon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_Epsilon_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Epsilon_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float **)(float **) ((arg1)->Epsilon);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Qstat_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_Qstat_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Qstat_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_Qstat_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Qstat = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Qstat_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_Qstat_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Qstat_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float *) ((arg1)->Qstat);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_C_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float **arg2 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_C_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_C_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_C_set" "', argument " "2"" of type '" "float **""'"); 
  }
  arg2 = reinterpret_cast< float ** >(argp2);
  if (arg1) (arg1)->C = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_C_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_C_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_C_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float **) ((arg1)->C);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_CDouble_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  double **arg2 = (double **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_CDouble_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_CDouble_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_CDouble_set" "', argument " "2"" of type '" "double **""'"); 
  }
  arg2 = reinterpret_cast< double ** >(argp2);
  if (arg1) (arg1)->CDouble = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_CDouble_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_CDouble_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_CDouble_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (double **) ((arg1)->CDouble);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_D_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float **arg2 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_D_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_D_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_D_set" "', argument " "2"" of type '" "float **""'"); 
  }
  arg2 = reinterpret_cast< float ** >(argp2);
  if (arg1) (arg1)->D = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_D_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_D_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_D_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float **) ((arg1)->D);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_PMF_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float **arg2 = (float **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_PMF_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_PMF_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_PMF_set" "', argument " "2"" of type '" "float **""'"); 
  }
  arg2 = reinterpret_cast< float ** >(argp2);
  if (arg1) (arg1)->PMF = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_PMF_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_PMF_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_PMF_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float **) ((arg1)->PMF);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Potential_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_Potential_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Potential_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_Potential_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Potential = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Potential_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_Potential_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Potential_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (float *) ((arg1)->Potential);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_PotentialDouble_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_PotentialDouble_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_PotentialDouble_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_PotentialDouble_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->PotentialDouble = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_PotentialDouble_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_PotentialDouble_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_PotentialDouble_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (double *) ((arg1)->PotentialDouble);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_PBC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  bool *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_PBC_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_PBC_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_PBC_set" "', argument " "2"" of type '" "bool [3]""'"); 
  } 
  arg2 = reinterpret_cast< bool * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(bool *)&arg1->PBC[ii] = *((bool *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBC""' of type '""bool [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_PBC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_PBC_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_PBC_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (bool *)(bool *) ((arg1)->PBC);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_BoundaryCondition_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_BoundaryCondition_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_BoundaryCondition_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_BoundaryCondition_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BoundaryCondition = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_BoundaryCondition_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_BoundaryCondition_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_BoundaryCondition_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (int) ((arg1)->BoundaryCondition);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_SystemEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_SystemEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_SystemEnergy_set" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_SystemEnergy_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->SystemEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_SystemEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_SystemEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_SystemEnergy_get" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  result = (double) ((arg1)->SystemEnergy);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_SetContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  bool *arg4 = (bool *) 0 ;
  int arg5 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ContWorld_SetContWorld",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_SetContWorld" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_SetContWorld" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_SetContWorld" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ContWorld_SetContWorld" "', argument " "4"" of type '" "bool *""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ContWorld_SetContWorld" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ContWorld_SetContWorld" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      result = (int)(arg1)->SetContWorld(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_SetContWorldNoMobIons(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:ContWorld_SetContWorldNoMobIons",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "ContWorld_SetContWorldNoMobIons" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  {
    try {
      result = (int)(arg1)->SetContWorldNoMobIons(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_SetContWorldTwoMobIons(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  float arg9 ;
  float arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:ContWorld_SetContWorldTwoMobIons",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "ContWorld_SetContWorldTwoMobIons" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  {
    try {
      result = (int)(arg1)->SetContWorldTwoMobIons(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_Print(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_Print",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_Print" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)(arg1)->Print();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  MapsIOData *arg2 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ReadMaps",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadMaps" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadMaps" "', argument " "2"" of type '" "MapsIOData *""'"); 
  }
  arg2 = reinterpret_cast< MapsIOData * >(argp2);
  {
    try {
      result = (int)(arg1)->ReadMaps(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  MapsIOData *arg2 = (MapsIOData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_WriteMaps",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteMaps" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_MapsIOData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteMaps" "', argument " "2"" of type '" "MapsIOData *""'"); 
  }
  arg2 = reinterpret_cast< MapsIOData * >(argp2);
  {
    try {
      result = (int)(arg1)->WriteMaps(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_CheckGridOfVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ContWorld_CheckGridOfVectorField3D",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_CheckGridOfVectorField3D" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_CheckGridOfVectorField3D" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_CheckGridOfVectorField3D" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ContWorld_CheckGridOfVectorField3D" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContWorld_CheckGridOfVectorField3D" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  {
    try {
      result = (VectorField3D *)(arg1)->CheckGridOfVectorField3D(arg2,arg3,(char const *)arg4,(char const *)arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_SaveQstPhi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_SaveQstPhi",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_SaveQstPhi" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_SaveQstPhi" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->SaveQstPhi((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadPotential(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ReadPotential",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadPotential" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadPotential" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadPotential((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadPotentialChargeZRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_ReadPotentialChargeZRange",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadPotentialChargeZRange" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadPotentialChargeZRange" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_ReadPotentialChargeZRange" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_ReadPotentialChargeZRange" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->ReadPotentialChargeZRange((char const *)arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WritePotential__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_WritePotential",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WritePotential" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WritePotential" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_WritePotential" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->WritePotential((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WritePotential__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_WritePotential",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WritePotential" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WritePotential" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WritePotential((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WritePotential(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContWorld_WritePotential__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ContWorld_WritePotential__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContWorld_WritePotential'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::WritePotential(char const *,int)\n"
    "    ContWorld::WritePotential(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadPMF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_ReadPMF",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadPMF" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadPMF" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_ReadPMF" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      result = (int)(arg1)->ReadPMF((char const *)arg2,(char const *)arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WritePMF__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_WritePMF",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WritePMF" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WritePMF" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_WritePMF" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->WritePMF((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WritePMF__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_WritePMF",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WritePMF" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WritePMF" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WritePMF((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WritePMF(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContWorld_WritePMF__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ContWorld_WritePMF__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContWorld_WritePMF'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::WritePMF(char const *,int)\n"
    "    ContWorld::WritePMF(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadNodeIndexing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ReadNodeIndexing",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadNodeIndexing" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadNodeIndexing" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadNodeIndexing((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteNodeIndexing__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_WriteNodeIndexing",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteNodeIndexing" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteNodeIndexing" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_WriteNodeIndexing" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->WriteNodeIndexing((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteNodeIndexing__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_WriteNodeIndexing",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteNodeIndexing" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteNodeIndexing" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteNodeIndexing((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteNodeIndexing(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContWorld_WriteNodeIndexing__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ContWorld_WriteNodeIndexing__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContWorld_WriteNodeIndexing'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::WriteNodeIndexing(char const *,int)\n"
    "    ContWorld::WriteNodeIndexing(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteContTop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_WriteContTop",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteContTop" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteContTop" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_WriteContTop" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->WriteContTop((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteContTop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_WriteContTop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteContTop" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteContTop" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteContTop((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteContTop(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContWorld_WriteContTop__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ContWorld_WriteContTop__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContWorld_WriteContTop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::WriteContTop(char const *,int)\n"
    "    ContWorld::WriteContTop(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadDynamicCharge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ReadDynamicCharge",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadDynamicCharge" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadDynamicCharge" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadDynamicCharge((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadDynamicChargeZRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_ReadDynamicChargeZRange",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadDynamicChargeZRange" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadDynamicChargeZRange" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_ReadDynamicChargeZRange" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_ReadDynamicChargeZRange" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->ReadDynamicChargeZRange((char const *)arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteDynamicCharge__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_WriteDynamicCharge",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteDynamicCharge" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteDynamicCharge" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_WriteDynamicCharge" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->WriteDynamicCharge((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteDynamicCharge__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_WriteDynamicCharge",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteDynamicCharge" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteDynamicCharge" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteDynamicCharge((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteDynamicCharge(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContWorld_WriteDynamicCharge__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ContWorld_WriteDynamicCharge__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContWorld_WriteDynamicCharge'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::WriteDynamicCharge(char const *,int)\n"
    "    ContWorld::WriteDynamicCharge(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadDiffusion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ReadDiffusion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadDiffusion" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadDiffusion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadDiffusion((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteDiffusion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_WriteDiffusion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteDiffusion" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteDiffusion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_WriteDiffusion" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->WriteDiffusion((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteDiffusion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_WriteDiffusion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_WriteDiffusion" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_WriteDiffusion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteDiffusion((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_WriteDiffusion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContWorld_WriteDiffusion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ContWorld_WriteDiffusion__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContWorld_WriteDiffusion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::WriteDiffusion(char const *,int)\n"
    "    ContWorld::WriteDiffusion(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContWorld_ReadVectorField3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_ReadVectorField3D",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ReadVectorField3D" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_ReadVectorField3D" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_ReadVectorField3D" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (VectorField3D *)(arg1)->ReadVectorField3D((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_BorderExchange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_BorderExchange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_BorderExchange" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_BorderExchange" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try {
      result = (int)(arg1)->BorderExchange(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_BorderExchangeInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_BorderExchangeInt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_BorderExchangeInt" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_BorderExchangeInt" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  {
    try {
      result = (int)(arg1)->BorderExchangeInt(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_BorderExchangeDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_BorderExchangeDouble",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_BorderExchangeDouble" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_BorderExchangeDouble" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  {
    try {
      result = (int)(arg1)->BorderExchangeDouble(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_CheckArrays(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_CheckArrays",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_CheckArrays" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_CheckArrays" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_CheckArrays" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (int)(arg1)->CheckArrays((char const *)arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_CheckSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_CheckSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_CheckSystem" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)(arg1)->CheckSystem();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_SetInitConcentrationFromNIndexing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_SetInitConcentrationFromNIndexing",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_SetInitConcentrationFromNIndexing" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)(arg1)->SetInitConcentrationFromNIndexing();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_convertRealToOriginalGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_convertRealToOriginalGrid",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_convertRealToOriginalGrid" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_convertRealToOriginalGrid" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_convertRealToOriginalGrid" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  {
    try {
      result = (int)(arg1)->convertRealToOriginalGrid(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_convertOriginalToRealGrid__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_convertOriginalToRealGrid",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_convertOriginalToRealGrid" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_convertOriginalToRealGrid" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_convertOriginalToRealGrid" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  {
    try {
      result = (int)(arg1)->convertOriginalToRealGrid(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_convertOriginalToRealGrid__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_convertOriginalToRealGrid",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_convertOriginalToRealGrid" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_convertOriginalToRealGrid" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_convertOriginalToRealGrid" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  {
    try {
      result = (int)(arg1)->convertOriginalToRealGrid(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_convertOriginalToRealGrid(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ContWorld_convertOriginalToRealGrid__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ContWorld_convertOriginalToRealGrid__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContWorld_convertOriginalToRealGrid'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ContWorld::convertOriginalToRealGrid(float *,float *)\n"
    "    ContWorld::convertOriginalToRealGrid(int *,int *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvFloatToGlobIntUnitsX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvFloatToGlobIntUnitsX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvFloatToGlobIntUnitsX" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvFloatToGlobIntUnitsX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToGlobIntUnitsX(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvFloatToLocIntUnitsX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvFloatToLocIntUnitsX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvFloatToLocIntUnitsX" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvFloatToLocIntUnitsX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToLocIntUnitsX(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvFloatToGlobIntUnitsY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvFloatToGlobIntUnitsY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvFloatToGlobIntUnitsY" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvFloatToGlobIntUnitsY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToGlobIntUnitsY(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvFloatToLocIntUnitsY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvFloatToLocIntUnitsY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvFloatToLocIntUnitsY" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvFloatToLocIntUnitsY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToLocIntUnitsY(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvFloatToGlobIntUnitsZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvFloatToGlobIntUnitsZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvFloatToGlobIntUnitsZ" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvFloatToGlobIntUnitsZ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToGlobIntUnitsZ(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvFloatToLocIntUnitsZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvFloatToLocIntUnitsZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvFloatToLocIntUnitsZ" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvFloatToLocIntUnitsZ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvFloatToLocIntUnitsZ(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvGlobalIntenalXYZToGrdPnt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_ConvGlobalIntenalXYZToGrdPnt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvGlobalIntenalXYZToGrdPnt" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvGlobalIntenalXYZToGrdPnt" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_ConvGlobalIntenalXYZToGrdPnt" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_ConvGlobalIntenalXYZToGrdPnt" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->ConvGlobalIntenalXYZToGrdPnt(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvGlobalExternalXYZToGrdPnt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_ConvGlobalExternalXYZToGrdPnt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvGlobalExternalXYZToGrdPnt" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvGlobalExternalXYZToGrdPnt" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_ConvGlobalExternalXYZToGrdPnt" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_ConvGlobalExternalXYZToGrdPnt" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->ConvGlobalExternalXYZToGrdPnt(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvGlobIntToGlobExtUnitsX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvGlobIntToGlobExtUnitsX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvGlobIntToGlobExtUnitsX" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvGlobIntToGlobExtUnitsX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvGlobIntToGlobExtUnitsX(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvGlobIntToGlobExtUnitsY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvGlobIntToGlobExtUnitsY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvGlobIntToGlobExtUnitsY" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvGlobIntToGlobExtUnitsY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvGlobIntToGlobExtUnitsY(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvGlobIntToGlobExtUnitsZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContWorld_ConvGlobIntToGlobExtUnitsZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvGlobIntToGlobExtUnitsZ" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ConvGlobIntToGlobExtUnitsZ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->ConvGlobIntToGlobExtUnitsZ(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_GetBorder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_GetBorder",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_GetBorder" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_GetBorder" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_GetBorder" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_GetBorder" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->GetBorder(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_AddPotential(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ContWorld_AddPotential",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_AddPotential" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_AddPotential" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContWorld_AddPotential" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_AddPotential" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ContWorld_AddPotential" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->AddPotential(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_cxxApplyAsymConc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_cxxApplyAsymConc",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_cxxApplyAsymConc" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_cxxApplyAsymConc" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_cxxApplyAsymConc" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ContWorld_cxxApplyAsymConc" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try {
      result = (int)(arg1)->ApplyAsymConc(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ApplyAsymConcByScaling(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_ApplyAsymConcByScaling",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ApplyAsymConcByScaling" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_ApplyAsymConcByScaling" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_ApplyAsymConcByScaling" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ContWorld_ApplyAsymConcByScaling" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try {
      result = (int)(arg1)->ApplyAsymConcByScaling(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_ConvertIonStrengthToDynamicCharge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_ConvertIonStrengthToDynamicCharge",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_ConvertIonStrengthToDynamicCharge" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)(arg1)->ConvertIonStrengthToDynamicCharge();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_RemoveDiffusionPointsAtNegativeC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContWorld_RemoveDiffusionPointsAtNegativeC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_RemoveDiffusionPointsAtNegativeC" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)(arg1)->RemoveDiffusionPointsAtNegativeC();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_RemoveDiffusionPoints(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ContWorld_RemoveDiffusionPoints",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_RemoveDiffusionPoints" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContWorld_RemoveDiffusionPoints" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_RemoveDiffusionPoints" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContWorld_RemoveDiffusionPoints" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (int)(arg1)->RemoveDiffusionPoints(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContWorld_FindImplicitMembranePosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContWorld_FindImplicitMembranePosition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContWorld_FindImplicitMembranePosition" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContWorld_FindImplicitMembranePosition" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContWorld_FindImplicitMembranePosition" "', argument " "3"" of type '" "double *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  {
    try {
      result = (bool)(arg1)->FindImplicitMembranePosition(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ContWorld_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ContWorld, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ReadContWorldFromNodeIndexing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ReadContWorldFromNodeIndexing",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReadContWorldFromNodeIndexing" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try {
      result = (ContWorld *)ReadContWorldFromNodeIndexing((char const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FieldBW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_FieldBW")) SWIG_fail;
  {
    try {
      result = (FieldBW *)new FieldBW();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FieldBW, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FieldBW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_FieldBW",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FieldBW" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_B_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_B_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_B_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_B_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->B = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_B_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_B_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_B_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (float *) ((arg1)->B);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_W_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_W_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_W_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_W_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->W = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_W_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_W_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_W_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (float *) ((arg1)->W);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Borg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_Borg_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Borg_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_Borg_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Borg = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Borg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_Borg_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Borg_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (float *) ((arg1)->Borg);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Worg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_Worg_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Worg_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_Worg_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Worg = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Worg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_Worg_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Worg_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (float *) ((arg1)->Worg);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_GS_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_GS_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_GS_X_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FieldBW_GS_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_GS_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_GS_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_GS_X_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (int) ((arg1)->GS_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_GS_Y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_GS_Y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_GS_Y_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FieldBW_GS_Y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_GS_Y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_GS_Y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_GS_Y_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (int) ((arg1)->GS_Y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_GS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_GS_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_GS_Z_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FieldBW_GS_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_GS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_GS_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_GS_Z_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (int) ((arg1)->GS_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_StrideX_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_StrideX_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_StrideX_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FieldBW_StrideX_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->StrideX = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_StrideX_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_StrideX_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_StrideX_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (int) ((arg1)->StrideX);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_StrideXY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_StrideXY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_StrideXY_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FieldBW_StrideXY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->StrideXY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_StrideXY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_StrideXY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_StrideXY_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (int) ((arg1)->StrideXY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Bsize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_Bsize_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Bsize_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FieldBW_Bsize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Bsize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Bsize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_Bsize_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Bsize_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (int) ((arg1)->Bsize);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Wsize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_Wsize_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Wsize_set" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FieldBW_Wsize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Wsize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Wsize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FieldBW_Wsize_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Wsize_get" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  result = (int) ((arg1)->Wsize);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_Init",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_Init" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_Init" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  {
    try {
      (arg1)->Init(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_SameSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_SameSize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_SameSize" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_SameSize" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  {
    try {
      result = (bool)(arg1)->SameSize(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_SetFromField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_SetFromField",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_SetFromField" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_SetFromField" "', argument " "2"" of type '" "float const *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try {
      (arg1)->SetFromField((float const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_SetField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_SetField",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_SetField" "', argument " "1"" of type '" "FieldBW const *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_SetField" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try {
      ((FieldBW const *)arg1)->SetField(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FieldBW_BorderExchange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FieldBW *arg1 = (FieldBW *) 0 ;
  bool *arg2 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FieldBW_BorderExchange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FieldBW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FieldBW_BorderExchange" "', argument " "1"" of type '" "FieldBW *""'"); 
  }
  arg1 = reinterpret_cast< FieldBW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FieldBW_BorderExchange" "', argument " "2"" of type '" "bool const *""'"); 
  }
  arg2 = reinterpret_cast< bool * >(argp2);
  {
    try {
      (arg1)->BorderExchange((bool const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FieldBW_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FieldBW, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_float4_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:float4_x_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_x_set" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "float4_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float4_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:float4_x_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_x_get" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float4_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:float4_y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_y_set" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "float4_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float4_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:float4_y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_y_get" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float4_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:float4_z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_z_set" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "float4_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float4_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:float4_z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_z_get" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float4_w_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:float4_w_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_w_set" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "float4_w_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->w = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float4_w_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:float4_w_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float4_w_get" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  result = (float) ((arg1)->w);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_float4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_float4")) SWIG_fail;
  {
    try {
      result = (float4 *)new float4();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_float4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float4 *arg1 = (float4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_float4",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_float4" "', argument " "1"" of type '" "float4 *""'"); 
  }
  arg1 = reinterpret_cast< float4 * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *float4_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_float4, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_float3_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *arg1 = (float3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:float3_x_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float3_x_set" "', argument " "1"" of type '" "float3 *""'"); 
  }
  arg1 = reinterpret_cast< float3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "float3_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float3_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *arg1 = (float3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:float3_x_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float3_x_get" "', argument " "1"" of type '" "float3 *""'"); 
  }
  arg1 = reinterpret_cast< float3 * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float3_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *arg1 = (float3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:float3_y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float3_y_set" "', argument " "1"" of type '" "float3 *""'"); 
  }
  arg1 = reinterpret_cast< float3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "float3_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float3_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *arg1 = (float3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:float3_y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float3_y_get" "', argument " "1"" of type '" "float3 *""'"); 
  }
  arg1 = reinterpret_cast< float3 * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float3_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *arg1 = (float3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:float3_z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float3_z_set" "', argument " "1"" of type '" "float3 *""'"); 
  }
  arg1 = reinterpret_cast< float3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "float3_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_float3_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *arg1 = (float3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:float3_z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "float3_z_get" "', argument " "1"" of type '" "float3 *""'"); 
  }
  arg1 = reinterpret_cast< float3 * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_float3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_float3")) SWIG_fail;
  {
    try {
      result = (float3 *)new float3();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_float3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float3 *arg1 = (float3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_float3",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_float3" "', argument " "1"" of type '" "float3 *""'"); 
  }
  arg1 = reinterpret_cast< float3 * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *float3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_float3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_int3_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *arg1 = (int3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int3_x_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int3_x_set" "', argument " "1"" of type '" "int3 *""'"); 
  }
  arg1 = reinterpret_cast< int3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int3_x_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int3_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *arg1 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int3_x_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int3_x_get" "', argument " "1"" of type '" "int3 *""'"); 
  }
  arg1 = reinterpret_cast< int3 * >(argp1);
  result = (int) ((arg1)->x);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int3_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *arg1 = (int3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int3_y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int3_y_set" "', argument " "1"" of type '" "int3 *""'"); 
  }
  arg1 = reinterpret_cast< int3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int3_y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int3_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *arg1 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int3_y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int3_y_get" "', argument " "1"" of type '" "int3 *""'"); 
  }
  arg1 = reinterpret_cast< int3 * >(argp1);
  result = (int) ((arg1)->y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int3_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *arg1 = (int3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int3_z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int3_z_set" "', argument " "1"" of type '" "int3 *""'"); 
  }
  arg1 = reinterpret_cast< int3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int3_z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int3_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *arg1 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int3_z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int3_z_get" "', argument " "1"" of type '" "int3 *""'"); 
  }
  arg1 = reinterpret_cast< int3 * >(argp1);
  result = (int) ((arg1)->z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_int3")) SWIG_fail;
  {
    try {
      result = (int3 *)new int3();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_int3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int3 *arg1 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_int3",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_int3" "', argument " "1"" of type '" "int3 *""'"); 
  }
  arg1 = reinterpret_cast< int3 * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *int3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_int3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_int4_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int4_x_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_x_set" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int4_x_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int4_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int4_x_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_x_get" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  result = (int) ((arg1)->x);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int4_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int4_y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_y_set" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int4_y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int4_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int4_y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_y_get" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  result = (int) ((arg1)->y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int4_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int4_z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_z_set" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int4_z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int4_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int4_z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_z_get" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  result = (int) ((arg1)->z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int4_w_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int4_w_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_w_set" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int4_w_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->w = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int4_w_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int4_w_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int4_w_get" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  result = (int) ((arg1)->w);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_int4")) SWIG_fail;
  {
    try {
      result = (int4 *)new int4();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_int4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int4 *arg1 = (int4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_int4",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_int4" "', argument " "1"" of type '" "int4 *""'"); 
  }
  arg1 = reinterpret_cast< int4 * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *int4_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_int4, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_GS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_GS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_GS_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_GS_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->GS[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GS""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_GS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_GS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_GS_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int *)(int *) ((arg1)->GS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_GridScale_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_GridScale_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_spltGSWBC_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->spltGSWBC[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""spltGSWBC""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_spltGSWBC_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int *)(int *) ((arg1)->spltGSWBC);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_spltGSWBC_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_X_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_spltGSWBC_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_X_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_spltGSWBC_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_XY_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_spltGSWBC_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_XY_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_XYZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_spltGSWBC_XYZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_XYZ_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_XYZ_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XYZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_spltGSWBC_XYZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_spltGSWBC_XYZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_spltGSWBC_XYZ_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XYZ);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_P_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_P_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_P_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_P_set" "', argument " "2"" of type '" "float *[8]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(float * *)&arg1->P[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""P""' of type '""float *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_P_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_P_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_P_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (float **)(float **) ((arg1)->P);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_MaxIterations_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_MaxIterations_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_MaxIterations_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_MaxIterations_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIterations = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_MaxIterations_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_MaxIterations_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_MaxIterations_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int) ((arg1)->MaxIterations);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Relaxation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_Relaxation_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Relaxation_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_Relaxation_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Relaxation = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Relaxation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_Relaxation_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Relaxation_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (float) ((arg1)->Relaxation);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Qnum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_Qnum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Qnum_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_Qnum_set" "', argument " "2"" of type '" "int [8]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int *)&arg1->Qnum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qnum""' of type '""int [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Qnum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_Qnum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Qnum_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int *)(int *) ((arg1)->Qnum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Q_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_Q_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Q_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_Q_set" "', argument " "2"" of type '" "float *[8]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(float * *)&arg1->Q[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Q""' of type '""float *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Q_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_Q_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Q_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (float **)(float **) ((arg1)->Q);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Qmult_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_Qmult_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Qmult_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_Qmult_set" "', argument " "2"" of type '" "float *[8]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(float * *)&arg1->Qmult[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qmult""' of type '""float *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Qmult_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_Qmult_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Qmult_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (float **)(float **) ((arg1)->Qmult);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Qpos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_Qpos_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Qpos_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_Qpos_set" "', argument " "2"" of type '" "int *[8]""'"); 
  } 
  arg2 = reinterpret_cast< int ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int * *)&arg1->Qpos[ii] = *((int * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qpos""' of type '""int *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Qpos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_Qpos_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Qpos_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int **)(int **) ((arg1)->Qpos);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_DielBordNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_DielBordNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_DielBordNum_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_DielBordNum_set" "', argument " "2"" of type '" "int [8]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int *)&arg1->DielBordNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBordNum""' of type '""int [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_DielBordNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_DielBordNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_DielBordNum_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int *)(int *) ((arg1)->DielBordNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_DielMult_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  float *(*arg2)[6] ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_DielMult_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_DielMult_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_a_6__p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_DielMult_set" "', argument " "2"" of type '" "float *[8][6]""'"); 
  } 
  arg2 = reinterpret_cast< float *(*)[6] >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) {
        if (arg2[ii]) {
          size_t jj = 0;
          for (; jj < (size_t)6; ++jj) arg1->DielMult[ii][jj] = arg2[ii][jj];
        } else {
          SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielMult""' of type '""float *[8][6]""'");
        }
      }
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielMult""' of type '""float *[8][6]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_DielMult_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *(*result)[6] = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_DielMult_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_DielMult_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (float *(*)[6])(float *(*)[6]) ((arg1)->DielMult);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_a_6__p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_DielBordPos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_DielBordPos_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_DielBordPos_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCudaStruct_DielBordPos_set" "', argument " "2"" of type '" "int *[8]""'"); 
  } 
  arg2 = reinterpret_cast< int ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int * *)&arg1->DielBordPos[ii] = *((int * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBordPos""' of type '""int *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_DielBordPos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_DielBordPos_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_DielBordPos_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int **)(int **) ((arg1)->DielBordPos);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_ConvergenceCheck_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_ConvergenceCheck_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_ConvergenceCheck_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_ConvergenceCheck_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvergenceCheck = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_ConvergenceCheck_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_ConvergenceCheck_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_ConvergenceCheck_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int) ((arg1)->ConvergenceCheck);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Tolerance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_Tolerance_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Tolerance_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_Tolerance_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Tolerance = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_Tolerance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_Tolerance_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_Tolerance_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (double) ((arg1)->Tolerance);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_TotalEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_TotalEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_TotalEnergy_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_TotalEnergy_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->TotalEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_TotalEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_TotalEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_TotalEnergy_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (double) ((arg1)->TotalEnergy);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_AvrOverChecks_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_AvrOverChecks_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_AvrOverChecks_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_AvrOverChecks_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->AvrOverChecks = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_AvrOverChecks_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_AvrOverChecks_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_AvrOverChecks_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (int) ((arg1)->AvrOverChecks);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_TEavr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_TEavr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_TEavr_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_TEavr_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->TEavr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_TEavr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_TEavr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_TEavr_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (double) ((arg1)->TEavr);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_stdevTE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaStruct_stdevTE_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_stdevTE_set" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaStruct_stdevTE_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->stdevTE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaStruct_stdevTE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaStruct_stdevTE_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaStruct_stdevTE_get" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  result = (double) ((arg1)->stdevTE);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PoissonSolverOnCudaStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonSolverOnCudaStruct")) SWIG_fail;
  {
    try {
      result = (PoissonSolverOnCudaStruct *)new PoissonSolverOnCudaStruct();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonSolverOnCudaStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonSolverOnCudaStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaStruct *arg1 = (PoissonSolverOnCudaStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonSolverOnCudaStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaStruct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonSolverOnCudaStruct" "', argument " "1"" of type '" "PoissonSolverOnCudaStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaStruct * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonSolverOnCudaStruct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PoissonSolverOnCudaStruct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_GS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_GS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_GS_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_GS_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->GS[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""GS""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_GS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_GS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_GS_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int *)(int *) ((arg1)->GS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_GridScale_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_GridScale_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_spltGSWBC_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->spltGSWBC[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""spltGSWBC""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_spltGSWBC_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int *)(int *) ((arg1)->spltGSWBC);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_spltGSWBC_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_X_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_spltGSWBC_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_X_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int) ((arg1)->spltGSWBC_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_spltGSWBC_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_XY_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_spltGSWBC_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_XY_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_XYZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_spltGSWBC_XYZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_XYZ_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_XYZ_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XYZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_spltGSWBC_XYZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_spltGSWBC_XYZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_spltGSWBC_XYZ_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XYZ);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_P_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_P_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_P_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_P_set" "', argument " "2"" of type '" "double *[8]""'"); 
  } 
  arg2 = reinterpret_cast< double ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(double * *)&arg1->P[ii] = *((double * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""P""' of type '""double *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_P_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_P_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_P_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double **)(double **) ((arg1)->P);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_MaxIterations_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_MaxIterations_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_MaxIterations_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_MaxIterations_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIterations = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_MaxIterations_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_MaxIterations_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_MaxIterations_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int) ((arg1)->MaxIterations);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Relaxation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_Relaxation_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Relaxation_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_Relaxation_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Relaxation = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Relaxation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_Relaxation_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Relaxation_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double) ((arg1)->Relaxation);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Qnum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_Qnum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Qnum_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_Qnum_set" "', argument " "2"" of type '" "int [8]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int *)&arg1->Qnum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qnum""' of type '""int [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Qnum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_Qnum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Qnum_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int *)(int *) ((arg1)->Qnum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Q_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_Q_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Q_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_Q_set" "', argument " "2"" of type '" "double *[8]""'"); 
  } 
  arg2 = reinterpret_cast< double ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(double * *)&arg1->Q[ii] = *((double * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Q""' of type '""double *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Q_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_Q_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Q_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double **)(double **) ((arg1)->Q);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Qmult_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_Qmult_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Qmult_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_Qmult_set" "', argument " "2"" of type '" "double *[8]""'"); 
  } 
  arg2 = reinterpret_cast< double ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(double * *)&arg1->Qmult[ii] = *((double * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qmult""' of type '""double *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Qmult_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_Qmult_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Qmult_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double **)(double **) ((arg1)->Qmult);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Qpos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_Qpos_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Qpos_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_Qpos_set" "', argument " "2"" of type '" "int *[8]""'"); 
  } 
  arg2 = reinterpret_cast< int ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int * *)&arg1->Qpos[ii] = *((int * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qpos""' of type '""int *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Qpos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_Qpos_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Qpos_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int **)(int **) ((arg1)->Qpos);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_DielBordNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_DielBordNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_DielBordNum_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_DielBordNum_set" "', argument " "2"" of type '" "int [8]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int *)&arg1->DielBordNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBordNum""' of type '""int [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_DielBordNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_DielBordNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_DielBordNum_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int *)(int *) ((arg1)->DielBordNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_DielMult_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double *(*arg2)[6] ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_DielMult_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_DielMult_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_a_6__p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_DielMult_set" "', argument " "2"" of type '" "double *[8][6]""'"); 
  } 
  arg2 = reinterpret_cast< double *(*)[6] >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) {
        if (arg2[ii]) {
          size_t jj = 0;
          for (; jj < (size_t)6; ++jj) arg1->DielMult[ii][jj] = arg2[ii][jj];
        } else {
          SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielMult""' of type '""double *[8][6]""'");
        }
      }
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielMult""' of type '""double *[8][6]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_DielMult_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *(*result)[6] = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_DielMult_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_DielMult_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double *(*)[6])(double *(*)[6]) ((arg1)->DielMult);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_a_6__p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_DielBordPos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_DielBordPos_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_DielBordPos_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSolverOnCudaStructDouble_DielBordPos_set" "', argument " "2"" of type '" "int *[8]""'"); 
  } 
  arg2 = reinterpret_cast< int ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int * *)&arg1->DielBordPos[ii] = *((int * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBordPos""' of type '""int *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_DielBordPos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_DielBordPos_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_DielBordPos_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int **)(int **) ((arg1)->DielBordPos);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_ConvergenceCheck_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_ConvergenceCheck_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_ConvergenceCheck_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_ConvergenceCheck_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvergenceCheck = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_ConvergenceCheck_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_ConvergenceCheck_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_ConvergenceCheck_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int) ((arg1)->ConvergenceCheck);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Tolerance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_Tolerance_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Tolerance_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_Tolerance_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Tolerance = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_Tolerance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_Tolerance_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_Tolerance_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double) ((arg1)->Tolerance);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_TotalEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_TotalEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_TotalEnergy_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_TotalEnergy_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->TotalEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_TotalEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_TotalEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_TotalEnergy_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double) ((arg1)->TotalEnergy);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_AvrOverChecks_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_AvrOverChecks_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_AvrOverChecks_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_AvrOverChecks_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->AvrOverChecks = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_AvrOverChecks_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_AvrOverChecks_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_AvrOverChecks_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (int) ((arg1)->AvrOverChecks);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_TEavr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_TEavr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_TEavr_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_TEavr_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->TEavr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_TEavr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_TEavr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_TEavr_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double) ((arg1)->TEavr);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_stdevTE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PSolverOnCudaStructDouble_stdevTE_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_stdevTE_set" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSolverOnCudaStructDouble_stdevTE_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->stdevTE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PSolverOnCudaStructDouble_stdevTE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PSolverOnCudaStructDouble_stdevTE_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSolverOnCudaStructDouble_stdevTE_get" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  result = (double) ((arg1)->stdevTE);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PSolverOnCudaStructDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PSolverOnCudaStructDouble")) SWIG_fail;
  {
    try {
      result = (PSolverOnCudaStructDouble *)new PSolverOnCudaStructDouble();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PSolverOnCudaStructDouble, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PSolverOnCudaStructDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PSolverOnCudaStructDouble *arg1 = (PSolverOnCudaStructDouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PSolverOnCudaStructDouble",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PSolverOnCudaStructDouble, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PSolverOnCudaStructDouble" "', argument " "1"" of type '" "PSolverOnCudaStructDouble *""'"); 
  }
  arg1 = reinterpret_cast< PSolverOnCudaStructDouble * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PSolverOnCudaStructDouble_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PSolverOnCudaStructDouble, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_GS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int3 *arg2 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_GS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_GS_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_GS_set" "', argument " "2"" of type '" "int3 *""'"); 
  }
  arg2 = reinterpret_cast< int3 * >(argp2);
  if (arg1) (arg1)->GS = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_GS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_GS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_GS_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int3 *)& ((arg1)->GS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_ps4GS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int3 *arg2 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_ps4GS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_ps4GS_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_ps4GS_set" "', argument " "2"" of type '" "int3 *""'"); 
  }
  arg2 = reinterpret_cast< int3 * >(argp2);
  if (arg1) (arg1)->ps4GS = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_ps4GS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_ps4GS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_ps4GS_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int3 *)& ((arg1)->ps4GS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_GridScale_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_GridScale_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Pot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_Pot_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Pot_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_Pot_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Pot = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Pot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_Pot_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Pot_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->Pot);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P000_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P000_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P000_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P000_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P000 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P000_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P000_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P000_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P000);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P100_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P100_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P100_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P100_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P100 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P100_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P100_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P100_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P100);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P200_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P200_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P200_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P200_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P200 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P200_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P200_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P200_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P200);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P300_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P300_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P300_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P300_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P300 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P300_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P300_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P300_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P300);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P010_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P010_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P010_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P010_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P010 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P010_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P010_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P010_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P010);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P110_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P110_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P110_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P110_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P110 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P110_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P110_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P110_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P110);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P210_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P210_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P210_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P210_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P210 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P210_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P210_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P210_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P210);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P310_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P310_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P310_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P310_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P310 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P310_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P310_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P310_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P310);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P020_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P020_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P020_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P020_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P020 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P020_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P020_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P020_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P020);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P120_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P120_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P120_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P120_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P120 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P120_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P120_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P120_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P120);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P220_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P220_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P220_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P220_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P220 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P220_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P220_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P220_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P220);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P320_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P320_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P320_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P320_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P320 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P320_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P320_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P320_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P320);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P030_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P030_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P030_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P030_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P030 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P030_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P030_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P030_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P030);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P130_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P130_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P130_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P130_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P130 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P130_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P130_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P130_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P130);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P230_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P230_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P230_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P230_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P230 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P230_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P230_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P230_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P230);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P330_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P330_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P330_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P330_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P330 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P330_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P330_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P330_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P330);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P001_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P001_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P001_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P001_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P001 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P001_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P001_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P001_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P001);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P101_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P101_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P101_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P101_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P101 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P101_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P101_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P101_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P101);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P201_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P201_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P201_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P201_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P201 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P201_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P201_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P201_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P201);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P301_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P301_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P301_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P301_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P301 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P301_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P301_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P301_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P301);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P011_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P011_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P011_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P011_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P011 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P011_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P011_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P011_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P011);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P111_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P111_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P111_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P111_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P111 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P111_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P111_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P111_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P111);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P211_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P211_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P211_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P211_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P211 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P211_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P211_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P211_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P211);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P311_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P311_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P311_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P311_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P311 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P311_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P311_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P311_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P311);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P021_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P021_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P021_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P021_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P021 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P021_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P021_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P021_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P021);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P121_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P121_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P121_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P121_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P121 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P121_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P121_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P121_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P121);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P221_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P221_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P221_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P221_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P221 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P221_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P221_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P221_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P221);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P321_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P321_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P321_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P321_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P321 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P321_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P321_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P321_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P321);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P031_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P031_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P031_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P031_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P031 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P031_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P031_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P031_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P031);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P131_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P131_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P131_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P131_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P131 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P131_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P131_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P131_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P131);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P231_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P231_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P231_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P231_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P231 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P231_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P231_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P231_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P231);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P331_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P331_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P331_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P331_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P331 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P331_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P331_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P331_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P331);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P002_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P002_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P002_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P002_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P002 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P002_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P002_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P002_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P002);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P102_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P102_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P102_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P102_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P102 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P102_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P102_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P102_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P102);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P202_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P202_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P202_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P202_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P202 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P202_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P202_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P202_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P202);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P302_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P302_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P302_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P302_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P302 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P302_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P302_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P302_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P302);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P012_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P012_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P012_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P012_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P012 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P012_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P012_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P012_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P012);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P112_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P112_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P112_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P112_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P112 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P112_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P112_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P112_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P112);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P212_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P212_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P212_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P212_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P212 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P212_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P212_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P212_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P212);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P312_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P312_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P312_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P312_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P312 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P312_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P312_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P312_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P312);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P022_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P022_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P022_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P022_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P022 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P022_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P022_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P022_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P022);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P122_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P122_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P122_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P122_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P122 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P122_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P122_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P122_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P122);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P222_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P222_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P222_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P222_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P222 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P222_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P222_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P222_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P222);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P322_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P322_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P322_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P322_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P322 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P322_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P322_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P322_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P322);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P032_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P032_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P032_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P032_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P032 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P032_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P032_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P032_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P032);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P132_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P132_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P132_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P132_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P132 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P132_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P132_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P132_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P132);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P232_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P232_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P232_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P232_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P232 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P232_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P232_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P232_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P232);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P332_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P332_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P332_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P332_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P332 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P332_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P332_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P332_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P332);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P003_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P003_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P003_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P003_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P003 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P003_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P003_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P003_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P003);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P103_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P103_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P103_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P103_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P103 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P103_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P103_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P103_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P103);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P203_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P203_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P203_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P203_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P203 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P203_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P203_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P203_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P203);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P303_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P303_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P303_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P303_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P303 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P303_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P303_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P303_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P303);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P013_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P013_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P013_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P013_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P013 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P013_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P013_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P013_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P013);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P113_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P113_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P113_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P113_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P113 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P113_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P113_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P113_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P113);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P213_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P213_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P213_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P213_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P213 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P213_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P213_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P213_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P213);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P313_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P313_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P313_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P313_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P313 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P313_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P313_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P313_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P313);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P023_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P023_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P023_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P023_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P023 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P023_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P023_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P023_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P023);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P123_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P123_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P123_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P123_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P123 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P123_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P123_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P123_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P123);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P223_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P223_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P223_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P223_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P223 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P223_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P223_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P223_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P223);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P323_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P323_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P323_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P323_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P323 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P323_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P323_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P323_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P323);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P033_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P033_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P033_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P033_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P033 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P033_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P033_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P033_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P033);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P133_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P133_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P133_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P133_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P133 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P133_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P133_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P133_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P133);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P233_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P233_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P233_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P233_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P233 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P233_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P233_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P233_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P233);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P333_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_P333_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P333_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_P333_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->P333 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_P333_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_P333_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_P333_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *) ((arg1)->P333);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int3 *arg2 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_spltGSWBC_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_set" "', argument " "2"" of type '" "int3 *""'"); 
  }
  arg2 = reinterpret_cast< int3 * >(argp2);
  if (arg1) (arg1)->spltGSWBC = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_spltGSWBC_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int3 *)& ((arg1)->spltGSWBC);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_spltGSWBC_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_X_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_spltGSWBC_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_X_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_spltGSWBC_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_XY_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_spltGSWBC_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_XY_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XYZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XYZ);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_MaxIter_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_MaxIter_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_MaxIter_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_MaxIter_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIter = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_MaxIter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_MaxIter_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_MaxIter_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int) ((arg1)->MaxIter);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Rel_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_Rel_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Rel_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_Rel_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Rel = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Rel_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_Rel_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Rel_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float) ((arg1)->Rel);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Tol_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_Tol_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Tol_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_Tol_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Tol = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Tol_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_Tol_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Tol_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (double) ((arg1)->Tol);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Qnum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_Qnum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Qnum_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_Qnum_set" "', argument " "2"" of type '" "int [8]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int *)&arg1->Qnum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qnum""' of type '""int [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Qnum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_Qnum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Qnum_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int *)(int *) ((arg1)->Qnum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Q_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_Q_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Q_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_Q_set" "', argument " "2"" of type '" "float *[8]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(float * *)&arg1->Q[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Q""' of type '""float *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Q_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_Q_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Q_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float **)(float **) ((arg1)->Q);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Qmult_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_Qmult_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Qmult_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_Qmult_set" "', argument " "2"" of type '" "float *[8]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(float * *)&arg1->Qmult[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qmult""' of type '""float *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Qmult_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_Qmult_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Qmult_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float **)(float **) ((arg1)->Qmult);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Qpos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_Qpos_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Qpos_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_Qpos_set" "', argument " "2"" of type '" "int *[8]""'"); 
  } 
  arg2 = reinterpret_cast< int ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int * *)&arg1->Qpos[ii] = *((int * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Qpos""' of type '""int *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_Qpos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_Qpos_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_Qpos_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int **)(int **) ((arg1)->Qpos);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_DielBordNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_DielBordNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_DielBordNum_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_DielBordNum_set" "', argument " "2"" of type '" "int [8]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int *)&arg1->DielBordNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBordNum""' of type '""int [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_DielBordNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_DielBordNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_DielBordNum_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int *)(int *) ((arg1)->DielBordNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_DielMult_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float *(*arg2)[6] ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_DielMult_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_DielMult_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_a_6__p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_DielMult_set" "', argument " "2"" of type '" "float *[8][6]""'"); 
  } 
  arg2 = reinterpret_cast< float *(*)[6] >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) {
        if (arg2[ii]) {
          size_t jj = 0;
          for (; jj < (size_t)6; ++jj) arg1->DielMult[ii][jj] = arg2[ii][jj];
        } else {
          SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielMult""' of type '""float *[8][6]""'");
        }
      }
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielMult""' of type '""float *[8][6]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_DielMult_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *(*result)[6] = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_DielMult_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_DielMult_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float *(*)[6])(float *(*)[6]) ((arg1)->DielMult);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_a_6__p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_DielBordPos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_DielBordPos_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_DielBordPos_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda4Struct_DielBordPos_set" "', argument " "2"" of type '" "int *[8]""'"); 
  } 
  arg2 = reinterpret_cast< int ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(int * *)&arg1->DielBordPos[ii] = *((int * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBordPos""' of type '""int *[8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_DielBordPos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_DielBordPos_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_DielBordPos_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int **)(int **) ((arg1)->DielBordPos);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_ConvergenceCheck_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_ConvergenceCheck_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_ConvergenceCheck_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_ConvergenceCheck_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvergenceCheck = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_ConvergenceCheck_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_ConvergenceCheck_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_ConvergenceCheck_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int) ((arg1)->ConvergenceCheck);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_TotalEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_TotalEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_TotalEnergy_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_TotalEnergy_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->TotalEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_TotalEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_TotalEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_TotalEnergy_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (double) ((arg1)->TotalEnergy);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_AvrOverChecks_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_AvrOverChecks_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_AvrOverChecks_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_AvrOverChecks_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->AvrOverChecks = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_AvrOverChecks_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_AvrOverChecks_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_AvrOverChecks_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (int) ((arg1)->AvrOverChecks);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_TEavr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_TEavr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_TEavr_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_TEavr_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->TEavr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_TEavr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_TEavr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_TEavr_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (double) ((arg1)->TEavr);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_stdevTE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_stdevTE_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_stdevTE_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_stdevTE_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->stdevTE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_stdevTE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_stdevTE_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_stdevTE_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (double) ((arg1)->stdevTE);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_om1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_om1_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_om1_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_om1_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_om1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_om1_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_om1_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float) ((arg1)->om1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_om2d6_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda4Struct_om2d6_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_om2d6_set" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda4Struct_om2d6_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om2d6 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda4Struct_om2d6_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda4Struct_om2d6_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda4Struct_om2d6_get" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  result = (float) ((arg1)->om2d6);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PoissonSolverOnCuda4Struct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonSolverOnCuda4Struct")) SWIG_fail;
  {
    try {
      result = (PoissonSolverOnCuda4Struct *)new PoissonSolverOnCuda4Struct();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonSolverOnCuda4Struct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonSolverOnCuda4Struct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda4Struct *arg1 = (PoissonSolverOnCuda4Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonSolverOnCuda4Struct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda4Struct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonSolverOnCuda4Struct" "', argument " "1"" of type '" "PoissonSolverOnCuda4Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda4Struct * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonSolverOnCuda4Struct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PoissonSolverOnCuda4Struct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_GS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  int3 *arg2 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_GS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_GS_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda1Struct_GS_set" "', argument " "2"" of type '" "int3 *""'"); 
  }
  arg2 = reinterpret_cast< int3 * >(argp2);
  if (arg1) (arg1)->GS = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_GS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_GS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_GS_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (int3 *)& ((arg1)->GS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_GridScale_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_GridScale_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_Pot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_Pot_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_Pot_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda1Struct_Pot_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Pot = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_Pot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_Pot_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_Pot_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (float *) ((arg1)->Pot);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_PotCu_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_PotCu_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_PotCu_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda1Struct_PotCu_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->PotCu = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_PotCu_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_PotCu_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_PotCu_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (float *) ((arg1)->PotCu);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  int3 *arg2 = (int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_spltGSWBC_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_set" "', argument " "2"" of type '" "int3 *""'"); 
  }
  arg2 = reinterpret_cast< int3 * >(argp2);
  if (arg1) (arg1)->spltGSWBC = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_spltGSWBC_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (int3 *)& ((arg1)->spltGSWBC);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_spltGSWBC_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_X_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_spltGSWBC_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_X_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_spltGSWBC_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_XY_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_spltGSWBC_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_XY_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->spltGSWBC_XYZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (int) ((arg1)->spltGSWBC_XYZ);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_MaxIter_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_MaxIter_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_MaxIter_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_MaxIter_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIter = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_MaxIter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_MaxIter_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_MaxIter_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (int) ((arg1)->MaxIter);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_Rel_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_Rel_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_Rel_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_Rel_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Rel = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_Rel_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_Rel_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_Rel_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (float) ((arg1)->Rel);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_Tol_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_Tol_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_Tol_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_Tol_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Tol = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_Tol_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_Tol_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_Tol_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (double) ((arg1)->Tol);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_om1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_om1_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_om1_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_om1_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_om1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_om1_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_om1_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (float) ((arg1)->om1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_om2d6_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCuda1Struct_om2d6_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_om2d6_set" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCuda1Struct_om2d6_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om2d6 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCuda1Struct_om2d6_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCuda1Struct_om2d6_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCuda1Struct_om2d6_get" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  result = (float) ((arg1)->om2d6);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PoissonSolverOnCuda1Struct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonSolverOnCuda1Struct")) SWIG_fail;
  {
    try {
      result = (PoissonSolverOnCuda1Struct *)new PoissonSolverOnCuda1Struct();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonSolverOnCuda1Struct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonSolverOnCuda1Struct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCuda1Struct *arg1 = (PoissonSolverOnCuda1Struct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonSolverOnCuda1Struct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCuda1Struct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonSolverOnCuda1Struct" "', argument " "1"" of type '" "PoissonSolverOnCuda1Struct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCuda1Struct * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonSolverOnCuda1Struct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PoissonSolverOnCuda1Struct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaParamStruct_BS_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_X_set" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaParamStruct_BS_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BS_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaParamStruct_BS_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_X_get" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  result = (int) ((arg1)->BS_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_Y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaParamStruct_BS_Y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_Y_set" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaParamStruct_BS_Y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BS_Y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_Y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaParamStruct_BS_Y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_Y_get" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  result = (int) ((arg1)->BS_Y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaParamStruct_BS_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_Z_set" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaParamStruct_BS_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BS_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaParamStruct_BS_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_Z_get" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  result = (int) ((arg1)->BS_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaParamStruct_BS_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_XY_set" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaParamStruct_BS_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BS_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaParamStruct_BS_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_XY_get" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  result = (int) ((arg1)->BS_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_XYZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaParamStruct_BS_XYZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_XYZ_set" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaParamStruct_BS_XYZ_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BS_XYZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_BS_XYZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaParamStruct_BS_XYZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_BS_XYZ_get" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  result = (int) ((arg1)->BS_XYZ);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_Qblock_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaParamStruct_Qblock_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_Qblock_set" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaParamStruct_Qblock_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Qblock = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_Qblock_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaParamStruct_Qblock_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_Qblock_get" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  result = (int) ((arg1)->Qblock);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_DBblock_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverOnCudaParamStruct_DBblock_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_DBblock_set" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverOnCudaParamStruct_DBblock_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->DBblock = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverOnCudaParamStruct_DBblock_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverOnCudaParamStruct_DBblock_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverOnCudaParamStruct_DBblock_get" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  result = (int) ((arg1)->DBblock);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PoissonSolverOnCudaParamStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonSolverOnCudaParamStruct")) SWIG_fail;
  {
    try {
      result = (PoissonSolverOnCudaParamStruct *)new PoissonSolverOnCudaParamStruct();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonSolverOnCudaParamStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonSolverOnCudaParamStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolverOnCudaParamStruct *arg1 = (PoissonSolverOnCudaParamStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonSolverOnCudaParamStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolverOnCudaParamStruct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonSolverOnCudaParamStruct" "', argument " "1"" of type '" "PoissonSolverOnCudaParamStruct *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolverOnCudaParamStruct * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonSolverOnCudaParamStruct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PoissonSolverOnCudaParamStruct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GOAtomsStruct_GS_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_GS_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_GS_X_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_GS_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_GS_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_GS_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_GS_X_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (int) ((arg1)->GS_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_GS_Y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_GS_Y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_GS_Y_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_GS_Y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_GS_Y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_GS_Y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_GS_Y_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (int) ((arg1)->GS_Y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_GS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_GS_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_GS_Z_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_GS_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_GS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_GS_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_GS_Z_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (int) ((arg1)->GS_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_Natoms_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_Natoms_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_Natoms_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_Natoms_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Natoms = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_Natoms_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_Natoms_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_Natoms_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (int) ((arg1)->Natoms);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_r_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_r_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_r_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtomsStruct_r_set" "', argument " "2"" of type '" "float *[3]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(float * *)&arg1->r[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""r""' of type '""float *[3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_r_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_r_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_r_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (float **)(float **) ((arg1)->r);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_R_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_R_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_R_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtomsStruct_R_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->R = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_R_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_R_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_R_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (float *) ((arg1)->R);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_q_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_q_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_q_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtomsStruct_q_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->q = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_q_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_q_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_q_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (float *) ((arg1)->q);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_Rsmoth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_Rsmoth_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_Rsmoth_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_Rsmoth_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Rsmoth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_Rsmoth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_Rsmoth_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_Rsmoth_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (float) ((arg1)->Rsmoth);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_iDiel_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_iDiel_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_iDiel_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_iDiel_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->iDiel = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_iDiel_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_iDiel_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_iDiel_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (int) ((arg1)->iDiel);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_iDielBulk_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_iDielBulk_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_iDielBulk_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_iDielBulk_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->iDielBulk = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_iDielBulk_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_iDielBulk_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_iDielBulk_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (int) ((arg1)->iDielBulk);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_Surf_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_Surf_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_Surf_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtomsStruct_Surf_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Surf = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_Surf_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_Surf_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_Surf_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (float *) ((arg1)->Surf);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_iVtmp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtomsStruct_iVtmp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_iVtmp_set" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtomsStruct_iVtmp_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->iVtmp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_iVtmp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_iVtmp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_iVtmp_get" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  result = (int *) ((arg1)->iVtmp);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GOAtomsStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_GOAtomsStruct")) SWIG_fail;
  {
    try {
      result = (GOAtomsStruct *)new GOAtomsStruct();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GOAtomsStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GOAtomsStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GOAtomsStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GOAtomsStruct" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GOAtomsStruct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_GOAtomsStruct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GOAtomsStruct_Create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  GOAtomsStruct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GOAtomsStruct_Create",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GOAtomsStruct_Create" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtomsStruct_Create" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtomsStruct_Create" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtomsStruct_Create" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtomsStruct_Create" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (GOAtomsStruct *)GOAtomsStruct_Create(arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtomsStruct_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtomsStruct *arg1 = (GOAtomsStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GOAtomsStruct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtomsStruct_Delete",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtomsStruct_Delete" "', argument " "1"" of type '" "GOAtomsStruct *""'"); 
  }
  arg1 = reinterpret_cast< GOAtomsStruct * >(argp1);
  {
    try {
      result = (GOAtomsStruct *)GOAtomsStruct_Delete(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GOAtomsStruct, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_borderPoints_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  long *arg2 = (long *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverDataW_borderPoints_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_borderPoints_set" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_long, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverDataW_borderPoints_set" "', argument " "2"" of type '" "long *""'"); 
  }
  arg2 = reinterpret_cast< long * >(argp2);
  if (arg1) (arg1)->borderPoints = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_borderPoints_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverDataW_borderPoints_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_borderPoints_get" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  result = (long *) ((arg1)->borderPoints);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_om2InverseDielectricSum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverDataW_om2InverseDielectricSum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_om2InverseDielectricSum_set" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverDataW_om2InverseDielectricSum_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->om2InverseDielectricSum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_om2InverseDielectricSum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverDataW_om2InverseDielectricSum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_om2InverseDielectricSum_get" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  result = (float *) ((arg1)->om2InverseDielectricSum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_typeOfBorderPoint_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  short *arg2 = (short *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverDataW_typeOfBorderPoint_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_typeOfBorderPoint_set" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_short, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolverDataW_typeOfBorderPoint_set" "', argument " "2"" of type '" "short *""'"); 
  }
  arg2 = reinterpret_cast< short * >(argp2);
  if (arg1) (arg1)->typeOfBorderPoint = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_typeOfBorderPoint_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverDataW_typeOfBorderPoint_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_typeOfBorderPoint_get" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  result = (short *) ((arg1)->typeOfBorderPoint);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_short, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_maxIterations_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverDataW_maxIterations_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_maxIterations_set" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverDataW_maxIterations_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->maxIterations = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_maxIterations_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverDataW_maxIterations_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_maxIterations_get" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  result = (int) ((arg1)->maxIterations);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_convergence_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverDataW_convergence_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_convergence_set" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverDataW_convergence_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->convergence = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_convergence_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverDataW_convergence_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_convergence_get" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  result = (float) ((arg1)->convergence);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_relaxation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverDataW_relaxation_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_relaxation_set" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverDataW_relaxation_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->relaxation = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_relaxation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverDataW_relaxation_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_relaxation_get" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  result = (float) ((arg1)->relaxation);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_hasDynamicCharges_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolverDataW_hasDynamicCharges_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_hasDynamicCharges_set" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolverDataW_hasDynamicCharges_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->hasDynamicCharges = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolverDataW_hasDynamicCharges_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolverDataW_hasDynamicCharges_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolverDataW_hasDynamicCharges_get" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  result = (int) ((arg1)->hasDynamicCharges);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PoissonSolverDataW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonSolverDataW")) SWIG_fail;
  {
    try {
      result = (_PoissonSolverData *)new _PoissonSolverData();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__PoissonSolverData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonSolverDataW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _PoissonSolverData *arg1 = (_PoissonSolverData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonSolverDataW",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__PoissonSolverData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonSolverDataW" "', argument " "1"" of type '" "_PoissonSolverData *""'"); 
  }
  arg1 = reinterpret_cast< _PoissonSolverData * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonSolverDataW_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p__PoissonSolverData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PoissonSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonSolver")) SWIG_fail;
  {
    try {
      result = (PoissonSolver *)new PoissonSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonSolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonSolver" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_InitZero" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Clear" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_solver_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_solver_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_solver_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_solver_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->solver = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_solver_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_solver_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_solver_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int) ((arg1)->solver);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_MaxIterations_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_MaxIterations_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_MaxIterations_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_MaxIterations_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIterations = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_MaxIterations_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_MaxIterations_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_MaxIterations_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int) ((arg1)->MaxIterations);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_MinIterations_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_MinIterations_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_MinIterations_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_MinIterations_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MinIterations = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_MinIterations_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_MinIterations_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_MinIterations_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int) ((arg1)->MinIterations);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ConvergenceCheck_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_ConvergenceCheck_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ConvergenceCheck_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_ConvergenceCheck_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvergenceCheck = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ConvergenceCheck_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_ConvergenceCheck_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ConvergenceCheck_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int) ((arg1)->ConvergenceCheck);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Convergence_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_Convergence_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Convergence_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_Convergence_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Convergence = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Convergence_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_Convergence_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Convergence_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float) ((arg1)->Convergence);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Relaxation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_Relaxation_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Relaxation_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_Relaxation_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Relaxation = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Relaxation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_Relaxation_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Relaxation_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float) ((arg1)->Relaxation);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobMod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QmobMod_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobMod_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_QmobMod_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->QmobMod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobMod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QmobMod_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobMod_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int) ((arg1)->QmobMod);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_verbose_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_verbose_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_verbose_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_verbose_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->verbose = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_verbose_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_verbose_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_verbose_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (bool) ((arg1)->verbose);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_totalChange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_totalChange_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_totalChange_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_totalChange_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalChange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_totalChange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_totalChange_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_totalChange_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (double) ((arg1)->totalChange);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_relativeChange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_relativeChange_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_relativeChange_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_relativeChange_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->relativeChange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_relativeChange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_relativeChange_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_relativeChange_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (double) ((arg1)->relativeChange);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_totalEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_totalEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_totalEnergy_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_totalEnergy_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_totalEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_totalEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_totalEnergy_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (double) ((arg1)->totalEnergy);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_totalEnergyInd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_totalEnergyInd_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_totalEnergyInd_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_totalEnergyInd_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalEnergyInd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_totalEnergyInd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_totalEnergyInd_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_totalEnergyInd_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (double) ((arg1)->totalEnergyInd);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ConvFac_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_ConvFac_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ConvFac_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_ConvFac_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->ConvFac = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ConvFac_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_ConvFac_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ConvFac_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (double) ((arg1)->ConvFac);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_WayToCalcSystemEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_WayToCalcSystemEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_WayToCalcSystemEnergy_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_WayToCalcSystemEnergy_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->WayToCalcSystemEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_WayToCalcSystemEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_WayToCalcSystemEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_WayToCalcSystemEnergy_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int) ((arg1)->WayToCalcSystemEnergy);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ConvFacMaxHistory_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_ConvFacMaxHistory_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ConvFacMaxHistory_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_ConvFacMaxHistory_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvFacMaxHistory = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ConvFacMaxHistory_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_ConvFacMaxHistory_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ConvFacMaxHistory_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int) ((arg1)->ConvFacMaxHistory);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_World_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_World_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_World_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_World_set" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  if (arg1) (arg1)->World = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_World_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_World_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_World_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (ContWorld *) ((arg1)->World);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_NoSingularNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_NoSingularNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_NoSingularNum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_NoSingularNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->NoSingularNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""NoSingularNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_NoSingularNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_NoSingularNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_NoSingularNum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *)(int *) ((arg1)->NoSingularNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexNoSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_IndexNoSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexNoSingular_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_IndexNoSingular_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexNoSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexNoSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_IndexNoSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexNoSingular_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *) ((arg1)->IndexNoSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_SingularNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_SingularNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_SingularNum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_SingularNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->SingularNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""SingularNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_SingularNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_SingularNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_SingularNum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *)(int *) ((arg1)->SingularNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_IndexSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexSingular_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_IndexSingular_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_IndexSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexSingular_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *) ((arg1)->IndexSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXS_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXS_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYS_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYS_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZS_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZS_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZSSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZSSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZSSUM_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZSSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZSSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZSSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZSSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZSSUM_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZSSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmS_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmS_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmS_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmS_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmS_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmS_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QstS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QstS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QstS_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_QstS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QstS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QstS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QstS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QstS_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->QstS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PhiSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_PhiSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PhiSingular_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_PhiSingular_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->PhiSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PhiSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_PhiSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PhiSingular_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->PhiSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_DielBoarderNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_DielBoarderNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_DielBoarderNum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_DielBoarderNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->DielBoarderNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBoarderNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_DielBoarderNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_DielBoarderNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_DielBoarderNum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *)(int *) ((arg1)->DielBoarderNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexDielBoarder_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_IndexDielBoarder_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexDielBoarder_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_IndexDielBoarder_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexDielBoarder = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexDielBoarder_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_IndexDielBoarder_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexDielBoarder_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *) ((arg1)->IndexDielBoarder);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZDBSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZDBSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZDBSUM_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZDBSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZDBSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZDBSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZDBSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZDBSUM_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZDBSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ChargeNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_ChargeNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ChargeNum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_ChargeNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->ChargeNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""ChargeNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ChargeNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_ChargeNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ChargeNum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *)(int *) ((arg1)->ChargeNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexCharge_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_IndexCharge_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexCharge_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_IndexCharge_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexCharge = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexCharge_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_IndexCharge_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexCharge_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *) ((arg1)->IndexCharge);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricCh_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricCh_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricCh_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricCh_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricCh = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricCh_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricCh_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricCh_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricCh);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Qst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_Qst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Qst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_Qst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Qst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Qst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_Qst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Qst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->Qst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PhiCharge_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_PhiCharge_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PhiCharge_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_PhiCharge_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->PhiCharge = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PhiCharge_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_PhiCharge_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PhiCharge_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->PhiCharge);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ChargeSum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_ChargeSum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ChargeSum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_ChargeSum_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->ChargeSum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ChargeSum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_ChargeSum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ChargeSum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->ChargeSum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QmobNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobNum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_QmobNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->QmobNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""QmobNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QmobNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobNum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *)(int *) ((arg1)->QmobNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexQmob_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_IndexQmob_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexQmob_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_IndexQmob_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexQmob = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexQmob_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_IndexQmob_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexQmob_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *) ((arg1)->IndexQmob);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Qmob_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_Qmob_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Qmob_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_Qmob_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Qmob = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Qmob_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_Qmob_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Qmob_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->Qmob);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricChMob_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricChMob_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricChMob_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricChMob_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricChMob = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricChMob_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricChMob_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricChMob_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricChMob);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcVolume_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  bool *arg2 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcVolume_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcVolume_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_CalcVolume_set" "', argument " "2"" of type '" "bool *""'"); 
  }
  arg2 = reinterpret_cast< bool * >(argp2);
  if (arg1) (arg1)->CalcVolume = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcVolume_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_CalcVolume_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcVolume_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (bool *) ((arg1)->CalcVolume);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarderNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QmobDielBoarderNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarderNum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_QmobDielBoarderNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->QmobDielBoarderNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""QmobDielBoarderNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarderNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QmobDielBoarderNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarderNum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *)(int *) ((arg1)->QmobDielBoarderNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexQmobDielBoarder_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_IndexQmobDielBoarder_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexQmobDielBoarder_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_IndexQmobDielBoarder_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexQmobDielBoarder = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexQmobDielBoarder_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_IndexQmobDielBoarder_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexQmobDielBoarder_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *) ((arg1)->IndexQmobDielBoarder);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarder_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QmobDielBoarder_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarder_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_QmobDielBoarder_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QmobDielBoarder = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarder_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QmobDielBoarder_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarder_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->QmobDielBoarder);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXQmobDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXQmobDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXQmobDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXQmobDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXQmobDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXQmobDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXQmobDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXQmobDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXQmobDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYQmobDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYQmobDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYQmobDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYQmobDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYQmobDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYQmobDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYQmobDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYQmobDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYQmobDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZQmobDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZQmobDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZQmobDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZQmobDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZQmobDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmQmobDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXmQmobDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmQmobDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXmQmobDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmQmobDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmQmobDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXmQmobDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmQmobDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmQmobDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmQmobDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYmQmobDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmQmobDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYmQmobDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmQmobDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmQmobDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYmQmobDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmQmobDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmQmobDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmQmobDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZmQmobDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmQmobDB_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZmQmobDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmQmobDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmQmobDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZmQmobDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmQmobDB_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmQmobDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDBSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZQmobDBSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDBSUM_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZQmobDBSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZQmobDBSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDBSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZQmobDBSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDBSUM_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZQmobDBSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarderQstNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QmobDielBoarderQstNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarderQstNum_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_QmobDielBoarderQstNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->QmobDielBoarderQstNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""QmobDielBoarderQstNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarderQstNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QmobDielBoarderQstNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarderQstNum_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *)(int *) ((arg1)->QmobDielBoarderQstNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexQmobDielBoarderQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_IndexQmobDielBoarderQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexQmobDielBoarderQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_IndexQmobDielBoarderQst_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexQmobDielBoarderQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_IndexQmobDielBoarderQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_IndexQmobDielBoarderQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_IndexQmobDielBoarderQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (int *) ((arg1)->IndexQmobDielBoarderQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarderQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QmobDielBoarderQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarderQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_QmobDielBoarderQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QmobDielBoarderQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QmobDielBoarderQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QmobDielBoarderQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QmobDielBoarderQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->QmobDielBoarderQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QstQmobDielBoarderQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_QstQmobDielBoarderQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QstQmobDielBoarderQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_QstQmobDielBoarderQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QstQmobDielBoarderQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_QstQmobDielBoarderQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_QstQmobDielBoarderQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_QstQmobDielBoarderQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->QstQmobDielBoarderQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXQmobDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXQmobDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXQmobDBQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXQmobDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXQmobDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXQmobDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXQmobDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXQmobDBQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXQmobDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYQmobDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYQmobDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYQmobDBQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYQmobDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYQmobDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYQmobDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYQmobDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYQmobDBQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYQmobDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZQmobDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDBQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZQmobDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZQmobDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZQmobDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDBQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZQmobDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmQmobDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricXmQmobDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmQmobDBQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricXmQmobDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmQmobDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricXmQmobDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricXmQmobDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricXmQmobDBQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmQmobDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmQmobDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricYmQmobDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmQmobDBQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricYmQmobDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmQmobDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricYmQmobDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricYmQmobDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricYmQmobDBQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmQmobDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmQmobDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZmQmobDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmQmobDBQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZmQmobDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmQmobDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZmQmobDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZmQmobDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZmQmobDBQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmQmobDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDBSUMQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_dielectricZQmobDBSUMQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDBSUMQst_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_dielectricZQmobDBSUMQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZQmobDBSUMQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_dielectricZQmobDBSUMQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_dielectricZQmobDBSUMQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_dielectricZQmobDBSUMQst_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZQmobDBSUMQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_poissonSolverData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  PoissonSolverDataW *arg2 = (PoissonSolverDataW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_poissonSolverData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_poissonSolverData_set" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p__PoissonSolverData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_poissonSolverData_set" "', argument " "2"" of type '" "PoissonSolverDataW *""'"); 
  }
  arg2 = reinterpret_cast< PoissonSolverDataW * >(argp2);
  if (arg1) (arg1)->poissonSolverData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_poissonSolverData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PoissonSolverDataW *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_poissonSolverData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_poissonSolverData_get" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  result = (PoissonSolverDataW *) ((arg1)->poissonSolverData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__PoissonSolverData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_LoadParamFromPyDict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_LoadParamFromPyDict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_LoadParamFromPyDict" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  arg2 = obj1;
  {
    try {
      result = (int)(arg1)->LoadParamFromPyDict(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_SetContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_SetContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_SetContWorld" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonSolver_SetContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->SetContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_InitSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_InitSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_InitSolver" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_InitSolverNIB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_InitSolverNIB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_InitSolverNIB" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolverNIB();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_InitSolverW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_InitSolverW",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_InitSolverW" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolverW();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_InitSolverAD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_InitSolverAD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_InitSolverAD" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolverAD();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_SetQmobForPNP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_SetQmobForPNP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_SetQmobForPNP" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->SetQmobForPNP();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_SetQmobFromConcentration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_SetQmobFromConcentration",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_SetQmobFromConcentration" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->SetQmobFromConcentration();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_SetQmobFromConcentrationDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_SetQmobFromConcentrationDouble",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_SetQmobFromConcentrationDouble" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->SetQmobFromConcentrationDouble();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_Solve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_Solve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_Solve" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Solve();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PoissonSolverNIB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_PoissonSolverNIB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PoissonSolverNIB" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_PoissonSolverNIB" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      result = (int)(arg1)->PoissonSolverNIB(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PoissonSolverNIB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_PoissonSolverNIB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PoissonSolverNIB" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->PoissonSolverNIB();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PoissonSolverNIB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_PoissonSolver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PoissonSolver_PoissonSolverNIB__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_PoissonSolver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PoissonSolver_PoissonSolverNIB__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PoissonSolver_PoissonSolverNIB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoissonSolver::PoissonSolverNIB(bool)\n"
    "    PoissonSolver::PoissonSolverNIB()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PoissonSolverAD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_PoissonSolverAD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PoissonSolverAD" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->PoissonSolverAD();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_PoissonSolverW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_PoissonSolverW",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_PoissonSolverW" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->PoissonSolverW();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergy" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergy" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergy(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergyFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergyFloat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergyFloat" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergyFloat" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyFloat(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergyDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergyDouble",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergyDouble" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergyDouble" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyDouble(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergyLongDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergyLongDouble",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergyLongDouble" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergyLongDouble" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyLongDouble(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergyAnalizer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergyAnalizer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergyAnalizer" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergyAnalizer" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyAnalizer(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergy0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergy0",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergy0" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergy0" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergy0(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergy1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergy1",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergy1" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergy1" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergy1(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergy3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergy3",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergy3" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergy3" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergy3(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergyMaxPhiChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergyMaxPhiChange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergyMaxPhiChange" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergyMaxPhiChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyMaxPhiChange(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalcSystemEnergyStdDevPhi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonSolver_CalcSystemEnergyStdDevPhi",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalcSystemEnergyStdDevPhi" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalcSystemEnergyStdDevPhi" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyStdDevPhi(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_CalculateEnergyPAD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  float arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  float *arg5 = (float *) 0 ;
  int *arg6 = (int *) 0 ;
  int *arg7 = (int *) 0 ;
  int arg8 ;
  int arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  int val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:PoissonSolver_CalculateEnergyPAD",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "6"" of type '" "int *""'"); 
  }
  arg6 = reinterpret_cast< int * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "7"" of type '" "int *""'"); 
  }
  arg7 = reinterpret_cast< int * >(argp7);
  ecode8 = SWIG_AsVal_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = static_cast< int >(val8);
  ecode9 = SWIG_AsVal_int(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "PoissonSolver_CalculateEnergyPAD" "', argument " "9"" of type '" "int""'");
  } 
  arg9 = static_cast< int >(val9);
  {
    try {
      result = (float)(arg1)->CalculateEnergyPAD(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ShowParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_ShowParameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ShowParameters" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowParameters();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonSolver_ShowProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonSolver *arg1 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonSolver_ShowProperties",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonSolver_ShowProperties" "', argument " "1"" of type '" "PoissonSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowProperties();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonSolver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PoissonSolver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PoissonBoltzmannSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonBoltzmannSolver")) SWIG_fail;
  {
    try {
      result = (PoissonBoltzmannSolver *)new PoissonBoltzmannSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonBoltzmannSolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonBoltzmannSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonBoltzmannSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonBoltzmannSolver" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_InitZero" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Clear" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_solver_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_solver_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_solver_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_solver_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->solver = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_solver_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_solver_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_solver_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->solver);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_MaxIterationsLPB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_MaxIterationsLPB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_MaxIterationsLPB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_MaxIterationsLPB_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIterationsLPB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_MaxIterationsLPB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_MaxIterationsLPB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_MaxIterationsLPB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->MaxIterationsLPB);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_MaxIterationsNPB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_MaxIterationsNPB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_MaxIterationsNPB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_MaxIterationsNPB_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIterationsNPB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_MaxIterationsNPB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_MaxIterationsNPB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_MaxIterationsNPB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->MaxIterationsNPB);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ConvergenceCheck_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_ConvergenceCheck_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ConvergenceCheck_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_ConvergenceCheck_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvergenceCheck = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ConvergenceCheck_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_ConvergenceCheck_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ConvergenceCheck_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->ConvergenceCheck);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Convergence_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_Convergence_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Convergence_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_Convergence_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Convergence = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Convergence_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_Convergence_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Convergence_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->Convergence);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Relaxation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_Relaxation_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Relaxation_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_Relaxation_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Relaxation = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Relaxation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_Relaxation_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Relaxation_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->Relaxation);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_verbose_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_verbose_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_verbose_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_verbose_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->verbose = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_verbose_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_verbose_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_verbose_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (bool) ((arg1)->verbose);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_totalChange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_totalChange_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_totalChange_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_totalChange_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalChange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_totalChange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_totalChange_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_totalChange_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (double) ((arg1)->totalChange);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_relativeChange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_relativeChange_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_relativeChange_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_relativeChange_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->relativeChange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_relativeChange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_relativeChange_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_relativeChange_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (double) ((arg1)->relativeChange);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_totalEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_totalEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_totalEnergy_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_totalEnergy_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_totalEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_totalEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_totalEnergy_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (double) ((arg1)->totalEnergy);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_totalEnergyInd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_totalEnergyInd_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_totalEnergyInd_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_totalEnergyInd_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalEnergyInd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_totalEnergyInd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_totalEnergyInd_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_totalEnergyInd_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (double) ((arg1)->totalEnergyInd);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ConvFac_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_ConvFac_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ConvFac_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_ConvFac_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->ConvFac = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ConvFac_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_ConvFac_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ConvFac_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (double) ((arg1)->ConvFac);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_m_ContWorld_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_m_ContWorld_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_m_ContWorld_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_m_ContWorld_set" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  if (arg1) (arg1)->m_ContWorld = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_m_ContWorld_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_m_ContWorld_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_m_ContWorld_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (ContWorld *) ((arg1)->m_ContWorld);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_NoSingularNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_NoSingularNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_NoSingularNum_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_NoSingularNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->NoSingularNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""NoSingularNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_NoSingularNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_NoSingularNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_NoSingularNum_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *)(int *) ((arg1)->NoSingularNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexNoSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_IndexNoSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexNoSingular_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_IndexNoSingular_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexNoSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexNoSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_IndexNoSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexNoSingular_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *) ((arg1)->IndexNoSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_SingularNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_SingularNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_SingularNum_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_SingularNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->SingularNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""SingularNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_SingularNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_SingularNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_SingularNum_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *)(int *) ((arg1)->SingularNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_IndexSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexSingular_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_IndexSingular_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_IndexSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexSingular_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *) ((arg1)->IndexSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricXS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXS_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricXS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricXS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXS_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricYS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYS_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricYS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricYS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYS_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricZS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZS_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricZS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricZS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZS_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZSSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricZSSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZSSUM_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricZSSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZSSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZSSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricZSSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZSSUM_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZSSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricXmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXmS_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricXmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricXmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXmS_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricYmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYmS_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricYmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricYmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYmS_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricZmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZmS_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricZmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricZmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZmS_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_QstS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_QstS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_QstS_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_QstS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QstS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_QstS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_QstS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_QstS_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->QstS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_PhiSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_PhiSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_PhiSingular_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_PhiSingular_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->PhiSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_PhiSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_PhiSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_PhiSingular_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->PhiSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_DielBoarderNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_DielBoarderNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_DielBoarderNum_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_DielBoarderNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->DielBoarderNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBoarderNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_DielBoarderNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_DielBoarderNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_DielBoarderNum_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *)(int *) ((arg1)->DielBoarderNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexDielBoarder_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_IndexDielBoarder_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexDielBoarder_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_IndexDielBoarder_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexDielBoarder = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexDielBoarder_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_IndexDielBoarder_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexDielBoarder_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *) ((arg1)->IndexDielBoarder);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricXDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXDB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricXDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricXDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXDB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricYDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYDB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricYDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricYDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYDB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricZDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZDB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricZDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricZDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZDB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZDBSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricZDBSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZDBSUM_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricZDBSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZDBSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZDBSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricZDBSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZDBSUM_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZDBSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricXmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXmDB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricXmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricXmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricXmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricXmDB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricYmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYmDB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricYmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricYmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricYmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricYmDB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricZmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZmDB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricZmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricZmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricZmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricZmDB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ChargeNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_ChargeNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ChargeNum_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_ChargeNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->ChargeNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""ChargeNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ChargeNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_ChargeNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ChargeNum_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *)(int *) ((arg1)->ChargeNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexCharge_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_IndexCharge_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexCharge_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_IndexCharge_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexCharge = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexCharge_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_IndexCharge_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexCharge_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *) ((arg1)->IndexCharge);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricCh_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_dielectricCh_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricCh_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_dielectricCh_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricCh = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_dielectricCh_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_dielectricCh_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_dielectricCh_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->dielectricCh);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Qst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_Qst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Qst_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_Qst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Qst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Qst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_Qst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Qst_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->Qst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_PhiCharge_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_PhiCharge_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_PhiCharge_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_PhiCharge_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->PhiCharge = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_PhiCharge_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_PhiCharge_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_PhiCharge_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->PhiCharge);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_PBZoneNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_PBZoneNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_PBZoneNum_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_PBZoneNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->PBZoneNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBZoneNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_PBZoneNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_PBZoneNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_PBZoneNum_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *)(int *) ((arg1)->PBZoneNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexPBZone_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_IndexPBZone_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexPBZone_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_IndexPBZone_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexPBZone = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IndexPBZone_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_IndexPBZone_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IndexPBZone_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int *) ((arg1)->IndexPBZone);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om2d6LPB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_om2d6LPB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om2d6LPB_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_om2d6LPB_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om2d6LPB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om2d6LPB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_om2d6LPB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om2d6LPB_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->om2d6LPB);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IonicStrength_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_IonicStrength_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IonicStrength_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_IonicStrength_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->IonicStrength = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_IonicStrength_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_IonicStrength_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_IonicStrength_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->IonicStrength);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_GS_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_X_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_GS_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_GS_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_X_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->GS_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_Y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_GS_Y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_Y_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_GS_Y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_Y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_GS_Y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_Y_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->GS_Y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_GS_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_Z_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_GS_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_GS_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_Z_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->GS_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_GS_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_XY_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_GS_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_GS_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_XY_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->GS_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_XYZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_GS_XYZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_XYZ_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_GS_XYZ_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_XYZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GS_XYZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_GS_XYZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GS_XYZ_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (int) ((arg1)->GS_XYZ);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GridScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_GridScale_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GridScale_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_GridScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->GridScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GridScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_GridScale_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GridScale_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->GridScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_potential_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_potential_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_potential_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_potential_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->potential = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_potential_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_potential_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_potential_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float *) ((arg1)->potential);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_om2_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om2_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_om2_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_om2_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om2_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->om2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_om1_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om1_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_om1_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_om1_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om1_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->om1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om2d6_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_om2d6_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om2d6_set" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_om2d6_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->om2d6 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_om2d6_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_om2d6_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_om2d6_get" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  result = (float) ((arg1)->om2d6);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_GuessNumberOfIteration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_GuessNumberOfIteration",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_GuessNumberOfIteration" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->GuessNumberOfIteration();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_SetRelaxation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_SetRelaxation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_SetRelaxation" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_SetRelaxation" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->SetRelaxation(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_SetContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_SetContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_SetContWorld" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonBoltzmannSolver_SetContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->SetContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_InitSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_InitSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_InitSolver" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_InitSolverNIB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_InitSolverNIB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_InitSolverNIB" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolverNIB();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_Solve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_Solve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_Solve" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Solve();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_LinearPBSolverNIB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_LinearPBSolverNIB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_LinearPBSolverNIB" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_LinearPBSolverNIB" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->LinearPBSolverNIB(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_NonlinearPBSolverNIB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_NonlinearPBSolverNIB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_NonlinearPBSolverNIB" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_NonlinearPBSolverNIB" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->NonlinearPBSolverNIB(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_CalcSystemEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_CalcSystemEnergy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_CalcSystemEnergy" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_CalcSystemEnergy" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergy(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_CalcSystemEnergyStdDevPhi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonBoltzmannSolver_CalcSystemEnergyStdDevPhi",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_CalcSystemEnergyStdDevPhi" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonBoltzmannSolver_CalcSystemEnergyStdDevPhi" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyStdDevPhi(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ShowParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_ShowParameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ShowParameters" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowParameters();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonBoltzmannSolver_ShowProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonBoltzmannSolver *arg1 = (PoissonBoltzmannSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonBoltzmannSolver_ShowProperties",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonBoltzmannSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonBoltzmannSolver_ShowProperties" "', argument " "1"" of type '" "PoissonBoltzmannSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonBoltzmannSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowProperties();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonBoltzmannSolver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PoissonBoltzmannSolver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PoissonNernstPlanckSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PoissonNernstPlanckSolver")) SWIG_fail;
  {
    try {
      result = (PoissonNernstPlanckSolver *)new PoissonNernstPlanckSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonNernstPlanckSolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoissonNernstPlanckSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PoissonNernstPlanckSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoissonNernstPlanckSolver" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_InitZero" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Clear" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_MaxIterations_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_MaxIterations_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_MaxIterations_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_MaxIterations_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIterations = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_MaxIterations_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_MaxIterations_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_MaxIterations_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (int) ((arg1)->MaxIterations);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_ConvergenceCheck_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_ConvergenceCheck_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_ConvergenceCheck_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_ConvergenceCheck_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvergenceCheck = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_ConvergenceCheck_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_ConvergenceCheck_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_ConvergenceCheck_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (int) ((arg1)->ConvergenceCheck);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_tolerance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_tolerance_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_tolerance_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_tolerance_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->tolerance = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_tolerance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_tolerance_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_tolerance_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (float) ((arg1)->tolerance);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_currentDimension_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_currentDimension_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_currentDimension_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_currentDimension_set" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  if (arg1) (arg1)->currentDimension = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_currentDimension_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_currentDimension_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_currentDimension_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (char) ((arg1)->currentDimension);
  resultobj = SWIG_From_char(static_cast< char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_verbose_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_verbose_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_verbose_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_verbose_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->verbose = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_verbose_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_verbose_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_verbose_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (bool) ((arg1)->verbose);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_PMFWeightMode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_PMFWeightMode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_PMFWeightMode_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_PMFWeightMode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->PMFWeightMode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_PMFWeightMode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_PMFWeightMode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_PMFWeightMode_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (int) ((arg1)->PMFWeightMode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_PMFWeightModeStr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = (std::vector< std::string,std::allocator< std::string > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_PMFWeightModeStr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_PMFWeightModeStr_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_PMFWeightModeStr_set" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  if (arg1) (arg1)->PMFWeightModeStr = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_PMFWeightModeStr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_PMFWeightModeStr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_PMFWeightModeStr_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *)& ((arg1)->PMFWeightModeStr);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Itot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_Itot_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Itot_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_Itot_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Itot = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Itot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_Itot_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Itot_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double) ((arg1)->Itot);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Ipos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_Ipos_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Ipos_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_Ipos_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Ipos = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Ipos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_Ipos_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Ipos_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double) ((arg1)->Ipos);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Ineg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_Ineg_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Ineg_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_Ineg_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->Ineg = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Ineg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_Ineg_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Ineg_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double) ((arg1)->Ineg);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_ItotErr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_ItotErr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_ItotErr_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_ItotErr_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->ItotErr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_ItotErr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_ItotErr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_ItotErr_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double) ((arg1)->ItotErr);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_IposErr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_IposErr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_IposErr_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_IposErr_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->IposErr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_IposErr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_IposErr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_IposErr_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double) ((arg1)->IposErr);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_InegErr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_InegErr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_InegErr_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_InegErr_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->InegErr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_InegErr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_InegErr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_InegErr_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double) ((arg1)->InegErr);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_positiveCurrentProfile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_positiveCurrentProfile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_positiveCurrentProfile_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_positiveCurrentProfile_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->positiveCurrentProfile = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_positiveCurrentProfile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_positiveCurrentProfile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_positiveCurrentProfile_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double *) ((arg1)->positiveCurrentProfile);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_negativeCurrentProfile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_negativeCurrentProfile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_negativeCurrentProfile_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_negativeCurrentProfile_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->negativeCurrentProfile = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_negativeCurrentProfile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_negativeCurrentProfile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_negativeCurrentProfile_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (double *) ((arg1)->negativeCurrentProfile);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_bLimitCurrentCalc_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_bLimitCurrentCalc_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_bLimitCurrentCalc_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_bLimitCurrentCalc_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->bLimitCurrentCalc = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_bLimitCurrentCalc_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_bLimitCurrentCalc_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_bLimitCurrentCalc_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (bool) ((arg1)->bLimitCurrentCalc);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_LimitCurrentCalcZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_LimitCurrentCalcZ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_LimitCurrentCalcZ_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_LimitCurrentCalcZ_set" "', argument " "2"" of type '" "float [2]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)2; ++ii) *(float *)&arg1->LimitCurrentCalcZ[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""LimitCurrentCalcZ""' of type '""float [2]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_LimitCurrentCalcZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_LimitCurrentCalcZ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_LimitCurrentCalcZ_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (float *)(float *) ((arg1)->LimitCurrentCalcZ);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_SaveMemory_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_SaveMemory_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_SaveMemory_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_SaveMemory_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->SaveMemory = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_SaveMemory_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_SaveMemory_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_SaveMemory_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (bool) ((arg1)->SaveMemory);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_bDouble_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_bDouble_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_bDouble_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_bDouble_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->bDouble = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_bDouble_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_bDouble_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_bDouble_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (bool) ((arg1)->bDouble);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_World_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_World_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_World_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_World_set" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  if (arg1) (arg1)->World = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_World_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_World_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_World_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (ContWorld *) ((arg1)->World);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Poisson_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  PoissonSolver *arg2 = (PoissonSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_Poisson_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Poisson_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_PoissonSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_Poisson_set" "', argument " "2"" of type '" "PoissonSolver *""'"); 
  }
  arg2 = reinterpret_cast< PoissonSolver * >(argp2);
  if (arg1) (arg1)->Poisson = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Poisson_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PoissonSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_Poisson_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Poisson_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (PoissonSolver *) ((arg1)->Poisson);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PoissonSolver, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_NernstPlank_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  NernstPlankSolver *arg2 = (NernstPlankSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_NernstPlank_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_NernstPlank_set" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_NernstPlankSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_NernstPlank_set" "', argument " "2"" of type '" "NernstPlankSolver *""'"); 
  }
  arg2 = reinterpret_cast< NernstPlankSolver * >(argp2);
  if (arg1) (arg1)->NernstPlank = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_NernstPlank_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NernstPlankSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_NernstPlank_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_NernstPlank_get" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  result = (NernstPlankSolver *) ((arg1)->NernstPlank);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_NernstPlankSolver, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_LoadParamFromPyDict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_LoadParamFromPyDict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_LoadParamFromPyDict" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  arg2 = obj1;
  {
    try {
      result = (int)(arg1)->LoadParamFromPyDict(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_SetContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_SetContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_SetContWorld" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_SetContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->SetContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_ShowParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_ShowParameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_ShowParameters" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowParameters();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_ShowProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_ShowProperties",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_ShowProperties" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowProperties();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_InitSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_InitSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_InitSolver" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_Solve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_Solve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_Solve" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Solve();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_SolveSingle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_SolveSingle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_SolveSingle" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->SolveSingle();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_SolveDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PoissonNernstPlanckSolver_SolveDouble",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_SolveDouble" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->SolveDouble();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_CalcCartI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_CalcCartI",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_CalcCartI" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoissonNernstPlanckSolver_CalcCartI" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (VectorField3D *)(arg1)->CalcCartI(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_CalcIinout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PoissonNernstPlanckSolver_CalcIinout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_CalcIinout" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_CalcIinout" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  {
    try {
      result = (VectorField3D *)(arg1)->CalcIinout(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoissonNernstPlanckSolver_CalcAvrI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PoissonNernstPlanckSolver *arg1 = (PoissonNernstPlanckSolver *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PoissonNernstPlanckSolver_CalcAvrI",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PoissonNernstPlanckSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoissonNernstPlanckSolver_CalcAvrI" "', argument " "1"" of type '" "PoissonNernstPlanckSolver *""'"); 
  }
  arg1 = reinterpret_cast< PoissonNernstPlanckSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoissonNernstPlanckSolver_CalcAvrI" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PoissonNernstPlanckSolver_CalcAvrI" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (VectorField3D *)(arg1)->CalcAvrI(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoissonNernstPlanckSolver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PoissonNernstPlanckSolver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PNPUtil(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPUtil *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PNPUtil")) SWIG_fail;
  {
    try {
      result = (PNPUtil *)new PNPUtil();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PNPUtil, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PNPUtil(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PNPUtil *arg1 = (PNPUtil *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PNPUtil",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PNPUtil, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PNPUtil" "', argument " "1"" of type '" "PNPUtil *""'"); 
  }
  arg1 = reinterpret_cast< PNPUtil * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveLargePMFfromPNP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPUtil_RemoveLargePMFfromPNP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveLargePMFfromPNP" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_RemoveLargePMFfromPNP" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)PNPUtil::RemoveLargePMFfromPNP(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveSmallCfromPNP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPUtil_RemoveSmallCfromPNP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveSmallCfromPNP" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_RemoveSmallCfromPNP" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)PNPUtil::RemoveSmallCfromPNP(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveSmallCfromPNPNearDiffBoarder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPUtil_RemoveSmallCfromPNPNearDiffBoarder",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveSmallCfromPNPNearDiffBoarder" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_RemoveSmallCfromPNPNearDiffBoarder" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)PNPUtil::RemoveSmallCfromPNPNearDiffBoarder(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveLargedPMFfromPNP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPUtil_RemoveLargedPMFfromPNP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveLargedPMFfromPNP" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_RemoveLargedPMFfromPNP" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)PNPUtil::RemoveLargedPMFfromPNP(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveLargedPMFandLargePMFfromPNP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPUtil_RemoveLargedPMFandLargePMFfromPNP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveLargedPMFandLargePMFfromPNP" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_RemoveLargedPMFandLargePMFfromPNP" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPUtil_RemoveLargedPMFandLargePMFfromPNP" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)PNPUtil::RemoveLargedPMFandLargePMFfromPNP(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveLargedPMFandLargePMFfromPNPOld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PNPUtil_RemoveLargedPMFandLargePMFfromPNPOld",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveLargedPMFandLargePMFfromPNPOld" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_RemoveLargedPMFandLargePMFfromPNPOld" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPUtil_RemoveLargedPMFandLargePMFfromPNPOld" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)PNPUtil::RemoveLargedPMFandLargePMFfromPNPOld(arg1,arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveCavitiesAtDiffusionMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPUtil_RemoveCavitiesAtDiffusionMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveCavitiesAtDiffusionMap" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)PNPUtil::RemoveCavitiesAtDiffusionMap(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_ScaleDiffusionInTheChannel__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float arg3 ;
  std::vector< float,std::allocator< float > > *arg4 = (std::vector< float,std::allocator< float > > *) 0 ;
  std::vector< float,std::allocator< float > > *arg5 = (std::vector< float,std::allocator< float > > *) 0 ;
  std::vector< float,std::allocator< float > > *arg6 = (std::vector< float,std::allocator< float > > *) 0 ;
  std::vector< float,std::allocator< float > > *arg7 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:PNPUtil_ScaleDiffusionInTheChannel",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg4 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "5"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg5 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "6"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg6 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "7"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg7 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp7);
  {
    try {
      result = (int)PNPUtil::ScaleDiffusionInTheChannel(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_ScaleDiffusionInTheChannel__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  float arg3 ;
  float *arg4 = (float *) 0 ;
  float *arg5 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:PNPUtil_ScaleDiffusionInTheChannel",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PNPUtil_ScaleDiffusionInTheChannel" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  {
    try {
      result = (int)PNPUtil::ScaleDiffusionInTheChannel(arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_ScaleDiffusionInTheChannel(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_PNPUtil_ScaleDiffusionInTheChannel__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ContWorld, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< float,std::allocator< float > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = swig::asptr(argv[4], (std::vector< float,std::allocator< float > >**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = swig::asptr(argv[5], (std::vector< float,std::allocator< float > >**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = swig::asptr(argv[6], (std::vector< float,std::allocator< float > >**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_PNPUtil_ScaleDiffusionInTheChannel__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PNPUtil_ScaleDiffusionInTheChannel'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PNPUtil::ScaleDiffusionInTheChannel(ContWorld *,float,float,std::vector< float,std::allocator< float > > *,std::vector< float,std::allocator< float > > *,std::vector< float,std::allocator< float > > *,std::vector< float,std::allocator< float > > *)\n"
    "    PNPUtil::ScaleDiffusionInTheChannel(ContWorld *,float,float,float *,float *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PNPUtil_ConvertPBLJresultsToDynamicCharge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPUtil_ConvertPBLJresultsToDynamicCharge",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_ConvertPBLJresultsToDynamicCharge" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)PNPUtil::ConvertPBLJresultsToDynamicCharge(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_SetInternalCtoZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPUtil_SetInternalCtoZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_SetInternalCtoZero" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)PNPUtil::SetInternalCtoZero(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_SetCtoZeroWhereDZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPUtil_SetCtoZeroWhereDZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_SetCtoZeroWhereDZero" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)PNPUtil::SetCtoZeroWhereDZero(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_SetDzeroAtEps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PNPUtil_SetDzeroAtEps",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_SetDzeroAtEps" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_SetDzeroAtEps" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)PNPUtil::SetDzeroAtEps(arg1,arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_SetDZeroWithIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPUtil_SetDZeroWithIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_SetDZeroWithIndex" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)PNPUtil::SetDZeroWithIndex(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveQfromNI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PNPUtil_RemoveQfromNI",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveQfromNI" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (int)PNPUtil::RemoveQfromNI(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  float arg2 ;
  int arg3 ;
  float arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (int)PNPUtil::RemoveNodesFromPNPBasedOnNPCriteria(arg1,arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PNPUtil_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PNPUtil, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_NPMaskBuilder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  NPMaskBuilder *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_NPMaskBuilder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NPMaskBuilder" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (NPMaskBuilder *)new NPMaskBuilder(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_NPMaskBuilder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NPMaskBuilder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_NPMaskBuilder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NPMaskBuilder" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_CmdNPMaskBuilder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  TiXmlElement *arg2 = (TiXmlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NPMaskBuilder_CmdNPMaskBuilder",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_CmdNPMaskBuilder" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_TiXmlElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NPMaskBuilder_CmdNPMaskBuilder" "', argument " "2"" of type '" "TiXmlElement const *""'"); 
  }
  arg2 = reinterpret_cast< TiXmlElement * >(argp2);
  {
    try {
      result = (int)(arg1)->CmdNPMaskBuilder((TiXmlElement const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_InitNPMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NPMaskBuilder_InitNPMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_InitNPMask" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  {
    try {
      result = (int)(arg1)->InitNPMask();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_SetToNIDiffusion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NPMaskBuilder_SetToNIDiffusion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_SetToNIDiffusion" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  {
    try {
      result = (int)(arg1)->SetToNIDiffusion();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_RemoveTubeRegion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:NPMaskBuilder_RemoveTubeRegion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "NPMaskBuilder_RemoveTubeRegion" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  {
    try {
      result = (int)(arg1)->RemoveTubeRegion(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_RemoveHighC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NPMaskBuilder_RemoveHighC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_RemoveHighC" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NPMaskBuilder_RemoveHighC" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->RemoveHighC(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_ReadNPMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NPMaskBuilder_ReadNPMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_ReadNPMask" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NPMaskBuilder_ReadNPMask" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->ReadNPMask((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_WriteNPMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NPMaskBuilder_WriteNPMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_WriteNPMask" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NPMaskBuilder_WriteNPMask" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->WriteNPMask((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_m_ContWorld_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NPMaskBuilder_m_ContWorld_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_m_ContWorld_set" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NPMaskBuilder_m_ContWorld_set" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  if (arg1) (arg1)->m_ContWorld = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_m_ContWorld_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NPMaskBuilder_m_ContWorld_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_m_ContWorld_get" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  result = (ContWorld *) ((arg1)->m_ContWorld);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_NPMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  VectorField3D *arg2 = (VectorField3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NPMaskBuilder_NPMask_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_NPMask_set" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VectorField3D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NPMaskBuilder_NPMask_set" "', argument " "2"" of type '" "VectorField3D *""'"); 
  }
  arg2 = reinterpret_cast< VectorField3D * >(argp2);
  if (arg1) (arg1)->NPMask = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NPMaskBuilder_NPMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NPMaskBuilder *arg1 = (NPMaskBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VectorField3D *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NPMaskBuilder_NPMask_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_NPMaskBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NPMaskBuilder_NPMask_get" "', argument " "1"" of type '" "NPMaskBuilder *""'"); 
  }
  arg1 = reinterpret_cast< NPMaskBuilder * >(argp1);
  result = (VectorField3D *) ((arg1)->NPMask);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VectorField3D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NPMaskBuilder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_NPMaskBuilder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IAVCalc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IAVCalc *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IAVCalc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IAVCalc" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (IAVCalc *)new IAVCalc(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IAVCalc, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IAVCalc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IAVCalc *arg1 = (IAVCalc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IAVCalc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IAVCalc, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IAVCalc" "', argument " "1"" of type '" "IAVCalc *""'"); 
  }
  arg1 = reinterpret_cast< IAVCalc * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IAVCalc_CmdIAVCalcDict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IAVCalc *arg1 = (IAVCalc *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IAVCalc_CmdIAVCalcDict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IAVCalc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IAVCalc_CmdIAVCalcDict" "', argument " "1"" of type '" "IAVCalc *""'"); 
  }
  arg1 = reinterpret_cast< IAVCalc * >(argp1);
  arg2 = obj1;
  {
    try {
      result = (int)(arg1)->CmdIAVCalcDict(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IAVCalc_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IAVCalc, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_GS_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_X_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PartialWorldForSAS_GS_X_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_GS_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_X_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int) ((arg1)->GS_X);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_Y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_GS_Y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_Y_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PartialWorldForSAS_GS_Y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_Y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_GS_Y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_Y_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int) ((arg1)->GS_Y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_GS_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_Z_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PartialWorldForSAS_GS_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_GS_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_Z_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int) ((arg1)->GS_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_GS_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_XY_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PartialWorldForSAS_GS_XY_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->GS_XY = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_GS_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_GS_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_GS_XY_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int) ((arg1)->GS_XY);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_locGS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_locGS_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_locGS_Z_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PartialWorldForSAS_locGS_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->locGS_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_locGS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_locGS_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_locGS_Z_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int) ((arg1)->locGS_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_locR0_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_locR0_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_locR0_Z_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PartialWorldForSAS_locR0_Z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->locR0_Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_locR0_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_locR0_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_locR0_Z_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int) ((arg1)->locR0_Z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_Surf_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_Surf_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_Surf_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PartialWorldForSAS_Surf_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Surf = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_Surf_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_Surf_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_Surf_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (float *) ((arg1)->Surf);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_Field_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_Field_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_Field_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PartialWorldForSAS_Field_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->Field = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_Field_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_Field_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_Field_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int *) ((arg1)->Field);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_surf_points_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  float3 *arg2 = (float3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_surf_points_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_surf_points_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PartialWorldForSAS_surf_points_set" "', argument " "2"" of type '" "float3 *""'"); 
  }
  arg2 = reinterpret_cast< float3 * >(argp2);
  if (arg1) (arg1)->surf_points = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_surf_points_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float3 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_surf_points_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_surf_points_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (float3 *) ((arg1)->surf_points);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_Nsurf_points_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PartialWorldForSAS_Nsurf_points_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_Nsurf_points_set" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PartialWorldForSAS_Nsurf_points_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Nsurf_points = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PartialWorldForSAS_Nsurf_points_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PartialWorldForSAS_Nsurf_points_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PartialWorldForSAS_Nsurf_points_get" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  result = (int) ((arg1)->Nsurf_points);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PartialWorldForSAS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PartialWorldForSAS")) SWIG_fail;
  {
    try {
      result = (PartialWorldForSAS *)new PartialWorldForSAS();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PartialWorldForSAS, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PartialWorldForSAS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PartialWorldForSAS *arg1 = (PartialWorldForSAS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PartialWorldForSAS",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PartialWorldForSAS, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PartialWorldForSAS" "', argument " "1"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg1 = reinterpret_cast< PartialWorldForSAS * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PartialWorldForSAS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PartialWorldForSAS, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GenericGeometricalObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_GenericGeometricalObject")) SWIG_fail;
  {
    try {
      result = (GenericGeometricalObject *)new GenericGeometricalObject();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GenericGeometricalObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GenericGeometricalObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GenericGeometricalObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_GenericGeometricalObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GenericGeometricalObject" "', argument " "1"" of type '" "GenericGeometricalObject const *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  {
    try {
      result = (GenericGeometricalObject *)new GenericGeometricalObject((GenericGeometricalObject const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GenericGeometricalObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GenericGeometricalObject(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_GenericGeometricalObject__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GenericGeometricalObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_GenericGeometricalObject__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_GenericGeometricalObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GenericGeometricalObject::GenericGeometricalObject()\n"
    "    GenericGeometricalObject::GenericGeometricalObject(GenericGeometricalObject const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_GenericGeometricalObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GenericGeometricalObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GenericGeometricalObject" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  GenericGeometricalObject *arg2 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_Copy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_Copy" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_Copy" "', argument " "2"" of type '" "GenericGeometricalObject const *""'"); 
  }
  arg2 = reinterpret_cast< GenericGeometricalObject * >(argp2);
  {
    try {
      result = (int)(arg1)->Copy((GenericGeometricalObject const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_InitZero" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_Clear" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_Epsilon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_Epsilon_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_Epsilon_set" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_Epsilon_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->Epsilon = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_Epsilon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_Epsilon_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_Epsilon_get" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  result = (int) ((arg1)->Epsilon);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_NIonsTypes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_NIonsTypes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_NIonsTypes_set" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_NIonsTypes_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->NIonsTypes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_NIonsTypes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_NIonsTypes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_NIonsTypes_get" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  result = (int) ((arg1)->NIonsTypes);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_IonsD_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_IonsD_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_IonsD_set" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_IonsD_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IonsD = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_IonsD_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_IonsD_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_IonsD_get" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  result = (int *) ((arg1)->IonsD);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_C_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_C_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_C_set" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_C_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->C = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_C_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_C_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_C_get" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  result = (float *) ((arg1)->C);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_setPar__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GenericGeometricalObject_setPar",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_setPar" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_setPar" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_setPar" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_setPar" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_setPar" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_setPar" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->setPar(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_setPar__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GenericGeometricalObject_setPar",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_setPar" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_setPar" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_setPar" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_setPar" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_setPar" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->setPar(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_setPar(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GenericGeometricalObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_GenericGeometricalObject_setPar__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GenericGeometricalObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_GenericGeometricalObject_setPar__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'GenericGeometricalObject_setPar'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GenericGeometricalObject::setPar(int,int,int,float,float)\n"
    "    GenericGeometricalObject::setPar(int,int,int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_Print",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_Print" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_Print" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  {
    try {
      result = (int)(arg1)->Print(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_Print",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_Print" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  {
    try {
      result = (int)(arg1)->Print();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GenericGeometricalObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_GenericGeometricalObject_Print__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GenericGeometricalObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GenericGeometricalObject_Print__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'GenericGeometricalObject_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GenericGeometricalObject::Print(BuildWorldNI *)\n"
    "    GenericGeometricalObject::Print()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_cxxSetParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  float *arg5 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GenericGeometricalObject_cxxSetParam",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_cxxSetParam" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_cxxSetParam" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_cxxSetParam" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GenericGeometricalObject_cxxSetParam" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GenericGeometricalObject_cxxSetParam" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  {
    try {
      result = (int)(arg1)->setParam(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_ChangeUnits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GenericGeometricalObject_ChangeUnits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_ChangeUnits" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_ChangeUnits" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_ChangeUnits" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (int)(arg1)->ChangeUnits(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_BuildPreMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  float *arg7 = (float *) 0 ;
  float arg8 ;
  float arg9 ;
  float *arg10 = (float *) 0 ;
  int arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:GenericGeometricalObject_BuildPreMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "7"" of type '" "float *""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "10"" of type '" "float *""'"); 
  }
  arg10 = reinterpret_cast< float * >(argp10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "GenericGeometricalObject_BuildPreMaps" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  {
    try {
      result = (int)(arg1)->BuildPreMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_BuildDistMapsFromAtomsCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  float *arg4 = (float *) 0 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GenericGeometricalObject_BuildDistMapsFromAtomsCenter",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_BuildDistMapsFromAtomsCenter" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_BuildDistMapsFromAtomsCenter" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_BuildDistMapsFromAtomsCenter" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GenericGeometricalObject_BuildDistMapsFromAtomsCenter" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_BuildDistMapsFromAtomsCenter" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_BuildDistMapsFromAtomsCenter" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->BuildDistMapsFromAtomsCenter(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_BuildDistMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  float *arg7 = (float *) 0 ;
  float arg8 ;
  float arg9 ;
  float *arg10 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:GenericGeometricalObject_BuildDistMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "7"" of type '" "float *""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "GenericGeometricalObject_BuildDistMaps" "', argument " "10"" of type '" "float *""'"); 
  }
  arg10 = reinterpret_cast< float * >(argp10);
  {
    try {
      result = (int)(arg1)->BuildDistMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_BuildPreMapsMemLim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  PartialWorldForSAS *arg2 = (PartialWorldForSAS *) 0 ;
  int arg3 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GenericGeometricalObject_BuildPreMapsMemLim",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_BuildPreMapsMemLim" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_BuildPreMapsMemLim" "', argument " "2"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg2 = reinterpret_cast< PartialWorldForSAS * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_BuildPreMapsMemLim" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_BuildPreMapsMemLim" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GenericGeometricalObject_BuildPreMapsMemLim" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_BuildPreMapsMemLim" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GenericGeometricalObject_BuildPreMapsMemLim" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->BuildPreMapsMemLim(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_BuildPreMapsCharges(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:GenericGeometricalObject_BuildPreMapsCharges",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_BuildPreMapsCharges" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_BuildPreMapsCharges" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_BuildPreMapsCharges" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GenericGeometricalObject_BuildPreMapsCharges" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try {
      result = (int)(arg1)->BuildPreMapsCharges(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_BuildLJRepultionMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GenericGeometricalObject_BuildLJRepultionMap",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_BuildLJRepultionMap" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_BuildLJRepultionMap" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_BuildLJRepultionMap" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_BuildLJRepultionMap" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GenericGeometricalObject_BuildLJRepultionMap" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_BuildLJRepultionMap" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->BuildLJRepultionMap(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_SetBoundaryCondition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GenericGeometricalObject_SetBoundaryCondition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_SetBoundaryCondition" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_SetBoundaryCondition" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_SetBoundaryCondition" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  {
    try {
      result = (int)(arg1)->SetBoundaryCondition(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_RotateGGO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  double *arg2 = (double *) 0 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:GenericGeometricalObject_RotateGGO",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_RotateGGO" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_RotateGGO" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_RotateGGO" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_RotateGGO" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (int)(arg1)->RotateGGO(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_RotateVecDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  double arg4 ;
  double arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GenericGeometricalObject_RotateVecDouble",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_RotateVecDouble" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_RotateVecDouble" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_RotateVecDouble" "', argument " "3"" of type '" "double *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_RotateVecDouble" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_RotateVecDouble" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      (arg1)->RotateVecDouble(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_RotateVecFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GenericGeometricalObject_RotateVecFloat",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_RotateVecFloat" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_RotateVecFloat" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_RotateVecFloat" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_RotateVecFloat" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_RotateVecFloat" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      (arg1)->RotateVecFloat(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_ID_GridBegin_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_ID_GridBegin_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_ID_GridBegin_set" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_ID_GridBegin_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ID_GridBegin = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_ID_GridBegin_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_ID_GridBegin_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_ID_GridBegin_get" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  result = (int) ((arg1)->ID_GridBegin);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_ID_GridEnd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_ID_GridEnd_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_ID_GridEnd_set" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_ID_GridEnd_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ID_GridEnd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_ID_GridEnd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GenericGeometricalObject_ID_GridEnd_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_ID_GridEnd_get" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  result = (int) ((arg1)->ID_GridEnd);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_SetGridIDs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GenericGeometricalObject_SetGridIDs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_SetGridIDs" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_SetGridIDs" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->SetGridIDs(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_GetDistToSurf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GenericGeometricalObject_GetDistToSurf",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_GetDistToSurf" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_GetDistToSurf" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_GetDistToSurf" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_GetDistToSurf" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_GetDistToSurf" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_GetDistToSurf" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GenericGeometricalObject_GetDistToSurf" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (float)(arg1)->GetDistToSurf(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_GetDistSQToUnitCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GenericGeometricalObject_GetDistSQToUnitCenter",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_GetDistSQToUnitCenter" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GenericGeometricalObject_GetDistSQToUnitCenter" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GenericGeometricalObject_GetDistSQToUnitCenter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GenericGeometricalObject_GetDistSQToUnitCenter" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_GetDistSQToUnitCenter" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_GetDistSQToUnitCenter" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GenericGeometricalObject_GetDistSQToUnitCenter" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (float)(arg1)->GetDistSQToUnitCenter(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GenericGeometricalObject_GetClosestSurfPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GenericGeometricalObject *arg1 = (GenericGeometricalObject *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GenericGeometricalObject_GetClosestSurfPoint",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GenericGeometricalObject_GetClosestSurfPoint" "', argument " "1"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg1 = reinterpret_cast< GenericGeometricalObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GenericGeometricalObject_GetClosestSurfPoint" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GenericGeometricalObject_GetClosestSurfPoint" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GenericGeometricalObject_GetClosestSurfPoint" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GenericGeometricalObject_GetClosestSurfPoint" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GenericGeometricalObject_GetClosestSurfPoint" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GenericGeometricalObject_GetClosestSurfPoint" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      (arg1)->GetClosestSurfPoint(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GenericGeometricalObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_GenericGeometricalObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GOAtoms__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_GOAtoms")) SWIG_fail;
  {
    try {
      result = (GOAtoms *)new GOAtoms();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GOAtoms, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GOAtoms__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GOAtoms *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_GOAtoms",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GOAtoms" "', argument " "1"" of type '" "GOAtoms const *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  {
    try {
      result = (GOAtoms *)new GOAtoms((GOAtoms const *)arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GOAtoms, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GOAtoms(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_GOAtoms__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOAtoms, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_GOAtoms__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_GOAtoms'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GOAtoms::GOAtoms()\n"
    "    GOAtoms::GOAtoms(GOAtoms const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_GOAtoms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GOAtoms",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GOAtoms" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  GOAtoms *arg2 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_Copy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_Copy" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_Copy" "', argument " "2"" of type '" "GOAtoms const *""'"); 
  }
  arg2 = reinterpret_cast< GOAtoms * >(argp2);
  {
    try {
      result = (int)(arg1)->Copy((GOAtoms const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_InitZero" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_Clear" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_Print",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_Print" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_Print" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  {
    try {
      result = (int)(arg1)->Print(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_Print",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_Print" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  {
    try {
      result = (int)(arg1)->Print();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOAtoms, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_GOAtoms_Print__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOAtoms, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GOAtoms_Print__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'GOAtoms_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GOAtoms::Print(BuildWorldNI *)\n"
    "    GOAtoms::Print()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GOAtoms_NAtoms_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_NAtoms_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_NAtoms_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_NAtoms_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->NAtoms = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_NAtoms_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_NAtoms_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_NAtoms_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (int) ((arg1)->NAtoms);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_r_x_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_x_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_r_x_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  if (arg1) (arg1)->r_x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_r_x_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_x_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) ((arg1)->r_x);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_r_y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_y_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_r_y_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  if (arg1) (arg1)->r_y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_r_y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_y_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) ((arg1)->r_y);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_r_z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_z_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_r_z_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  if (arg1) (arg1)->r_z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_r_z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_z_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) ((arg1)->r_z);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_r_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_r_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > [3]""'"); 
  } 
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(std::vector< float,std::allocator< float > > *)&arg1->r[ii] = *((std::vector< float,std::allocator< float > > *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""r""' of type '""std::vector< float,std::allocator< float > > [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_r_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_r_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_r_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *)(std::vector< float,std::allocator< float > > *) ((arg1)->r);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_R_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_R_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_R_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_R_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  if (arg1) (arg1)->R = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_R_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_R_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_R_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *)& ((arg1)->R);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_q_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_q_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_q_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_q_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  if (arg1) (arg1)->q = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_q_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_q_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_q_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *)& ((arg1)->q);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_HalfSigma_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_HalfSigma_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_HalfSigma_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_HalfSigma_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  if (arg1) (arg1)->HalfSigma = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_HalfSigma_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_HalfSigma_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_HalfSigma_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *)& ((arg1)->HalfSigma);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_FourEpsilon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = (std::vector< float,std::allocator< float > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_FourEpsilon_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_FourEpsilon_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_FourEpsilon_set" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  if (arg1) (arg1)->FourEpsilon = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_FourEpsilon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_FourEpsilon_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_FourEpsilon_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< float,std::allocator< float > > *)& ((arg1)->FourEpsilon);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LJA_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *arg2 = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LJA_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LJA_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LJA_set" "', argument " "2"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > * >(argp2);
  if (arg1) (arg1)->LJA = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LJA_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_LJA_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LJA_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)& ((arg1)->LJA);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LJB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *arg2 = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LJB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LJB_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LJB_set" "', argument " "2"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > * >(argp2);
  if (arg1) (arg1)->LJB = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LJB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_LJB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LJB_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)& ((arg1)->LJB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SRA_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *arg2 = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_SRA_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SRA_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_SRA_set" "', argument " "2"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > * >(argp2);
  if (arg1) (arg1)->SRA = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SRA_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_SRA_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SRA_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)& ((arg1)->SRA);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SRN_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *arg2 = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_SRN_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SRN_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_SRN_set" "', argument " "2"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > * >(argp2);
  if (arg1) (arg1)->SRN = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SRN_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_SRN_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SRN_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)& ((arg1)->SRN);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_IER_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > *arg2 = (std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_IER_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_IER_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_IER_set" "', argument " "2"" of type '" "std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > * >(argp2);
  if (arg1) (arg1)->IER = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_IER_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_IER_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_IER_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > *)& ((arg1)->IER);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_DefineChargeDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_DefineChargeDist",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_DefineChargeDist" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_DefineChargeDist" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->DefineChargeDist((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_ChargeDist_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_ChargeDist_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_ChargeDist_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_ChargeDist_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ChargeDist = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_ChargeDist_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_ChargeDist_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_ChargeDist_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (int) ((arg1)->ChargeDist);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_ChargeDistN_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_ChargeDistN_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_ChargeDistN_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_ChargeDistN_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ChargeDistN = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_ChargeDistN_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_ChargeDistN_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_ChargeDistN_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (int) ((arg1)->ChargeDistN);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_Offset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_Offset_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_Offset_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_Offset_set" "', argument " "2"" of type '" "float [3]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(float *)&arg1->Offset[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Offset""' of type '""float [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_Offset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_Offset_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_Offset_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (float *)(float *) ((arg1)->Offset);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_MakePreRoll_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_MakePreRoll_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_MakePreRoll_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_MakePreRoll_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->MakePreRoll = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_MakePreRoll_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_MakePreRoll_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_MakePreRoll_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (bool) ((arg1)->MakePreRoll);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_setPar__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GOAtoms_setPar",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_setPar" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_setPar" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtoms_setPar" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtoms_setPar" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_setPar" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_setPar" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->setPar(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_setPar__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GOAtoms_setPar",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_setPar" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_setPar" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtoms_setPar" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtoms_setPar" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_setPar" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->setPar(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_setPar(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOAtoms, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_GOAtoms_setPar__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOAtoms, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_GOAtoms_setPar__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'GOAtoms_setPar'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GOAtoms::setPar(int,int,int,float,float)\n"
    "    GOAtoms::setPar(int,int,int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SavePQR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_SavePQR",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SavePQR" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_SavePQR" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->SavePQR((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadPQR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadPQR",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadPQR" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadPQR" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadPQR((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadPQRonlyQR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadPQRonlyQR",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadPQRonlyQR" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadPQRonlyQR" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadPQRonlyQR((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadPRQ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadPRQ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadPRQ" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadPRQ" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadPRQ((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadDelphiStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GOAtoms_LoadDelphiStyle",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadDelphiStyle" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadDelphiStyle" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_LoadDelphiStyle" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOAtoms_LoadDelphiStyle" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_LoadDelphiStyle" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (int)(arg1)->LoadDelphiStyle((char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadPRE(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadPRE",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadPRE" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadPRE" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadPRE((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadPAB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadPAB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadPAB" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadPAB" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadPAB((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadIER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadIER",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadIER" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadIER" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadIER((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadPAN(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadPAN",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadPAN" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadPAN" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadPAN((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_LoadAtomicParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_LoadAtomicParam",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_LoadAtomicParam" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_LoadAtomicParam" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (int)(arg1)->LoadAtomicParam((char const *)arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_IAVMethod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_IAVMethod_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_IAVMethod_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_IAVMethod_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->IAVMethod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_IAVMethod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_IAVMethod_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_IAVMethod_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (int) ((arg1)->IAVMethod);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SetCenterToOrigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_SetCenterToOrigin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SetCenterToOrigin" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  {
    try {
      result = (int)(arg1)->SetCenterToOrigin();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SetCenterToOriginWithRad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_SetCenterToOriginWithRad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SetCenterToOriginWithRad" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  {
    try {
      result = (int)(arg1)->SetCenterToOriginWithRad();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_ChangeUnits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GOAtoms_ChangeUnits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_ChangeUnits" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_ChangeUnits" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtoms_ChangeUnits" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (int)(arg1)->ChangeUnits(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_BuildPreMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  float *arg7 = (float *) 0 ;
  float arg8 ;
  float arg9 ;
  float *arg10 = (float *) 0 ;
  int arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:GOAtoms_BuildPreMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_BuildPreMaps" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_BuildPreMaps" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_BuildPreMaps" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOAtoms_BuildPreMaps" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_BuildPreMaps" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_BuildPreMaps" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GOAtoms_BuildPreMaps" "', argument " "7"" of type '" "float *""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GOAtoms_BuildPreMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "GOAtoms_BuildPreMaps" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "GOAtoms_BuildPreMaps" "', argument " "10"" of type '" "float *""'"); 
  }
  arg10 = reinterpret_cast< float * >(argp10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "GOAtoms_BuildPreMaps" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  {
    try {
      result = (int)(arg1)->BuildPreMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_BuildPreMapsMemLim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  PartialWorldForSAS *arg2 = (PartialWorldForSAS *) 0 ;
  int arg3 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOAtoms_BuildPreMapsMemLim",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_BuildPreMapsMemLim" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_BuildPreMapsMemLim" "', argument " "2"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg2 = reinterpret_cast< PartialWorldForSAS * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtoms_BuildPreMapsMemLim" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtoms_BuildPreMapsMemLim" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GOAtoms_BuildPreMapsMemLim" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_BuildPreMapsMemLim" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOAtoms_BuildPreMapsMemLim" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->BuildPreMapsMemLim(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_BuildDistMapsFromAtomsCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  float *arg4 = (float *) 0 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GOAtoms_BuildDistMapsFromAtomsCenter",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_BuildDistMapsFromAtomsCenter" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_BuildDistMapsFromAtomsCenter" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_BuildDistMapsFromAtomsCenter" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOAtoms_BuildDistMapsFromAtomsCenter" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_BuildDistMapsFromAtomsCenter" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_BuildDistMapsFromAtomsCenter" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->BuildDistMapsFromAtomsCenter(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_BuildPreMapsCharges(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:GOAtoms_BuildPreMapsCharges",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_BuildPreMapsCharges" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_BuildPreMapsCharges" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_BuildPreMapsCharges" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOAtoms_BuildPreMapsCharges" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try {
      result = (int)(arg1)->BuildPreMapsCharges(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_BuildLJRepultionMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GOAtoms_BuildLJRepultionMap",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_BuildLJRepultionMap" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_BuildLJRepultionMap" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_BuildLJRepultionMap" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtoms_BuildLJRepultionMap" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GOAtoms_BuildLJRepultionMap" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_BuildLJRepultionMap" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->BuildLJRepultionMap(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SetBoundaryCondition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GOAtoms_SetBoundaryCondition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SetBoundaryCondition" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_SetBoundaryCondition" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_SetBoundaryCondition" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  {
    try {
      result = (int)(arg1)->SetBoundaryCondition(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SetBoundaryConditionOnCuda(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GOAtoms_SetBoundaryConditionOnCuda",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SetBoundaryConditionOnCuda" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_SetBoundaryConditionOnCuda" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_SetBoundaryConditionOnCuda" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  {
    try {
      result = (int)(arg1)->SetBoundaryConditionOnCuda(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_RotateGGO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  double *arg2 = (double *) 0 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:GOAtoms_RotateGGO",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_RotateGGO" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_RotateGGO" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtoms_RotateGGO" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtoms_RotateGGO" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (int)(arg1)->RotateGGO(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_SetGridIDs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_SetGridIDs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_SetGridIDs" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_SetGridIDs" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->SetGridIDs(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_GetDistToSurf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOAtoms_GetDistToSurf",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_GetDistToSurf" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_GetDistToSurf" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtoms_GetDistToSurf" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtoms_GetDistToSurf" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_GetDistToSurf" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_GetDistToSurf" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOAtoms_GetDistToSurf" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (float)(arg1)->GetDistToSurf(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_GetDistSQToUnitCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOAtoms_GetDistSQToUnitCenter",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_GetDistSQToUnitCenter" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOAtoms_GetDistSQToUnitCenter" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOAtoms_GetDistSQToUnitCenter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOAtoms_GetDistSQToUnitCenter" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_GetDistSQToUnitCenter" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_GetDistSQToUnitCenter" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOAtoms_GetDistSQToUnitCenter" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (float)(arg1)->GetDistSQToUnitCenter(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_GetClosestSurfPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOAtoms_GetClosestSurfPoint",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_GetClosestSurfPoint" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_GetClosestSurfPoint" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOAtoms_GetClosestSurfPoint" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOAtoms_GetClosestSurfPoint" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOAtoms_GetClosestSurfPoint" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOAtoms_GetClosestSurfPoint" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOAtoms_GetClosestSurfPoint" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      (arg1)->GetClosestSurfPoint(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_ChargeDistStrs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = (std::vector< std::string,std::allocator< std::string > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOAtoms_ChargeDistStrs_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_ChargeDistStrs_set" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOAtoms_ChargeDistStrs_set" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  if (arg1) (arg1)->ChargeDistStrs = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOAtoms_ChargeDistStrs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOAtoms *arg1 = (GOAtoms *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOAtoms_ChargeDistStrs_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOAtoms_ChargeDistStrs_get" "', argument " "1"" of type '" "GOAtoms *""'"); 
  }
  arg1 = reinterpret_cast< GOAtoms * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *)& ((arg1)->ChargeDistStrs);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GOAtoms_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_GOAtoms, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GOTube(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_GOTube")) SWIG_fail;
  {
    try {
      result = (GOTube *)new GOTube();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GOTube, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GOTube(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GOTube",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GOTube" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_InitZero" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_Clear" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOTube_Print",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_Print" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_Print" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  {
    try {
      result = (int)(arg1)->Print(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_Print",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_Print" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  {
    try {
      result = (int)(arg1)->Print();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOTube, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_GOTube_Print__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOTube, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GOTube_Print__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'GOTube_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GOTube::Print(BuildWorldNI *)\n"
    "    GOTube::Print()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GOTube_XY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOTube_XY_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_XY_set" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_XY_set" "', argument " "2"" of type '" "float [2]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)2; ++ii) *(float *)&arg1->XY[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""XY""' of type '""float [2]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_XY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_XY_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_XY_get" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  result = (float *)(float *) ((arg1)->XY);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOTube_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_Z_set" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_Z_set" "', argument " "2"" of type '" "float [2]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)2; ++ii) *(float *)&arg1->Z[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Z""' of type '""float [2]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_Z_get" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  result = (float *)(float *) ((arg1)->Z);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_R_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOTube_R_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_R_set" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_R_set" "', argument " "2"" of type '" "float [2]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)2; ++ii) *(float *)&arg1->R[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""R""' of type '""float [2]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_R_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_R_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_R_get" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  result = (float *)(float *) ((arg1)->R);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_HalfSigma_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOTube_HalfSigma_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_HalfSigma_set" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOTube_HalfSigma_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->HalfSigma = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_HalfSigma_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_HalfSigma_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_HalfSigma_get" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  result = (float) ((arg1)->HalfSigma);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_FourEpsilon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOTube_FourEpsilon_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_FourEpsilon_set" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOTube_FourEpsilon_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->FourEpsilon = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_FourEpsilon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOTube_FourEpsilon_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_FourEpsilon_get" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  result = (float) ((arg1)->FourEpsilon);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_setTubeParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOTube_setTubeParam",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_setTubeParam" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOTube_setTubeParam" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOTube_setTubeParam" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOTube_setTubeParam" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOTube_setTubeParam" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOTube_setTubeParam" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOTube_setTubeParam" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->setTubeParam(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_ChangeUnits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GOTube_ChangeUnits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_ChangeUnits" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_ChangeUnits" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOTube_ChangeUnits" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (int)(arg1)->ChangeUnits(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_BuildPreMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  float *arg7 = (float *) 0 ;
  float arg8 ;
  float arg9 ;
  float *arg10 = (float *) 0 ;
  int arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:GOTube_BuildPreMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_BuildPreMaps" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_BuildPreMaps" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOTube_BuildPreMaps" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOTube_BuildPreMaps" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOTube_BuildPreMaps" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOTube_BuildPreMaps" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GOTube_BuildPreMaps" "', argument " "7"" of type '" "float *""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GOTube_BuildPreMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "GOTube_BuildPreMaps" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "GOTube_BuildPreMaps" "', argument " "10"" of type '" "float *""'"); 
  }
  arg10 = reinterpret_cast< float * >(argp10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "GOTube_BuildPreMaps" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  {
    try {
      result = (int)(arg1)->BuildPreMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_BuildPreMapsMemLim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  PartialWorldForSAS *arg2 = (PartialWorldForSAS *) 0 ;
  int arg3 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOTube_BuildPreMapsMemLim",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_BuildPreMapsMemLim" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_BuildPreMapsMemLim" "', argument " "2"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg2 = reinterpret_cast< PartialWorldForSAS * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOTube_BuildPreMapsMemLim" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOTube_BuildPreMapsMemLim" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GOTube_BuildPreMapsMemLim" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOTube_BuildPreMapsMemLim" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOTube_BuildPreMapsMemLim" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->BuildPreMapsMemLim(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_BuildDistMapsFromAtomsCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  float *arg4 = (float *) 0 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GOTube_BuildDistMapsFromAtomsCenter",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_BuildDistMapsFromAtomsCenter" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_BuildDistMapsFromAtomsCenter" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOTube_BuildDistMapsFromAtomsCenter" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOTube_BuildDistMapsFromAtomsCenter" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOTube_BuildDistMapsFromAtomsCenter" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOTube_BuildDistMapsFromAtomsCenter" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->BuildDistMapsFromAtomsCenter(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_BuildLJRepultionMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:GOTube_BuildLJRepultionMap",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_BuildLJRepultionMap" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_BuildLJRepultionMap" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOTube_BuildLJRepultionMap" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOTube_BuildLJRepultionMap" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GOTube_BuildLJRepultionMap" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOTube_BuildLJRepultionMap" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->BuildLJRepultionMap(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_RotateGGO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  double *arg2 = (double *) 0 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:GOTube_RotateGGO",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_RotateGGO" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_RotateGGO" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOTube_RotateGGO" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOTube_RotateGGO" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (int)(arg1)->RotateGGO(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_GetDistToSurf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOTube_GetDistToSurf",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_GetDistToSurf" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GOTube_GetDistToSurf" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOTube_GetDistToSurf" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOTube_GetDistToSurf" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOTube_GetDistToSurf" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOTube_GetDistToSurf" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOTube_GetDistToSurf" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (float)(arg1)->GetDistToSurf(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOTube_GetClosestSurfPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOTube *arg1 = (GOTube *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOTube_GetClosestSurfPoint",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOTube_GetClosestSurfPoint" "', argument " "1"" of type '" "GOTube *""'"); 
  }
  arg1 = reinterpret_cast< GOTube * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOTube_GetClosestSurfPoint" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOTube_GetClosestSurfPoint" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOTube_GetClosestSurfPoint" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOTube_GetClosestSurfPoint" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOTube_GetClosestSurfPoint" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOTube_GetClosestSurfPoint" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      (arg1)->GetClosestSurfPoint(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GOTube_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_GOTube, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GODonut__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_GODonut")) SWIG_fail;
  {
    try {
      result = (GODonut *)new GODonut();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GODonut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GODonut__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  GODonut *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_GODonut",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GODonut" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GODonut" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_GODonut" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_GODonut" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_GODonut" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_GODonut" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (GODonut *)new GODonut(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GODonut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GODonut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_GODonut__SWIG_0(self, args);
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_GODonut__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_GODonut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GODonut::GODonut()\n"
    "    GODonut::GODonut(float,float,float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_GODonut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GODonut",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GODonut" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GODonut_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_InitZero" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GODonut_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_Clear" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_R_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GODonut_R_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_R_set" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GODonut_R_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->R = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_R_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GODonut_R_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_R_get" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  result = (float) ((arg1)->R);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_r_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GODonut_r_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_r_set" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GODonut_r_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->r = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_r_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GODonut_r_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_r_get" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  result = (float) ((arg1)->r);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_X_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GODonut_X_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_X_set" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GODonut_X_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->X = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_X_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GODonut_X_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_X_get" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  result = (float) ((arg1)->X);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_Y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GODonut_Y_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_Y_set" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GODonut_Y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_Y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GODonut_Y_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_Y_get" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  result = (float) ((arg1)->Y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GODonut_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_Z_set" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GODonut_Z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GODonut_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_Z_get" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  result = (float) ((arg1)->Z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_ChangeUnits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GODonut_ChangeUnits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_ChangeUnits" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GODonut_ChangeUnits" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GODonut_ChangeUnits" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (int)(arg1)->ChangeUnits(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_BuildPreMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  float *arg7 = (float *) 0 ;
  float arg8 ;
  float arg9 ;
  float *arg10 = (float *) 0 ;
  int arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:GODonut_BuildPreMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_BuildPreMaps" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GODonut_BuildPreMaps" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GODonut_BuildPreMaps" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GODonut_BuildPreMaps" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GODonut_BuildPreMaps" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GODonut_BuildPreMaps" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GODonut_BuildPreMaps" "', argument " "7"" of type '" "float *""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GODonut_BuildPreMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "GODonut_BuildPreMaps" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "GODonut_BuildPreMaps" "', argument " "10"" of type '" "float *""'"); 
  }
  arg10 = reinterpret_cast< float * >(argp10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "GODonut_BuildPreMaps" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  {
    try {
      result = (int)(arg1)->BuildPreMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GODonut_BuildPreMapsMemLim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GODonut *arg1 = (GODonut *) 0 ;
  PartialWorldForSAS *arg2 = (PartialWorldForSAS *) 0 ;
  int arg3 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GODonut_BuildPreMapsMemLim",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GODonut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GODonut_BuildPreMapsMemLim" "', argument " "1"" of type '" "GODonut *""'"); 
  }
  arg1 = reinterpret_cast< GODonut * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GODonut_BuildPreMapsMemLim" "', argument " "2"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg2 = reinterpret_cast< PartialWorldForSAS * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GODonut_BuildPreMapsMemLim" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GODonut_BuildPreMapsMemLim" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GODonut_BuildPreMapsMemLim" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GODonut_BuildPreMapsMemLim" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GODonut_BuildPreMapsMemLim" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->BuildPreMapsMemLim(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GODonut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_GODonut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GOMembraneZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_GOMembraneZ")) SWIG_fail;
  {
    try {
      result = (GOMembraneZ *)new GOMembraneZ();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GOMembraneZ, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GOMembraneZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GOMembraneZ",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GOMembraneZ" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOMembraneZ_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_InitZero" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOMembraneZ_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_Clear" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOMembraneZ_Print",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_Print" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOMembraneZ_Print" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  {
    try {
      result = (int)(arg1)->Print(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOMembraneZ_Print",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_Print" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  {
    try {
      result = (int)(arg1)->Print();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOMembraneZ, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_GOMembraneZ_Print__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_GOMembraneZ, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GOMembraneZ_Print__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'GOMembraneZ_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GOMembraneZ::Print(BuildWorldNI *)\n"
    "    GOMembraneZ::Print()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  float *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GOMembraneZ_Z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_Z_set" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOMembraneZ_Z_set" "', argument " "2"" of type '" "float [2]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)2; ++ii) *(float *)&arg1->Z[ii] = *((float *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Z""' of type '""float [2]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GOMembraneZ_Z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_Z_get" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  result = (float *)(float *) ((arg1)->Z);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_ChangeUnits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GOMembraneZ_ChangeUnits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_ChangeUnits" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOMembraneZ_ChangeUnits" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOMembraneZ_ChangeUnits" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (int)(arg1)->ChangeUnits(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_BuildPreMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  BuildWorldNI *arg2 = (BuildWorldNI *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  float *arg7 = (float *) 0 ;
  float arg8 ;
  float arg9 ;
  float *arg10 = (float *) 0 ;
  int arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:GOMembraneZ_BuildPreMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "2"" of type '" "BuildWorldNI *""'"); 
  }
  arg2 = reinterpret_cast< BuildWorldNI * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "7"" of type '" "float *""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "10"" of type '" "float *""'"); 
  }
  arg10 = reinterpret_cast< float * >(argp10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "GOMembraneZ_BuildPreMaps" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  {
    try {
      result = (int)(arg1)->BuildPreMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GOMembraneZ_BuildPreMapsMemLim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GOMembraneZ *arg1 = (GOMembraneZ *) 0 ;
  PartialWorldForSAS *arg2 = (PartialWorldForSAS *) 0 ;
  int arg3 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:GOMembraneZ_BuildPreMapsMemLim",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_GOMembraneZ, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GOMembraneZ_BuildPreMapsMemLim" "', argument " "1"" of type '" "GOMembraneZ *""'"); 
  }
  arg1 = reinterpret_cast< GOMembraneZ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_PartialWorldForSAS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GOMembraneZ_BuildPreMapsMemLim" "', argument " "2"" of type '" "PartialWorldForSAS *""'"); 
  }
  arg2 = reinterpret_cast< PartialWorldForSAS * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GOMembraneZ_BuildPreMapsMemLim" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GOMembraneZ_BuildPreMapsMemLim" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GOMembraneZ_BuildPreMapsMemLim" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GOMembraneZ_BuildPreMapsMemLim" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GOMembraneZ_BuildPreMapsMemLim" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->BuildPreMapsMemLim(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GOMembraneZ_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_GOMembraneZ, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_BuildWorldNI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_BuildWorldNI")) SWIG_fail;
  {
    try {
      result = (BuildWorldNI *)new BuildWorldNI();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BuildWorldNI, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BuildWorldNI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BuildWorldNI",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BuildWorldNI" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_InitZero" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Clear" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Print(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_Print",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Print" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  {
    try {
      result = (int)(arg1)->Print();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  float arg15 ;
  float arg16 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  float val14 ;
  int ecode14 = 0 ;
  float val15 ;
  int ecode15 = 0 ;
  float val16 ;
  int ecode16 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  PyObject * obj14 = 0 ;
  PyObject * obj15 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13,&obj14,&obj15)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(obj12, &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  ecode14 = SWIG_AsVal_float(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "14"" of type '" "float""'");
  } 
  arg14 = static_cast< float >(val14);
  ecode15 = SWIG_AsVal_float(obj14, &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "15"" of type '" "float""'");
  } 
  arg15 = static_cast< float >(val15);
  ecode16 = SWIG_AsVal_float(obj15, &val16);
  if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "16"" of type '" "float""'");
  } 
  arg16 = static_cast< float >(val16);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  float arg15 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  float val14 ;
  int ecode14 = 0 ;
  float val15 ;
  int ecode15 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  PyObject * obj14 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13,&obj14)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(obj12, &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  ecode14 = SWIG_AsVal_float(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "14"" of type '" "float""'");
  } 
  arg14 = static_cast< float >(val14);
  ecode15 = SWIG_AsVal_float(obj14, &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "15"" of type '" "float""'");
  } 
  arg15 = static_cast< float >(val15);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  float val14 ;
  int ecode14 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(obj12, &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  ecode14 = SWIG_AsVal_float(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "14"" of type '" "float""'");
  } 
  arg14 = static_cast< float >(val14);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(obj12, &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldNI_setEpsilonValues",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setEpsilonValues",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->setEpsilonValues(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues__SWIG_15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_setEpsilonValues",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setEpsilonValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  {
    try {
      result = (int)(arg1)->setEpsilonValues();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setEpsilonValues(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[17] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 16) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BuildWorldNI_setEpsilonValues__SWIG_15(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BuildWorldNI_setEpsilonValues__SWIG_14(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BuildWorldNI_setEpsilonValues__SWIG_13(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_BuildWorldNI_setEpsilonValues__SWIG_12(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_BuildWorldNI_setEpsilonValues__SWIG_11(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_BuildWorldNI_setEpsilonValues__SWIG_10(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_BuildWorldNI_setEpsilonValues__SWIG_9(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_BuildWorldNI_setEpsilonValues__SWIG_8(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_BuildWorldNI_setEpsilonValues__SWIG_7(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_BuildWorldNI_setEpsilonValues__SWIG_6(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_float(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_BuildWorldNI_setEpsilonValues__SWIG_5(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_float(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_float(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_BuildWorldNI_setEpsilonValues__SWIG_4(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_float(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_float(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            {
                              int res = SWIG_AsVal_float(argv[12], NULL);
                              _v = SWIG_CheckState(res);
                            }
                            if (_v) {
                              return _wrap_BuildWorldNI_setEpsilonValues__SWIG_3(self, args);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_float(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_float(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            {
                              int res = SWIG_AsVal_float(argv[12], NULL);
                              _v = SWIG_CheckState(res);
                            }
                            if (_v) {
                              {
                                int res = SWIG_AsVal_float(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                return _wrap_BuildWorldNI_setEpsilonValues__SWIG_2(self, args);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_float(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_float(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            {
                              int res = SWIG_AsVal_float(argv[12], NULL);
                              _v = SWIG_CheckState(res);
                            }
                            if (_v) {
                              {
                                int res = SWIG_AsVal_float(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                {
                                  int res = SWIG_AsVal_float(argv[14], NULL);
                                  _v = SWIG_CheckState(res);
                                }
                                if (_v) {
                                  return _wrap_BuildWorldNI_setEpsilonValues__SWIG_1(self, args);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_float(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_float(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            {
                              int res = SWIG_AsVal_float(argv[12], NULL);
                              _v = SWIG_CheckState(res);
                            }
                            if (_v) {
                              {
                                int res = SWIG_AsVal_float(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                {
                                  int res = SWIG_AsVal_float(argv[14], NULL);
                                  _v = SWIG_CheckState(res);
                                }
                                if (_v) {
                                  {
                                    int res = SWIG_AsVal_float(argv[15], NULL);
                                    _v = SWIG_CheckState(res);
                                  }
                                  if (_v) {
                                    return _wrap_BuildWorldNI_setEpsilonValues__SWIG_0(self, args);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuildWorldNI_setEpsilonValues'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float,float)\n"
    "    BuildWorldNI::setEpsilonValues(float)\n"
    "    BuildWorldNI::setEpsilonValues()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:BuildWorldNI_setDiffusionValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  {
    try {
      result = (int)(arg1)->setDiffusionValues(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:BuildWorldNI_setDiffusionValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  {
    try {
      result = (int)(arg1)->setDiffusionValues(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:BuildWorldNI_setDiffusionValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->setDiffusionValues(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:BuildWorldNI_setDiffusionValues",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->setDiffusionValues(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:BuildWorldNI_setDiffusionValues",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->setDiffusionValues(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldNI_setDiffusionValues",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)(arg1)->setDiffusionValues(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setDiffusionValues",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->setDiffusionValues(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_setDiffusionValues",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  {
    try {
      result = (int)(arg1)->setDiffusionValues();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionValues(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BuildWorldNI_setDiffusionValues__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BuildWorldNI_setDiffusionValues__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BuildWorldNI_setDiffusionValues__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_BuildWorldNI_setDiffusionValues__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_BuildWorldNI_setDiffusionValues__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_BuildWorldNI_setDiffusionValues__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_BuildWorldNI_setDiffusionValues__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_BuildWorldNI_setDiffusionValues__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuildWorldNI_setDiffusionValues'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    BuildWorldNI::setDiffusionValues(float,float,float,float,float,float,float)\n"
    "    BuildWorldNI::setDiffusionValues(float,float,float,float,float,float)\n"
    "    BuildWorldNI::setDiffusionValues(float,float,float,float,float)\n"
    "    BuildWorldNI::setDiffusionValues(float,float,float,float)\n"
    "    BuildWorldNI::setDiffusionValues(float,float,float)\n"
    "    BuildWorldNI::setDiffusionValues(float,float)\n"
    "    BuildWorldNI::setDiffusionValues(float)\n"
    "    BuildWorldNI::setDiffusionValues()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_getEpsilonValueIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_getEpsilonValueIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_getEpsilonValueIndex" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_getEpsilonValueIndex" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->getEpsilonValueIndex(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_getDiffusionValueIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_getDiffusionValueIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_getDiffusionValueIndex" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_getDiffusionValueIndex" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->getDiffusionValueIndex(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setIonsR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldNI_setIonsR",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setIonsR" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setIonsR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setIonsR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (int)(arg1)->setIonsR(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setRwat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setRwat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setRwat" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setRwat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->setRwat(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setRsmooth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setRsmooth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setRsmooth" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setRsmooth" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (int)(arg1)->setRsmooth(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setDiffusionMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setDiffusionMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setDiffusionMode" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setDiffusionMode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->setDiffusionMode(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setExpDifPar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:BuildWorldNI_setExpDifPar",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setExpDifPar" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setExpDifPar" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setExpDifPar" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setExpDifPar" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (int)(arg1)->setExpDifPar(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setMakeDielectricMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setMakeDielectricMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setMakeDielectricMap" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setMakeDielectricMap" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->setMakeDielectricMap(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setMakeChargeMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setMakeChargeMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setMakeChargeMap" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setMakeChargeMap" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->setMakeChargeMap(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setMakeDiffusionMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setMakeDiffusionMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setMakeDiffusionMap" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setMakeDiffusionMap" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->setMakeDiffusionMap(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setMakeConcentrationMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setMakeConcentrationMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setMakeConcentrationMap" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setMakeConcentrationMap" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->setMakeConcentrationMap(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setMakeSoftRepultionMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_setMakeSoftRepultionMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setMakeSoftRepultionMap" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setMakeSoftRepultionMap" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->setMakeSoftRepultionMap(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setBulkPar__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:BuildWorldNI_setBulkPar",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setBulkPar" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setBulkPar" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setBulkPar" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setBulkPar" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setBulkPar" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_setBulkPar" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (int)(arg1)->setBulkPar(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setBulkPar__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:BuildWorldNI_setBulkPar",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_setBulkPar" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_setBulkPar" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_setBulkPar" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_setBulkPar" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_setBulkPar" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->setBulkPar(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_setBulkPar(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_BuildWorldNI_setBulkPar__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_BuildWorldNI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_BuildWorldNI_setBulkPar__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuildWorldNI_setBulkPar'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    BuildWorldNI::setBulkPar(int,int,int,float,float)\n"
    "    BuildWorldNI::setBulkPar(int,int,int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_cxxSetBulkParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:BuildWorldNI_cxxSetBulkParam",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_cxxSetBulkParam" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_cxxSetBulkParam" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldNI_cxxSetBulkParam" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BuildWorldNI_cxxSetBulkParam" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try {
      result = (int)(arg1)->setBulkParam(arg2,arg3,arg4);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_cxxSetIonsRadii(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_cxxSetIonsRadii",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_cxxSetIonsRadii" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_cxxSetIonsRadii" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try {
      result = (int)(arg1)->setIonsRadii(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_addGGO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  GenericGeometricalObject *arg2 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_addGGO",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_addGGO" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_addGGO" "', argument " "2"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg2 = reinterpret_cast< GenericGeometricalObject * >(argp2);
  {
    try {
      result = (int)(arg1)->addGGO(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Rwat_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_Rwat_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Rwat_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_Rwat_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Rwat = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Rwat_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_Rwat_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Rwat_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float) ((arg1)->Rwat);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Rsmooth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_Rsmooth_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Rsmooth_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_Rsmooth_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Rsmooth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Rsmooth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_Rsmooth_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Rsmooth_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float) ((arg1)->Rsmooth);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BoundaryCondition_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_BoundaryCondition_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BoundaryCondition_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_BoundaryCondition_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BoundaryCondition = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BoundaryCondition_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_BoundaryCondition_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BoundaryCondition_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->BoundaryCondition);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BldBCatPlane_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_BldBCatPlane_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BldBCatPlane_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_BldBCatPlane_set" "', argument " "2"" of type '" "bool [3]""'"); 
  } 
  arg2 = reinterpret_cast< bool * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(bool *)&arg1->BldBCatPlane[ii] = *((bool *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""BldBCatPlane""' of type '""bool [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BldBCatPlane_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_BldBCatPlane_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BldBCatPlane_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool *)(bool *) ((arg1)->BldBCatPlane);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_NIonsTypes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_NIonsTypes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_NIonsTypes_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_NIonsTypes_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->NIonsTypes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_NIonsTypes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_NIonsTypes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_NIonsTypes_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->NIonsTypes);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsR_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_IonsR_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsR_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_IonsR_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->IonsR = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsR_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_IonsR_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsR_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float *) ((arg1)->IonsR);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsHalfSigma_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_IonsHalfSigma_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsHalfSigma_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_IonsHalfSigma_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->IonsHalfSigma = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsHalfSigma_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_IonsHalfSigma_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsHalfSigma_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float *) ((arg1)->IonsHalfSigma);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsFourEpsilon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_IonsFourEpsilon_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsFourEpsilon_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_IonsFourEpsilon_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->IonsFourEpsilon = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsFourEpsilon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_IonsFourEpsilon_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsFourEpsilon_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float *) ((arg1)->IonsFourEpsilon);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsLJA_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_IonsLJA_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsLJA_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_IonsLJA_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->IonsLJA = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsLJA_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_IonsLJA_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsLJA_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float *) ((arg1)->IonsLJA);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsLJB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_IonsLJB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsLJB_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_IonsLJB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->IonsLJB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_IonsLJB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_IonsLJB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_IonsLJB_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float *) ((arg1)->IonsLJB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DielNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_DielNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DielNum_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_DielNum_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->DielNum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DielNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_DielNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DielNum_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->DielNum);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DielConst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_DielConst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DielConst_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_DielConst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->DielConst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DielConst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_DielConst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DielConst_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float *) ((arg1)->DielConst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffusionNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_DiffusionNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffusionNum_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_DiffusionNum_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->DiffusionNum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffusionNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_DiffusionNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffusionNum_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->DiffusionNum);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffusionConst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_DiffusionConst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffusionConst_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_DiffusionConst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->DiffusionConst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffusionConst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_DiffusionConst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffusionConst_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float *) ((arg1)->DiffusionConst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffusionMode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_DiffusionMode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffusionMode_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_DiffusionMode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->DiffusionMode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffusionMode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_DiffusionMode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffusionMode_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->DiffusionMode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Kexpdiff_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_Kexpdiff_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Kexpdiff_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_Kexpdiff_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Kexpdiff = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Kexpdiff_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_Kexpdiff_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Kexpdiff_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float) ((arg1)->Kexpdiff);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Rexpdiff_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_Rexpdiff_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Rexpdiff_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_Rexpdiff_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Rexpdiff = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_Rexpdiff_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_Rexpdiff_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_Rexpdiff_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float) ((arg1)->Rexpdiff);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffRmaxAffect_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_DiffRmaxAffect_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffRmaxAffect_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_DiffRmaxAffect_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->DiffRmaxAffect = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_DiffRmaxAffect_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_DiffRmaxAffect_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_DiffRmaxAffect_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float) ((arg1)->DiffRmaxAffect);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_iDzero_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_iDzero_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_iDzero_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_iDzero_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->iDzero = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_iDzero_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_iDzero_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_iDzero_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->iDzero);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_SaveDistMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_SaveDistMap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_SaveDistMap_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_SaveDistMap_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuildWorldNI_SaveDistMap_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->SaveDistMap = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_SaveDistMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_SaveDistMap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_SaveDistMap_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (std::string *) & ((arg1)->SaveDistMap);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeDielectricMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_MakeDielectricMap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeDielectricMap_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_MakeDielectricMap_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->MakeDielectricMap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeDielectricMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_MakeDielectricMap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeDielectricMap_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->MakeDielectricMap);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeDiffusionMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_MakeDiffusionMap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeDiffusionMap_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_MakeDiffusionMap_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->MakeDiffusionMap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeDiffusionMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_MakeDiffusionMap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeDiffusionMap_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->MakeDiffusionMap);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeConcentrationMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_MakeConcentrationMap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeConcentrationMap_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_MakeConcentrationMap_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->MakeConcentrationMap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeConcentrationMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_MakeConcentrationMap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeConcentrationMap_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->MakeConcentrationMap);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeChargeMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_MakeChargeMap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeChargeMap_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_MakeChargeMap_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->MakeChargeMap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeChargeMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_MakeChargeMap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeChargeMap_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->MakeChargeMap);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeLJRepultion_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_MakeLJRepultion_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeLJRepultion_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_MakeLJRepultion_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->MakeLJRepultion = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MakeLJRepultion_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_MakeLJRepultion_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MakeLJRepultion_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->MakeLJRepultion);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_AddElPotToPMF_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_AddElPotToPMF_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_AddElPotToPMF_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_AddElPotToPMF_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->AddElPotToPMF = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_AddElPotToPMF_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_AddElPotToPMF_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_AddElPotToPMF_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->AddElPotToPMF);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemovingCavities_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_RemovingCavities_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemovingCavities_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_RemovingCavities_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->RemovingCavities = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemovingCavities_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_RemovingCavities_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemovingCavities_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->RemovingCavities);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemovingCavitiesOnDielectricMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_RemovingCavitiesOnDielectricMap_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemovingCavitiesOnDielectricMap_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_RemovingCavitiesOnDielectricMap_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->RemovingCavitiesOnDielectricMap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemovingCavitiesOnDielectricMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_RemovingCavitiesOnDielectricMap_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemovingCavitiesOnDielectricMap_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->RemovingCavitiesOnDielectricMap);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemCavOnDielFillWith_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_RemCavOnDielFillWith_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemCavOnDielFillWith_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_RemCavOnDielFillWith_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->RemCavOnDielFillWith = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemCavOnDielFillWith_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_RemCavOnDielFillWith_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemCavOnDielFillWith_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->RemCavOnDielFillWith);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemCavOnDielWhere2Look_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_RemCavOnDielWhere2Look_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemCavOnDielWhere2Look_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_RemCavOnDielWhere2Look_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->RemCavOnDielWhere2Look = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemCavOnDielWhere2Look_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_RemCavOnDielWhere2Look_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemCavOnDielWhere2Look_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->RemCavOnDielWhere2Look);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_LimitVlj_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_LimitVlj_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_LimitVlj_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_LimitVlj_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->LimitVlj = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_LimitVlj_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_LimitVlj_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_LimitVlj_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (float) ((arg1)->LimitVlj);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BoundaryStr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = (std::vector< std::string,std::allocator< std::string > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_BoundaryStr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BoundaryStr_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_BoundaryStr_set" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  if (arg1) (arg1)->BoundaryStr = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BoundaryStr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_BoundaryStr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BoundaryStr_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *)& ((arg1)->BoundaryStr);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BuildUsingGPU_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_BuildUsingGPU_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BuildUsingGPU_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_BuildUsingGPU_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->BuildUsingGPU = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BuildUsingGPU_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_BuildUsingGPU_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BuildUsingGPU_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (bool) ((arg1)->BuildUsingGPU);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MemoryLimitOnOneArray_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_MemoryLimitOnOneArray_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MemoryLimitOnOneArray_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_MemoryLimitOnOneArray_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MemoryLimitOnOneArray = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_MemoryLimitOnOneArray_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_MemoryLimitOnOneArray_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_MemoryLimitOnOneArray_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (int) ((arg1)->MemoryLimitOnOneArray);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_ChangeUnits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldNI_ChangeUnits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_ChangeUnits" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_ChangeUnits" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_ChangeUnits" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (int)(arg1)->ChangeUnits(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_cxxBuildContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_cxxBuildContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_cxxBuildContWorld" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_cxxBuildContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->BuildContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BuildDielMapsOnCuda(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  NodeIndexing *arg3 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldNI_BuildDielMapsOnCuda",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BuildDielMapsOnCuda" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_BuildDielMapsOnCuda" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldNI_BuildDielMapsOnCuda" "', argument " "3"" of type '" "NodeIndexing *""'"); 
  }
  arg3 = reinterpret_cast< NodeIndexing * >(argp3);
  {
    try {
      result = (int)(arg1)->BuildDielMapsOnCuda(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BuildDiffExp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_BuildDiffExp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BuildDiffExp" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_BuildDiffExp" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->BuildDiffExp(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_BuildDiffExpOld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  float arg2 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldNI_BuildDiffExpOld",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_BuildDiffExpOld" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_BuildDiffExpOld" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldNI_BuildDiffExpOld" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  {
    try {
      result = (int)(arg1)->BuildDiffExpOld(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_FinalazeSEV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  float arg5 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:BuildWorldNI_FinalazeSEV",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_FinalazeSEV" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_FinalazeSEV" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldNI_FinalazeSEV" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_FinalazeSEV" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_FinalazeSEV" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BuildWorldNI_FinalazeSEV" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      result = (int)(arg1)->FinalazeSEV(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_FinalazeSEV2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  float arg5 ;
  float3 *arg6 = (float3 *) 0 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:BuildWorldNI_FinalazeSEV2",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_FinalazeSEV2" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_FinalazeSEV2" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldNI_FinalazeSEV2" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_FinalazeSEV2" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_FinalazeSEV2" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float3, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BuildWorldNI_FinalazeSEV2" "', argument " "6"" of type '" "float3 *""'"); 
  }
  arg6 = reinterpret_cast< float3 * >(argp6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_FinalazeSEV2" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (int)(arg1)->FinalazeSEV2(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_FinalazeSEVDiff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  float arg5 ;
  float *arg6 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:BuildWorldNI_FinalazeSEVDiff",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_FinalazeSEVDiff" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_FinalazeSEVDiff" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldNI_FinalazeSEVDiff" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_FinalazeSEVDiff" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldNI_FinalazeSEVDiff" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BuildWorldNI_FinalazeSEVDiff" "', argument " "6"" of type '" "float *""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  {
    try {
      result = (int)(arg1)->FinalazeSEVDiff(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemovingCavitiesList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int *arg5 = (int *) 0 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:BuildWorldNI_RemovingCavitiesList",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemovingCavitiesList" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_RemovingCavitiesList" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_RemovingCavitiesList" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_RemovingCavitiesList" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BuildWorldNI_RemovingCavitiesList" "', argument " "5"" of type '" "int *""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_RemovingCavitiesList" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (int)(arg1)->RemovingCavitiesList(arg2,arg3,arg4,arg5,arg6);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_RemovingCavitiesAtValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int *arg5 = (int *) 0 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:BuildWorldNI_RemovingCavitiesAtValues",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_RemovingCavitiesAtValues" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldNI_RemovingCavitiesAtValues" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuildWorldNI_RemovingCavitiesAtValues" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BuildWorldNI_RemovingCavitiesAtValues" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BuildWorldNI_RemovingCavitiesAtValues" "', argument " "5"" of type '" "int *""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BuildWorldNI_RemovingCavitiesAtValues" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BuildWorldNI_RemovingCavitiesAtValues" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      result = (int)(arg1)->RemovingCavitiesAtValues(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_StdStrDiffusionModes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = (std::vector< std::string,std::allocator< std::string > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldNI_StdStrDiffusionModes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_StdStrDiffusionModes_set" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldNI_StdStrDiffusionModes_set" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  if (arg1) (arg1)->StdStrDiffusionModes = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldNI_StdStrDiffusionModes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldNI *arg1 = (BuildWorldNI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldNI_StdStrDiffusionModes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldNI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldNI_StdStrDiffusionModes_get" "', argument " "1"" of type '" "BuildWorldNI *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldNI * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *)& ((arg1)->StdStrDiffusionModes);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BuildWorldNI_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BuildWorldNI, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_BuildWorldEu(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_BuildWorldEu")) SWIG_fail;
  {
    try {
      result = (BuildWorldEu *)new BuildWorldEu();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BuildWorldEu, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BuildWorldEu(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BuildWorldEu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BuildWorldEu" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldEu_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldEu_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldEu_InitZero" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldEu_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldEu_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldEu_Clear" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldEu_cxxBuildContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldEu_cxxBuildContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldEu_cxxBuildContWorld" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldEu_cxxBuildContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->BuildContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldEu_BuildPreMapsAtoms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  GOAtoms *arg2 = (GOAtoms *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int **arg4 = (int **) 0 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:BuildWorldEu_BuildPreMapsAtoms",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldEu_BuildPreMapsAtoms" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldEu_BuildPreMapsAtoms" "', argument " "2"" of type '" "GOAtoms *""'"); 
  }
  arg2 = reinterpret_cast< GOAtoms * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldEu_BuildPreMapsAtoms" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BuildWorldEu_BuildPreMapsAtoms" "', argument " "4"" of type '" "int **""'"); 
  }
  arg4 = reinterpret_cast< int ** >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldEu_BuildPreMapsAtoms" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->BuildPreMapsAtoms(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldEu_BuildPreMapsTube(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  GOTube *arg2 = (GOTube *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int **arg4 = (int **) 0 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:BuildWorldEu_BuildPreMapsTube",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldEu_BuildPreMapsTube" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_GOTube, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldEu_BuildPreMapsTube" "', argument " "2"" of type '" "GOTube *""'"); 
  }
  arg2 = reinterpret_cast< GOTube * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldEu_BuildPreMapsTube" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BuildWorldEu_BuildPreMapsTube" "', argument " "4"" of type '" "int **""'"); 
  }
  arg4 = reinterpret_cast< int ** >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldEu_BuildPreMapsTube" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->BuildPreMapsTube(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldEu_FinalazeSEV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  int **arg3 = (int **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldEu_FinalazeSEV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldEu_FinalazeSEV" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldEu_FinalazeSEV" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldEu_FinalazeSEV" "', argument " "3"" of type '" "int **""'"); 
  }
  arg3 = reinterpret_cast< int ** >(argp3);
  {
    try {
      result = (int)(arg1)->FinalazeSEV(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldEu_FinalazeSEV2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldEu *arg1 = (BuildWorldEu *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  int **arg3 = (int **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldEu_FinalazeSEV2",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldEu, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldEu_FinalazeSEV2" "', argument " "1"" of type '" "BuildWorldEu *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldEu * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldEu_FinalazeSEV2" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldEu_FinalazeSEV2" "', argument " "3"" of type '" "int **""'"); 
  }
  arg3 = reinterpret_cast< int ** >(argp3);
  {
    try {
      result = (int)(arg1)->FinalazeSEV2(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BuildWorldEu_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BuildWorldEu, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_BuildWorldCmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldCmp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_BuildWorldCmp")) SWIG_fail;
  {
    try {
      result = (BuildWorldCmp *)new BuildWorldCmp();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BuildWorldCmp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BuildWorldCmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldCmp *arg1 = (BuildWorldCmp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BuildWorldCmp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldCmp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BuildWorldCmp" "', argument " "1"" of type '" "BuildWorldCmp *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldCmp * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldCmp_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldCmp *arg1 = (BuildWorldCmp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldCmp_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldCmp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldCmp_InitZero" "', argument " "1"" of type '" "BuildWorldCmp *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldCmp * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldCmp_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldCmp *arg1 = (BuildWorldCmp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldCmp_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldCmp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldCmp_Clear" "', argument " "1"" of type '" "BuildWorldCmp *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldCmp * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldCmp_cxxBuildContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldCmp *arg1 = (BuildWorldCmp *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldCmp_cxxBuildContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldCmp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldCmp_cxxBuildContWorld" "', argument " "1"" of type '" "BuildWorldCmp *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldCmp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldCmp_cxxBuildContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->BuildContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldCmp_BuildPreMapsAtoms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldCmp *arg1 = (BuildWorldCmp *) 0 ;
  GOAtoms *arg2 = (GOAtoms *) 0 ;
  ContWorld *arg3 = (ContWorld *) 0 ;
  int **arg4 = (int **) 0 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:BuildWorldCmp_BuildPreMapsAtoms",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldCmp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldCmp_BuildPreMapsAtoms" "', argument " "1"" of type '" "BuildWorldCmp *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldCmp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_GOAtoms, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldCmp_BuildPreMapsAtoms" "', argument " "2"" of type '" "GOAtoms *""'"); 
  }
  arg2 = reinterpret_cast< GOAtoms * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldCmp_BuildPreMapsAtoms" "', argument " "3"" of type '" "ContWorld *""'"); 
  }
  arg3 = reinterpret_cast< ContWorld * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BuildWorldCmp_BuildPreMapsAtoms" "', argument " "4"" of type '" "int **""'"); 
  }
  arg4 = reinterpret_cast< int ** >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BuildWorldCmp_BuildPreMapsAtoms" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (int)(arg1)->BuildPreMapsAtoms(arg2,arg3,arg4,arg5);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldCmp_FinalazeSEV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldCmp *arg1 = (BuildWorldCmp *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  int **arg3 = (int **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldCmp_FinalazeSEV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldCmp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldCmp_FinalazeSEV" "', argument " "1"" of type '" "BuildWorldCmp *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldCmp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldCmp_FinalazeSEV" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldCmp_FinalazeSEV" "', argument " "3"" of type '" "int **""'"); 
  }
  arg3 = reinterpret_cast< int ** >(argp3);
  {
    try {
      result = (int)(arg1)->FinalazeSEV(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BuildWorldCmp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BuildWorldCmp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_BuildWorldScaled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_BuildWorldScaled")) SWIG_fail;
  {
    try {
      result = (BuildWorldScaled *)new BuildWorldScaled();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BuildWorldScaled, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BuildWorldScaled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BuildWorldScaled",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BuildWorldScaled" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_InitZero" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_Clear" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_BuildContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldScaled_BuildContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_BuildContWorld" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldScaled_BuildContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->BuildContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_BuildContWorldCharges(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  NodeIndexing *arg3 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldScaled_BuildContWorldCharges",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_BuildContWorldCharges" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldScaled_BuildContWorldCharges" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldScaled_BuildContWorldCharges" "', argument " "3"" of type '" "NodeIndexing *""'"); 
  }
  arg3 = reinterpret_cast< NodeIndexing * >(argp3);
  {
    try {
      result = (int)(arg1)->BuildContWorldCharges(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_BuildContWorldDielMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  NodeIndexing *arg3 = (NodeIndexing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuildWorldScaled_BuildContWorldDielMaps",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_BuildContWorldDielMaps" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldScaled_BuildContWorldDielMaps" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_NodeIndexing, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuildWorldScaled_BuildContWorldDielMaps" "', argument " "3"" of type '" "NodeIndexing *""'"); 
  }
  arg3 = reinterpret_cast< NodeIndexing * >(argp3);
  {
    try {
      result = (int)(arg1)->BuildContWorldDielMaps(arg2,arg3);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_Rwat_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldScaled_Rwat_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_Rwat_set" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldScaled_Rwat_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Rwat = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_Rwat_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_Rwat_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_Rwat_get" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  result = (float) ((arg1)->Rwat);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_DielNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldScaled_DielNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_DielNum_set" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldScaled_DielNum_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->DielNum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_DielNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_DielNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_DielNum_get" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  result = (int) ((arg1)->DielNum);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_DielConst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldScaled_DielConst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_DielConst_set" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldScaled_DielConst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->DielConst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_DielConst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_DielConst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_DielConst_get" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  result = (float *) ((arg1)->DielConst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_BoundaryCondition_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldScaled_BoundaryCondition_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_BoundaryCondition_set" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuildWorldScaled_BoundaryCondition_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->BoundaryCondition = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_BoundaryCondition_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_BoundaryCondition_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_BoundaryCondition_get" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  result = (int) ((arg1)->BoundaryCondition);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_BulkParam_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  GenericGeometricalObject *arg2 = (GenericGeometricalObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldScaled_BulkParam_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_BulkParam_set" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_GenericGeometricalObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldScaled_BulkParam_set" "', argument " "2"" of type '" "GenericGeometricalObject *""'"); 
  }
  arg2 = reinterpret_cast< GenericGeometricalObject * >(argp2);
  if (arg1) (arg1)->BulkParam = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_BulkParam_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GenericGeometricalObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_BulkParam_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_BulkParam_get" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  result = (GenericGeometricalObject *) ((arg1)->BulkParam);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_GenericGeometricalObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_GOElms_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  std::vector< GenericGeometricalObject *,std::allocator< GenericGeometricalObject * > > *arg2 = (std::vector< GenericGeometricalObject *,std::allocator< GenericGeometricalObject * > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuildWorldScaled_GOElms_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_GOElms_set" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuildWorldScaled_GOElms_set" "', argument " "2"" of type '" "std::vector< GenericGeometricalObject *,std::allocator< GenericGeometricalObject * > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< GenericGeometricalObject *,std::allocator< GenericGeometricalObject * > > * >(argp2);
  if (arg1) (arg1)->GOElms = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuildWorldScaled_GOElms_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BuildWorldScaled *arg1 = (BuildWorldScaled *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< GenericGeometricalObject *,std::allocator< GenericGeometricalObject * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuildWorldScaled_GOElms_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BuildWorldScaled, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuildWorldScaled_GOElms_get" "', argument " "1"" of type '" "BuildWorldScaled *""'"); 
  }
  arg1 = reinterpret_cast< BuildWorldScaled * >(argp1);
  result = (std::vector< GenericGeometricalObject *,std::allocator< GenericGeometricalObject * > > *)& ((arg1)->GOElms);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BuildWorldScaled_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BuildWorldScaled, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DielDiffMapsPatcher(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ContWorld *arg1 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DielDiffMapsPatcher *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DielDiffMapsPatcher",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DielDiffMapsPatcher" "', argument " "1"" of type '" "ContWorld *""'"); 
  }
  arg1 = reinterpret_cast< ContWorld * >(argp1);
  {
    try {
      result = (DielDiffMapsPatcher *)new DielDiffMapsPatcher(arg1);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DielDiffMapsPatcher, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DielDiffMapsPatcher(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DielDiffMapsPatcher",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DielDiffMapsPatcher" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_m_ContWorld_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DielDiffMapsPatcher_m_ContWorld_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_m_ContWorld_set" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DielDiffMapsPatcher_m_ContWorld_set" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  if (arg1) (arg1)->m_ContWorld = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_m_ContWorld_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DielDiffMapsPatcher_m_ContWorld_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_m_ContWorld_get" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  result = (ContWorld *) ((arg1)->m_ContWorld);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_eps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  int **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DielDiffMapsPatcher_eps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_eps_set" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DielDiffMapsPatcher_eps_set" "', argument " "2"" of type '" "int *[3]""'"); 
  } 
  arg2 = reinterpret_cast< int ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int * *)&arg1->eps[ii] = *((int * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""eps""' of type '""int *[3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_eps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DielDiffMapsPatcher_eps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_eps_get" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  result = (int **)(int **) ((arg1)->eps);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_GetIntDielMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DielDiffMapsPatcher_GetIntDielMaps",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_GetIntDielMaps" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  {
    try {
      (arg1)->GetIntDielMaps();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_PushIntDielMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DielDiffMapsPatcher_PushIntDielMaps",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_PushIntDielMaps" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  {
    try {
      (arg1)->PushIntDielMaps();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_PatchDielMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:DielDiffMapsPatcher_PatchDielMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "DielDiffMapsPatcher_PatchDielMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  {
    try {
      (arg1)->PatchDielMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_refDiff_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  float **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DielDiffMapsPatcher_refDiff_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_refDiff_set" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DielDiffMapsPatcher_refDiff_set" "', argument " "2"" of type '" "float *[4]""'"); 
  } 
  arg2 = reinterpret_cast< float ** >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)4; ++ii) *(float * *)&arg1->refDiff[ii] = *((float * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""refDiff""' of type '""float *[4]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_refDiff_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float **result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DielDiffMapsPatcher_refDiff_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_refDiff_get" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  result = (float **)(float **) ((arg1)->refDiff);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_InitNewDiff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DielDiffMapsPatcher_InitNewDiff",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_InitNewDiff" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  {
    try {
      (arg1)->InitNewDiff();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_DelRefDiff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DielDiffMapsPatcher_DelRefDiff",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_DelRefDiff" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  {
    try {
      (arg1)->DelRefDiff();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DielDiffMapsPatcher_PatchDiffMaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DielDiffMapsPatcher *arg1 = (DielDiffMapsPatcher *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:DielDiffMapsPatcher_PatchDiffMaps",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DielDiffMapsPatcher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "1"" of type '" "DielDiffMapsPatcher *""'"); 
  }
  arg1 = reinterpret_cast< DielDiffMapsPatcher * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "DielDiffMapsPatcher_PatchDiffMaps" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  {
    try {
      (arg1)->PatchDiffMaps(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DielDiffMapsPatcher_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DielDiffMapsPatcher, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_PBwithLJConvFacMaxHistory_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable PBwithLJConvFacMaxHistory is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_PBwithLJConvFacMaxHistory_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(PBwithLJConvFacMaxHistory));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_PBwithLJSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PBwithLJSolver")) SWIG_fail;
  {
    try {
      result = (PBwithLJSolver *)new PBwithLJSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PBwithLJSolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PBwithLJSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PBwithLJSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PBwithLJSolver" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      delete arg1;
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_InitZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_InitZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_InitZero" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitZero();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Clear" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Clear();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_solver_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_solver_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_solver_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_solver_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->solver = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_solver_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_solver_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_solver_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int) ((arg1)->solver);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_MaxIterations_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_MaxIterations_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_MaxIterations_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_MaxIterations_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->MaxIterations = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_MaxIterations_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_MaxIterations_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_MaxIterations_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int) ((arg1)->MaxIterations);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ConvergenceCheck_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_ConvergenceCheck_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ConvergenceCheck_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_ConvergenceCheck_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ConvergenceCheck = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ConvergenceCheck_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_ConvergenceCheck_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ConvergenceCheck_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int) ((arg1)->ConvergenceCheck);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Convergence_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_Convergence_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Convergence_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_Convergence_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Convergence = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Convergence_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_Convergence_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Convergence_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float) ((arg1)->Convergence);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Relaxation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_Relaxation_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Relaxation_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_Relaxation_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Relaxation = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Relaxation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_Relaxation_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Relaxation_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float) ((arg1)->Relaxation);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_verbose_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_verbose_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_verbose_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_verbose_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->verbose = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_verbose_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_verbose_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_verbose_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (bool) ((arg1)->verbose);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_bPBExpAll_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_bPBExpAll_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_bPBExpAll_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_bPBExpAll_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->bPBExpAll = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_bPBExpAll_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_bPBExpAll_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_bPBExpAll_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (bool) ((arg1)->bPBExpAll);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_bAnalyseExplosion_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_bAnalyseExplosion_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_bAnalyseExplosion_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_bAnalyseExplosion_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->bAnalyseExplosion = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_bAnalyseExplosion_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_bAnalyseExplosion_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_bAnalyseExplosion_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (bool) ((arg1)->bAnalyseExplosion);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_totalChange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_totalChange_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_totalChange_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_totalChange_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalChange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_totalChange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_totalChange_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_totalChange_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (double) ((arg1)->totalChange);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_relativeChange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_relativeChange_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_relativeChange_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_relativeChange_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->relativeChange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_relativeChange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_relativeChange_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_relativeChange_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (double) ((arg1)->relativeChange);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_totalEnergy_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_totalEnergy_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_totalEnergy_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_totalEnergy_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalEnergy = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_totalEnergy_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_totalEnergy_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_totalEnergy_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (double) ((arg1)->totalEnergy);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_totalEnergyInd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_totalEnergyInd_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_totalEnergyInd_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_totalEnergyInd_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->totalEnergyInd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_totalEnergyInd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_totalEnergyInd_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_totalEnergyInd_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (double) ((arg1)->totalEnergyInd);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ConvFac_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_ConvFac_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ConvFac_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_ConvFac_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->ConvFac = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ConvFac_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_ConvFac_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ConvFac_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (double) ((arg1)->ConvFac);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_m_ContWorld_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_m_ContWorld_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_m_ContWorld_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_m_ContWorld_set" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  if (arg1) (arg1)->m_ContWorld = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_m_ContWorld_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ContWorld *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_m_ContWorld_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_m_ContWorld_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (ContWorld *) ((arg1)->m_ContWorld);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ContWorld, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_NoSingularNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_NoSingularNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_NoSingularNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_NoSingularNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->NoSingularNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""NoSingularNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_NoSingularNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_NoSingularNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_NoSingularNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->NoSingularNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexNoSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexNoSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexNoSingular_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexNoSingular_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexNoSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexNoSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexNoSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexNoSingular_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexNoSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_SingularNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_SingularNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_SingularNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_SingularNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->SingularNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""SingularNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_SingularNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_SingularNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_SingularNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->SingularNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexSingular_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexSingular_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexSingular_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXS_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXS_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYS_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYS_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZS_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZS_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZSSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZSSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZSSUM_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZSSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZSSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZSSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZSSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZSSUM_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZSSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmS_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmS_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmS_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmS_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZmS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmS_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZmS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZmS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmS_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_QstS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_QstS_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_QstS_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_QstS_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QstS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_QstS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_QstS_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_QstS_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->QstS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PhiSingular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_PhiSingular_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PhiSingular_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_PhiSingular_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->PhiSingular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PhiSingular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_PhiSingular_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PhiSingular_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->PhiSingular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_DielBoarderNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_DielBoarderNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_DielBoarderNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_DielBoarderNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->DielBoarderNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""DielBoarderNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_DielBoarderNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_DielBoarderNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_DielBoarderNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->DielBoarderNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexDielBoarder_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexDielBoarder_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexDielBoarder_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexDielBoarder_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexDielBoarder = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexDielBoarder_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexDielBoarder_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexDielBoarder_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexDielBoarder);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZDBSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZDBSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZDBSUM_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZDBSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZDBSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZDBSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZDBSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZDBSUM_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZDBSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZmDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZmDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZmDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ChargeNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_ChargeNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ChargeNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_ChargeNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->ChargeNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""ChargeNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ChargeNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_ChargeNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ChargeNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->ChargeNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexCharge_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexCharge_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexCharge_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexCharge_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexCharge = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexCharge_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexCharge_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexCharge_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexCharge);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricCh_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricCh_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricCh_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricCh_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricCh = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricCh_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricCh_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricCh_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricCh);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Qst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_Qst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Qst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_Qst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->Qst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Qst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_Qst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Qst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->Qst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PhiCharge_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_PhiCharge_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PhiCharge_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_PhiCharge_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->PhiCharge = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PhiCharge_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_PhiCharge_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PhiCharge_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->PhiCharge);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBZoneNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_PBZoneNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBZoneNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_PBZoneNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->PBZoneNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBZoneNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBZoneNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_PBZoneNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBZoneNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->PBZoneNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBZone_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexPBZone_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBZone_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexPBZone_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexPBZone = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBZone_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexPBZone_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBZone_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexPBZone);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJZoneNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_PBLJZoneNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJZoneNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_PBLJZoneNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->PBLJZoneNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBLJZoneNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJZoneNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_PBLJZoneNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJZoneNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->PBLJZoneNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJZone_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexPBLJZone_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJZone_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexPBLJZone_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexPBLJZone = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJZone_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexPBLJZone_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJZone_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexPBLJZone);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJQstZoneNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_PBLJQstZoneNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJQstZoneNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_PBLJQstZoneNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->PBLJQstZoneNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBLJQstZoneNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJQstZoneNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_PBLJQstZoneNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJQstZoneNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->PBLJQstZoneNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJQstZone_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexPBLJQstZone_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJQstZone_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexPBLJQstZone_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexPBLJQstZone = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJQstZone_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexPBLJQstZone_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJQstZone_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexPBLJQstZone);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricPBLJQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricPBLJQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricPBLJQst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricPBLJQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricPBLJQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricPBLJQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricPBLJQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricPBLJQst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricPBLJQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_QstPBLJ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_QstPBLJ_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_QstPBLJ_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_QstPBLJ_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QstPBLJ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_QstPBLJ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_QstPBLJ_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_QstPBLJ_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->QstPBLJ);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJDBZoneNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_PBLJDBZoneNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJDBZoneNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_PBLJDBZoneNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->PBLJDBZoneNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBLJDBZoneNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJDBZoneNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_PBLJDBZoneNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJDBZoneNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->PBLJDBZoneNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJDBZone_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexPBLJDBZone_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJDBZone_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexPBLJDBZone_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexPBLJDBZone = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJDBZone_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexPBLJDBZone_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJDBZone_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexPBLJDBZone);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXPBLJDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXPBLJDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXPBLJDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXPBLJDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXPBLJDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXPBLJDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXPBLJDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXPBLJDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXPBLJDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYPBLJDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYPBLJDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYPBLJDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYPBLJDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYPBLJDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYPBLJDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYPBLJDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYPBLJDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYPBLJDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZPBLJDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZPBLJDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZPBLJDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZPBLJDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZPBLJDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDBSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZPBLJDBSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDBSUM_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZPBLJDBSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZPBLJDBSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDBSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZPBLJDBSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDBSUM_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZPBLJDBSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmPBLJDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXmPBLJDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmPBLJDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXmPBLJDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmPBLJDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmPBLJDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXmPBLJDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmPBLJDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmPBLJDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmPBLJDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYmPBLJDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmPBLJDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYmPBLJDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmPBLJDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmPBLJDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYmPBLJDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmPBLJDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmPBLJDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmPBLJDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZmPBLJDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmPBLJDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZmPBLJDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmPBLJDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmPBLJDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZmPBLJDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmPBLJDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmPBLJDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJDBQstZoneNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_PBLJDBQstZoneNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJDBQstZoneNum_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_PBLJDBQstZoneNum_set" "', argument " "2"" of type '" "int [3]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(int *)&arg1->PBLJDBQstZoneNum[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""PBLJDBQstZoneNum""' of type '""int [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_PBLJDBQstZoneNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_PBLJDBQstZoneNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_PBLJDBQstZoneNum_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *)(int *) ((arg1)->PBLJDBQstZoneNum);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJDBQstZone_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_IndexPBLJDBQstZone_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJDBQstZone_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_IndexPBLJDBQstZone_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->IndexPBLJDBQstZone = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_IndexPBLJDBQstZone_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_IndexPBLJDBQstZone_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_IndexPBLJDBQstZone_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (int *) ((arg1)->IndexPBLJDBQstZone);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXPBLJDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXPBLJDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXPBLJDBQst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXPBLJDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXPBLJDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXPBLJDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXPBLJDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXPBLJDBQst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXPBLJDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYPBLJDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYPBLJDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYPBLJDBQst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYPBLJDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYPBLJDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYPBLJDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYPBLJDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYPBLJDBQst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYPBLJDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZPBLJDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDBQst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZPBLJDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZPBLJDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZPBLJDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDBQst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZPBLJDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDBQstSUM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZPBLJDBQstSUM_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDBQstSUM_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZPBLJDBQstSUM_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZPBLJDBQstSUM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZPBLJDBQstSUM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZPBLJDBQstSUM_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZPBLJDBQstSUM_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZPBLJDBQstSUM);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmPBLJDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricXmPBLJDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmPBLJDBQst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricXmPBLJDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricXmPBLJDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricXmPBLJDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricXmPBLJDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricXmPBLJDBQst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricXmPBLJDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmPBLJDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricYmPBLJDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmPBLJDBQst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricYmPBLJDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricYmPBLJDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricYmPBLJDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricYmPBLJDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricYmPBLJDBQst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricYmPBLJDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmPBLJDBQst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_dielectricZmPBLJDBQst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmPBLJDBQst_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_dielectricZmPBLJDBQst_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->dielectricZmPBLJDBQst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_dielectricZmPBLJDBQst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_dielectricZmPBLJDBQst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_dielectricZmPBLJDBQst_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->dielectricZmPBLJDBQst);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_QstPBLJDB_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_QstPBLJDB_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_QstPBLJDB_set" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_QstPBLJDB_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->QstPBLJDB = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_QstPBLJDB_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_QstPBLJDB_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_QstPBLJDB_get" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  result = (float *) ((arg1)->QstPBLJDB);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_LoadParamFromPyDict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_LoadParamFromPyDict",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_LoadParamFromPyDict" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  arg2 = obj1;
  {
    try {
      result = (int)(arg1)->LoadParamFromPyDict(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_SetContWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  ContWorld *arg2 = (ContWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_SetContWorld",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_SetContWorld" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ContWorld, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PBwithLJSolver_SetContWorld" "', argument " "2"" of type '" "ContWorld *""'"); 
  }
  arg2 = reinterpret_cast< ContWorld * >(argp2);
  {
    try {
      result = (int)(arg1)->SetContWorld(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_InitSolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_InitSolver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_InitSolver" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolver();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_InitSolverNIB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_InitSolverNIB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_InitSolverNIB" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->InitSolverNIB();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_Solve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_Solve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_Solve" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->Solve();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_AnalyseExplosion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_AnalyseExplosion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_AnalyseExplosion" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->AnalyseExplosion();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_CalcSystemEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_CalcSystemEnergy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_CalcSystemEnergy" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_CalcSystemEnergy" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergy(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_CalcSystemEnergyStdDevPhi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PBwithLJSolver_CalcSystemEnergyStdDevPhi",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_CalcSystemEnergyStdDevPhi" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PBwithLJSolver_CalcSystemEnergyStdDevPhi" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->CalcSystemEnergyStdDevPhi(arg2);
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ShowParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_ShowParameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ShowParameters" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowParameters();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PBwithLJSolver_ShowProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PBwithLJSolver *arg1 = (PBwithLJSolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PBwithLJSolver_ShowProperties",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PBwithLJSolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PBwithLJSolver_ShowProperties" "', argument " "1"" of type '" "PBwithLJSolver *""'"); 
  }
  arg1 = reinterpret_cast< PBwithLJSolver * >(argp1);
  {
    try {
      result = (int)(arg1)->ShowProperties();
    } catch (std::runtime_error& e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    } catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PBwithLJSolver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char *)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PBwithLJSolver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_intp", _wrap_new_intp, METH_VARARGS, NULL},
	 { (char *)"delete_intp", _wrap_delete_intp, METH_VARARGS, NULL},
	 { (char *)"intp_assign", _wrap_intp_assign, METH_VARARGS, NULL},
	 { (char *)"intp_value", _wrap_intp_value, METH_VARARGS, NULL},
	 { (char *)"intp_cast", _wrap_intp_cast, METH_VARARGS, NULL},
	 { (char *)"intp_frompointer", _wrap_intp_frompointer, METH_VARARGS, NULL},
	 { (char *)"intp_swigregister", intp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_doublep", _wrap_new_doublep, METH_VARARGS, NULL},
	 { (char *)"delete_doublep", _wrap_delete_doublep, METH_VARARGS, NULL},
	 { (char *)"doublep_assign", _wrap_doublep_assign, METH_VARARGS, NULL},
	 { (char *)"doublep_value", _wrap_doublep_value, METH_VARARGS, NULL},
	 { (char *)"doublep_cast", _wrap_doublep_cast, METH_VARARGS, NULL},
	 { (char *)"doublep_frompointer", _wrap_doublep_frompointer, METH_VARARGS, NULL},
	 { (char *)"doublep_swigregister", doublep_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_doublepf", _wrap_new_doublepf, METH_VARARGS, NULL},
	 { (char *)"copy_doublepf", _wrap_copy_doublepf, METH_VARARGS, NULL},
	 { (char *)"delete_doublepf", _wrap_delete_doublepf, METH_VARARGS, NULL},
	 { (char *)"doublepf_assign", _wrap_doublepf_assign, METH_VARARGS, NULL},
	 { (char *)"doublepf_value", _wrap_doublepf_value, METH_VARARGS, NULL},
	 { (char *)"new_intArray", _wrap_new_intArray, METH_VARARGS, NULL},
	 { (char *)"delete_intArray", _wrap_delete_intArray, METH_VARARGS, NULL},
	 { (char *)"intArray_getitem", _wrap_intArray_getitem, METH_VARARGS, NULL},
	 { (char *)"intArray_setitem", _wrap_intArray_setitem, METH_VARARGS, NULL},
	 { (char *)"new_boolArray", _wrap_new_boolArray, METH_VARARGS, NULL},
	 { (char *)"delete_boolArray", _wrap_delete_boolArray, METH_VARARGS, NULL},
	 { (char *)"boolArray_getitem", _wrap_boolArray_getitem, METH_VARARGS, NULL},
	 { (char *)"boolArray_setitem", _wrap_boolArray_setitem, METH_VARARGS, NULL},
	 { (char *)"new_floatArray", _wrap_new_floatArray, METH_VARARGS, NULL},
	 { (char *)"delete_floatArray", _wrap_delete_floatArray, METH_VARARGS, NULL},
	 { (char *)"floatArray_getitem", _wrap_floatArray_getitem, METH_VARARGS, NULL},
	 { (char *)"floatArray_setitem", _wrap_floatArray_setitem, METH_VARARGS, NULL},
	 { (char *)"vectorf_iterator", _wrap_vectorf_iterator, METH_VARARGS, NULL},
	 { (char *)"vectorf___nonzero__", _wrap_vectorf___nonzero__, METH_VARARGS, NULL},
	 { (char *)"vectorf___bool__", _wrap_vectorf___bool__, METH_VARARGS, NULL},
	 { (char *)"vectorf___len__", _wrap_vectorf___len__, METH_VARARGS, NULL},
	 { (char *)"vectorf___getslice__", _wrap_vectorf___getslice__, METH_VARARGS, NULL},
	 { (char *)"vectorf___setslice__", _wrap_vectorf___setslice__, METH_VARARGS, NULL},
	 { (char *)"vectorf___delslice__", _wrap_vectorf___delslice__, METH_VARARGS, NULL},
	 { (char *)"vectorf___delitem__", _wrap_vectorf___delitem__, METH_VARARGS, NULL},
	 { (char *)"vectorf___getitem__", _wrap_vectorf___getitem__, METH_VARARGS, NULL},
	 { (char *)"vectorf___setitem__", _wrap_vectorf___setitem__, METH_VARARGS, NULL},
	 { (char *)"vectorf_pop", _wrap_vectorf_pop, METH_VARARGS, NULL},
	 { (char *)"vectorf_append", _wrap_vectorf_append, METH_VARARGS, NULL},
	 { (char *)"vectorf_empty", _wrap_vectorf_empty, METH_VARARGS, NULL},
	 { (char *)"vectorf_size", _wrap_vectorf_size, METH_VARARGS, NULL},
	 { (char *)"vectorf_swap", _wrap_vectorf_swap, METH_VARARGS, NULL},
	 { (char *)"vectorf_begin", _wrap_vectorf_begin, METH_VARARGS, NULL},
	 { (char *)"vectorf_end", _wrap_vectorf_end, METH_VARARGS, NULL},
	 { (char *)"vectorf_rbegin", _wrap_vectorf_rbegin, METH_VARARGS, NULL},
	 { (char *)"vectorf_rend", _wrap_vectorf_rend, METH_VARARGS, NULL},
	 { (char *)"vectorf_clear", _wrap_vectorf_clear, METH_VARARGS, NULL},
	 { (char *)"vectorf_get_allocator", _wrap_vectorf_get_allocator, METH_VARARGS, NULL},
	 { (char *)"vectorf_pop_back", _wrap_vectorf_pop_back, METH_VARARGS, NULL},
	 { (char *)"vectorf_erase", _wrap_vectorf_erase, METH_VARARGS, NULL},
	 { (char *)"new_vectorf", _wrap_new_vectorf, METH_VARARGS, NULL},
	 { (char *)"vectorf_push_back", _wrap_vectorf_push_back, METH_VARARGS, NULL},
	 { (char *)"vectorf_front", _wrap_vectorf_front, METH_VARARGS, NULL},
	 { (char *)"vectorf_back", _wrap_vectorf_back, METH_VARARGS, NULL},
	 { (char *)"vectorf_assign", _wrap_vectorf_assign, METH_VARARGS, NULL},
	 { (char *)"vectorf_resize", _wrap_vectorf_resize, METH_VARARGS, NULL},
	 { (char *)"vectorf_insert", _wrap_vectorf_insert, METH_VARARGS, NULL},
	 { (char *)"vectorf_reserve", _wrap_vectorf_reserve, METH_VARARGS, NULL},
	 { (char *)"vectorf_capacity", _wrap_vectorf_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_vectorf", _wrap_delete_vectorf, METH_VARARGS, NULL},
	 { (char *)"vectorf_swigregister", vectorf_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PnpsObject", _wrap_new_PnpsObject, METH_VARARGS, NULL},
	 { (char *)"delete_PnpsObject", _wrap_delete_PnpsObject, METH_VARARGS, NULL},
	 { (char *)"PnpsObject_Clear", _wrap_PnpsObject_Clear, METH_VARARGS, NULL},
	 { (char *)"PnpsObject_SetName", _wrap_PnpsObject_SetName, METH_VARARGS, NULL},
	 { (char *)"PnpsObject_GetName", _wrap_PnpsObject_GetName, METH_VARARGS, NULL},
	 { (char *)"PnpsObject_GetCStrName", _wrap_PnpsObject_GetCStrName, METH_VARARGS, NULL},
	 { (char *)"PnpsObject_GetStdStrName", _wrap_PnpsObject_GetStdStrName, METH_VARARGS, NULL},
	 { (char *)"PnpsObject_swigregister", PnpsObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetMyAbsRank", _wrap_PNPSApp_GetMyAbsRank, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetTotalProc", _wrap_PNPSApp_GetTotalProc, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetMyGroupNumber", _wrap_PNPSApp_GetMyGroupNumber, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetNumberOfGroups", _wrap_PNPSApp_GetNumberOfGroups, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetMyRankInGroup", _wrap_PNPSApp_GetMyRankInGroup, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetNumProcsInMyGroup", _wrap_PNPSApp_GetNumProcsInMyGroup, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetMyGroupLeader", _wrap_PNPSApp_GetMyGroupLeader, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetMaster", _wrap_PNPSApp_GetMaster, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetNumProcsInGroup", _wrap_PNPSApp_GetNumProcsInGroup, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AmIGroupLeader", _wrap_PNPSApp_AmIGroupLeader, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AmIBigBrother", _wrap_PNPSApp_AmIBigBrother, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetMasterProc", _wrap_PNPSApp_GetMasterProc, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_SendCStr", _wrap_PNPSApp_SendCStr, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_RecvCStr", _wrap_PNPSApp_RecvCStr, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_BcastCStr", _wrap_PNPSApp_BcastCStr, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_BcastTiXmlElement", _wrap_PNPSApp_BcastTiXmlElement, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_BcastTiXmlElementWithinGroup", _wrap_PNPSApp_BcastTiXmlElementWithinGroup, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetNumOfThreads", _wrap_PNPSApp_GetNumOfThreads, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_SetNumOfThreads", _wrap_PNPSApp_SetNumOfThreads, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_InitPNPSApp", _wrap_PNPSApp_InitPNPSApp, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_DeletePNPSApp", _wrap_PNPSApp_DeletePNPSApp, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_GetPNPSApp", _wrap_PNPSApp_GetPNPSApp, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_DropArray", _wrap_PNPSApp_DropArray, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_PullArray", _wrap_PNPSApp_PullArray, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_compress3", _wrap_PNPSApp_compress3, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AddProcessNumberToFileName", _wrap_PNPSApp_AddProcessNumberToFileName, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AddMyAbsProcNumberToFileName", _wrap_PNPSApp_AddMyAbsProcNumberToFileName, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AddMyGroupNumberToFileName", _wrap_PNPSApp_AddMyGroupNumberToFileName, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AddMyGroupNumberToFileNameStdStr", _wrap_PNPSApp_AddMyGroupNumberToFileNameStdStr, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AddMyGroupStringNameToFileNameStdStr", _wrap_PNPSApp_AddMyGroupStringNameToFileNameStdStr, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AddGroupStringNameToFileNameStdStr", _wrap_PNPSApp_AddGroupStringNameToFileNameStdStr, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_AddGroupStringNameToFileNameCStr", _wrap_PNPSApp_AddGroupStringNameToFileNameCStr, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_RedirectOutputToFile", _wrap_PNPSApp_RedirectOutputToFile, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_RedirectOutputToStd", _wrap_PNPSApp_RedirectOutputToStd, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_HaveTimeToRun", _wrap_PNPSApp_HaveTimeToRun, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_bTimerOn_set", _wrap_PNPSApp_bTimerOn_set, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_bTimerOn_get", _wrap_PNPSApp_bTimerOn_get, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_SetWallTimeToRun", _wrap_PNPSApp_SetWallTimeToRun, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_StartTime_set", _wrap_PNPSApp_StartTime_set, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_StartTime_get", _wrap_PNPSApp_StartTime_get, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_SecondsToRun_set", _wrap_PNPSApp_SecondsToRun_set, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_SecondsToRun_get", _wrap_PNPSApp_SecondsToRun_get, METH_VARARGS, NULL},
	 { (char *)"PNPSApp_swigregister", PNPSApp_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_GenericSolver", _wrap_delete_GenericSolver, METH_VARARGS, NULL},
	 { (char *)"GenericSolver_InitZero", _wrap_GenericSolver_InitZero, METH_VARARGS, NULL},
	 { (char *)"GenericSolver_Clear", _wrap_GenericSolver_Clear, METH_VARARGS, NULL},
	 { (char *)"GenericSolver_ShowParameters", _wrap_GenericSolver_ShowParameters, METH_VARARGS, NULL},
	 { (char *)"GenericSolver_ShowProperties", _wrap_GenericSolver_ShowProperties, METH_VARARGS, NULL},
	 { (char *)"GenericSolver_InitSolver", _wrap_GenericSolver_InitSolver, METH_VARARGS, NULL},
	 { (char *)"GenericSolver_Solve", _wrap_GenericSolver_Solve, METH_VARARGS, NULL},
	 { (char *)"GenericSolver_swigregister", GenericSolver_swigregister, METH_VARARGS, NULL},
	 { (char *)"TypeOfMapFile", _wrap_TypeOfMapFile, METH_VARARGS, NULL},
	 { (char *)"WriteMapGZ", _wrap_WriteMapGZ, METH_VARARGS, NULL},
	 { (char *)"ReadMapGZ", _wrap_ReadMapGZ, METH_VARARGS, NULL},
	 { (char *)"WriteIndexGZinTwoColumns", _wrap_WriteIndexGZinTwoColumns, METH_VARARGS, NULL},
	 { (char *)"ReadIndexGZfromTwoColumns", _wrap_ReadIndexGZfromTwoColumns, METH_VARARGS, NULL},
	 { (char *)"WriteIndexGZTwoColumns", _wrap_WriteIndexGZTwoColumns, METH_VARARGS, NULL},
	 { (char *)"ReadIndexGZTwoColumns", _wrap_ReadIndexGZTwoColumns, METH_VARARGS, NULL},
	 { (char *)"WriteMapGZOneColumns", _wrap_WriteMapGZOneColumns, METH_VARARGS, NULL},
	 { (char *)"ReadMapGZOneColumns", _wrap_ReadMapGZOneColumns, METH_VARARGS, NULL},
	 { (char *)"WriteMapGZTwoColumns", _wrap_WriteMapGZTwoColumns, METH_VARARGS, NULL},
	 { (char *)"ReadMapGZTwoColumns", _wrap_ReadMapGZTwoColumns, METH_VARARGS, NULL},
	 { (char *)"ConvertToPBC", _wrap_ConvertToPBC, METH_VARARGS, NULL},
	 { (char *)"RemovePBC", _wrap_RemovePBC, METH_VARARGS, NULL},
	 { (char *)"new_VectorIntField3D", _wrap_new_VectorIntField3D, METH_VARARGS, NULL},
	 { (char *)"delete_VectorIntField3D", _wrap_delete_VectorIntField3D, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_amode_set", _wrap_VectorIntField3D_amode_set, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_amode_get", _wrap_VectorIntField3D_amode_get, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_InitZero", _wrap_VectorIntField3D_InitZero, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_Clear", _wrap_VectorIntField3D_Clear, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GridSize_set", _wrap_VectorIntField3D_GridSize_set, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GridSize_get", _wrap_VectorIntField3D_GridSize_get, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GridScale_set", _wrap_VectorIntField3D_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GridScale_get", _wrap_VectorIntField3D_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_Nelem_set", _wrap_VectorIntField3D_Nelem_set, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_Nelem_get", _wrap_VectorIntField3D_Nelem_get, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_V_set", _wrap_VectorIntField3D_V_set, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_V_get", _wrap_VectorIntField3D_V_get, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_SetVectorField3D", _wrap_VectorIntField3D_SetVectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_ReadFromFile", _wrap_VectorIntField3D_ReadFromFile, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_WriteToFile", _wrap_VectorIntField3D_WriteToFile, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GetNelem", _wrap_VectorIntField3D_GetNelem, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GetNx", _wrap_VectorIntField3D_GetNx, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GetNy", _wrap_VectorIntField3D_GetNy, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GetNz", _wrap_VectorIntField3D_GetNz, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GetValue", _wrap_VectorIntField3D_GetValue, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_SetValue", _wrap_VectorIntField3D_SetValue, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_GetValueByGrdNmb", _wrap_VectorIntField3D_GetValueByGrdNmb, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_SetValueByGrdNmb", _wrap_VectorIntField3D_SetValueByGrdNmb, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_FillValue", _wrap_VectorIntField3D_FillValue, METH_VARARGS, NULL},
	 { (char *)"VectorIntField3D_swigregister", VectorIntField3D_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_VectorField3D", _wrap_new_VectorField3D, METH_VARARGS, NULL},
	 { (char *)"delete_VectorField3D", _wrap_delete_VectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_amode_set", _wrap_VectorField3D_amode_set, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_amode_get", _wrap_VectorField3D_amode_get, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_InitZero", _wrap_VectorField3D_InitZero, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_Clear", _wrap_VectorField3D_Clear, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GridSize_set", _wrap_VectorField3D_GridSize_set, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GridSize_get", _wrap_VectorField3D_GridSize_get, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GridScale_set", _wrap_VectorField3D_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GridScale_get", _wrap_VectorField3D_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_Nelem_set", _wrap_VectorField3D_Nelem_set, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_Nelem_get", _wrap_VectorField3D_Nelem_get, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_V_set", _wrap_VectorField3D_V_set, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_V_get", _wrap_VectorField3D_V_get, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetField", _wrap_VectorField3D_GetField, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_SetField", _wrap_VectorField3D_SetField, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_SetVectorField3D", _wrap_VectorField3D_SetVectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ReadFromFile", _wrap_VectorField3D_ReadFromFile, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_WriteToFile", _wrap_VectorField3D_WriteToFile, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_RMSD", _wrap_VectorField3D_RMSD, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_RMSDInternal", _wrap_VectorField3D_RMSDInternal, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetNelem", _wrap_VectorField3D_GetNelem, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetNx", _wrap_VectorField3D_GetNx, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetNy", _wrap_VectorField3D_GetNy, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetNz", _wrap_VectorField3D_GetNz, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetValue", _wrap_VectorField3D_GetValue, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetInterpolatedValueGrid", _wrap_VectorField3D_GetInterpolatedValueGrid, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_SetValue", _wrap_VectorField3D_SetValue, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_GetValueByGrdNmb", _wrap_VectorField3D_GetValueByGrdNmb, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_SetValueByGrdNmb", _wrap_VectorField3D_SetValueByGrdNmb, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_FillValue", _wrap_VectorField3D_FillValue, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_MultiplyBy", _wrap_VectorField3D_MultiplyBy, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_MultiplyOneElementBy", _wrap_VectorField3D_MultiplyOneElementBy, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_MaskWithVectorField3D", _wrap_VectorField3D_MaskWithVectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_MaskWithVectorField3DUseOneElement", _wrap_VectorField3D_MaskWithVectorField3DUseOneElement, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_Copy", _wrap_VectorField3D_Copy, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_CopyOneElement", _wrap_VectorField3D_CopyOneElement, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_AddVectorField3D", _wrap_VectorField3D_AddVectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_AddOneElementOfVectorField3D", _wrap_VectorField3D_AddOneElementOfVectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_SubtractVectorField3D", _wrap_VectorField3D_SubtractVectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_SubtractOneElementOfVectorField3D", _wrap_VectorField3D_SubtractOneElementOfVectorField3D, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_MinMax", _wrap_VectorField3D_MinMax, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ReadFromFileAddPBC", _wrap_VectorField3D_ReadFromFileAddPBC, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ", _wrap_VectorField3D_ReadFromFileAddPBCandSplitSDMPI4FDaZ, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_SplitExtVF3DSDMPI4FDaZ", _wrap_VectorField3D_SplitExtVF3DSDMPI4FDaZ, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_WriteToFileRemovePBC", _wrap_VectorField3D_WriteToFileRemovePBC, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC", _wrap_VectorField3D_WriteToFileCombineSDMPIDistrRemovePBC, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_CalcLinInterFloat", _wrap_VectorField3D_CalcLinInterFloat, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_InterpolateFromExt", _wrap_VectorField3D_InterpolateFromExt, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_InterpolateBoarderFromExt", _wrap_VectorField3D_InterpolateBoarderFromExt, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_InterpolateBoarderFromExtWithMultipl", _wrap_VectorField3D_InterpolateBoarderFromExtWithMultipl, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_InterpolateInternalBoarderFromExt", _wrap_VectorField3D_InterpolateInternalBoarderFromExt, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_InterpolateInternalBoarderFromExtWithMultipl", _wrap_VectorField3D_InterpolateInternalBoarderFromExtWithMultipl, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvFloatToIntUnitsX", _wrap_VectorField3D_ConvFloatToIntUnitsX, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvFloatToIntUnitsY", _wrap_VectorField3D_ConvFloatToIntUnitsY, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvFloatToIntUnitsZ", _wrap_VectorField3D_ConvFloatToIntUnitsZ, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvIntXYZToGrdPnt", _wrap_VectorField3D_ConvIntXYZToGrdPnt, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvExtXYZToGrdPnt", _wrap_VectorField3D_ConvExtXYZToGrdPnt, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvIntToExtUnitsX", _wrap_VectorField3D_ConvIntToExtUnitsX, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvIntToExtUnitsY", _wrap_VectorField3D_ConvIntToExtUnitsY, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_ConvIntToExtUnitsZ", _wrap_VectorField3D_ConvIntToExtUnitsZ, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_AverageThrLaplas", _wrap_VectorField3D_AverageThrLaplas, METH_VARARGS, NULL},
	 { (char *)"VectorField3D_swigregister", VectorField3D_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MapsIOData", _wrap_new_MapsIOData, METH_VARARGS, NULL},
	 { (char *)"delete_MapsIOData", _wrap_delete_MapsIOData, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_DielectricConstantMap_set", _wrap_MapsIOData_DielectricConstantMap_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_DielectricConstantMap_get", _wrap_MapsIOData_DielectricConstantMap_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_DiffusionMapFile_set", _wrap_MapsIOData_DiffusionMapFile_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_DiffusionMapFile_get", _wrap_MapsIOData_DiffusionMapFile_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_DynamicChargeMapFile_set", _wrap_MapsIOData_DynamicChargeMapFile_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_DynamicChargeMapFile_get", _wrap_MapsIOData_DynamicChargeMapFile_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_StaticChargeMapFile_set", _wrap_MapsIOData_StaticChargeMapFile_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_StaticChargeMapFile_get", _wrap_MapsIOData_StaticChargeMapFile_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_PotentialMapFile_set", _wrap_MapsIOData_PotentialMapFile_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_PotentialMapFile_get", _wrap_MapsIOData_PotentialMapFile_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_PMFMapFile_set", _wrap_MapsIOData_PMFMapFile_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_PMFMapFile_get", _wrap_MapsIOData_PMFMapFile_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_PMFMapFile2_set", _wrap_MapsIOData_PMFMapFile2_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_PMFMapFile2_get", _wrap_MapsIOData_PMFMapFile2_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_NodeIndexingFile_set", _wrap_MapsIOData_NodeIndexingFile_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_NodeIndexingFile_get", _wrap_MapsIOData_NodeIndexingFile_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_Mode_set", _wrap_MapsIOData_Mode_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_Mode_get", _wrap_MapsIOData_Mode_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_ModeStr_set", _wrap_MapsIOData_ModeStr_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_ModeStr_get", _wrap_MapsIOData_ModeStr_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_AddGroupStringSuffix_set", _wrap_MapsIOData_AddGroupStringSuffix_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_AddGroupStringSuffix_get", _wrap_MapsIOData_AddGroupStringSuffix_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_AddGroupNumberSuffix_set", _wrap_MapsIOData_AddGroupNumberSuffix_set, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_AddGroupNumberSuffix_get", _wrap_MapsIOData_AddGroupNumberSuffix_get, METH_VARARGS, NULL},
	 { (char *)"MapsIOData_swigregister", MapsIOData_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_NodeIndexing", _wrap_new_NodeIndexing, METH_VARARGS, NULL},
	 { (char *)"delete_NodeIndexing", _wrap_delete_NodeIndexing, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_InitZero", _wrap_NodeIndexing_InitZero, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_EpsilonField_set", _wrap_NodeIndexing_EpsilonField_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_EpsilonField_get", _wrap_NodeIndexing_EpsilonField_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_EpsilonFieldSft_set", _wrap_NodeIndexing_EpsilonFieldSft_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_EpsilonFieldSft_get", _wrap_NodeIndexing_EpsilonFieldSft_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_IonField_set", _wrap_NodeIndexing_IonField_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_IonField_get", _wrap_NodeIndexing_IonField_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_IonFieldSft_set", _wrap_NodeIndexing_IonFieldSft_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_IonFieldSft_get", _wrap_NodeIndexing_IonFieldSft_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_DiffBoarderMask_set", _wrap_NodeIndexing_DiffBoarderMask_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_DiffBoarderMask_get", _wrap_NodeIndexing_DiffBoarderMask_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_DiffBoarderMaskSft_set", _wrap_NodeIndexing_DiffBoarderMaskSft_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_DiffBoarderMaskSft_get", _wrap_NodeIndexing_DiffBoarderMaskSft_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GridSize_set", _wrap_NodeIndexing_GridSize_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GridSize_get", _wrap_NodeIndexing_GridSize_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GridScale_set", _wrap_NodeIndexing_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GridScale_get", _wrap_NodeIndexing_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_Eps_set", _wrap_NodeIndexing_Eps_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_Eps_get", _wrap_NodeIndexing_Eps_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_D_set", _wrap_NodeIndexing_D_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_D_get", _wrap_NodeIndexing_D_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_C_set", _wrap_NodeIndexing_C_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_C_get", _wrap_NodeIndexing_C_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_NIonsTypes_set", _wrap_NodeIndexing_NIonsTypes_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_NIonsTypes_get", _wrap_NodeIndexing_NIonsTypes_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_IonsQ_set", _wrap_NodeIndexing_IonsQ_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_IonsQ_get", _wrap_NodeIndexing_IonsQ_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_NIndex_set", _wrap_NodeIndexing_NIndex_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_NIndex_get", _wrap_NodeIndexing_NIndex_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_Q_set", _wrap_NodeIndexing_Q_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_Q_get", _wrap_NodeIndexing_Q_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_PBC_set", _wrap_NodeIndexing_PBC_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_PBC_get", _wrap_NodeIndexing_PBC_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetNoPBC", _wrap_NodeIndexing_SetNoPBC, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetPBC", _wrap_NodeIndexing_SetPBC, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_QNum_set", _wrap_NodeIndexing_QNum_set, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_QNum_get", _wrap_NodeIndexing_QNum_get, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetNx", _wrap_NodeIndexing_GetNx, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetNy", _wrap_NodeIndexing_GetNy, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetNz", _wrap_NodeIndexing_GetNz, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetDielConstInUse", _wrap_NodeIndexing_GetDielConstInUse, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetDielConstInUse", _wrap_NodeIndexing_SetDielConstInUse, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetNNodes", _wrap_NodeIndexing_SetNNodes, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetBlackAndWhiteNodes", _wrap_NodeIndexing_SetBlackAndWhiteNodes, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetIndexFieldFromIntArray", _wrap_NodeIndexing_SetIndexFieldFromIntArray, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetIonAccess", _wrap_NodeIndexing_SetIonAccess, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetCMap", _wrap_NodeIndexing_GetCMap, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetIntArrayFromIndexField", _wrap_NodeIndexing_GetIntArrayFromIndexField, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetField", _wrap_NodeIndexing_GetField, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_CalcDielBoarder", _wrap_NodeIndexing_CalcDielBoarder, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_CalcDiffBoarder", _wrap_NodeIndexing_CalcDiffBoarder, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_InsertSphereInDielMap", _wrap_NodeIndexing_InsertSphereInDielMap, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_CheckBoarder4Q", _wrap_NodeIndexing_CheckBoarder4Q, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_CheckNodeIndex", _wrap_NodeIndexing_CheckNodeIndex, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_RemoveBadDiffusionPoints", _wrap_NodeIndexing_RemoveBadDiffusionPoints, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetChargeMapFromArray", _wrap_NodeIndexing_SetChargeMapFromArray, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetChargeMapFromArrayNoQonBoarder", _wrap_NodeIndexing_SetChargeMapFromArrayNoQonBoarder, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetChargeMapToZero", _wrap_NodeIndexing_SetChargeMapToZero, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetChargeArray", _wrap_NodeIndexing_GetChargeArray, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetChargeIndex", _wrap_NodeIndexing_GetChargeIndex, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_ReadFromFile", _wrap_NodeIndexing_ReadFromFile, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_ConvertToPBC", _wrap_NodeIndexing_ConvertToPBC, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_ReadFromFileAddPBC", _wrap_NodeIndexing_ReadFromFileAddPBC, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_ReadFromFile4SDMPI", _wrap_NodeIndexing_ReadFromFile4SDMPI, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_WriteToFile", _wrap_NodeIndexing_WriteToFile, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetMyPart4MPI", _wrap_NodeIndexing_GetMyPart4MPI, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetCentralPartFromNIExtMyPart4MPI", _wrap_NodeIndexing_GetCentralPartFromNIExtMyPart4MPI, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetDiel", _wrap_NodeIndexing_GetDiel, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetDielFloat", _wrap_NodeIndexing_GetDielFloat, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetSCharDielMapForGAPS", _wrap_NodeIndexing_SetSCharDielMapForGAPS, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetDiel", _wrap_NodeIndexing_SetDiel, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetIonField", _wrap_NodeIndexing_GetIonField, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetDiffFloat", _wrap_NodeIndexing_GetDiffFloat, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetDiffDouble", _wrap_NodeIndexing_GetDiffDouble, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetConcFloat", _wrap_NodeIndexing_GetConcFloat, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetIonField", _wrap_NodeIndexing_SetIonField, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_GetDiffZeroInd", _wrap_NodeIndexing_GetDiffZeroInd, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_SetDiffToZero", _wrap_NodeIndexing_SetDiffToZero, METH_VARARGS, NULL},
	 { (char *)"NodeIndexing_swigregister", NodeIndexing_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ContWorld", _wrap_new_ContWorld, METH_VARARGS, (char *)"Class for continuum representation of system"},
	 { (char *)"delete_ContWorld", _wrap_delete_ContWorld, METH_VARARGS, NULL},
	 { (char *)"ContWorld_InitZero", _wrap_ContWorld_InitZero, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Clear", _wrap_ContWorld_Clear, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MyRank_set", _wrap_ContWorld_MyRank_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MyRank_get", _wrap_ContWorld_MyRank_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_NProcs_set", _wrap_ContWorld_NProcs_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_NProcs_get", _wrap_ContWorld_NProcs_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MyGlobalZ0_set", _wrap_ContWorld_MyGlobalZ0_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MyGlobalZ0_get", _wrap_ContWorld_MyGlobalZ0_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MyGlobalZ1_set", _wrap_ContWorld_MyGlobalZ1_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MyGlobalZ1_get", _wrap_ContWorld_MyGlobalZ1_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MPISpreadWorld_set", _wrap_ContWorld_MPISpreadWorld_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_MPISpreadWorld_get", _wrap_ContWorld_MPISpreadWorld_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_NIonsTypes_set", _wrap_ContWorld_NIonsTypes_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_NIonsTypes_get", _wrap_ContWorld_NIonsTypes_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_IonsQ_set", _wrap_ContWorld_IonsQ_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_IonsQ_get", _wrap_ContWorld_IonsQ_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSize_set", _wrap_ContWorld_GridSize_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSize_get", _wrap_ContWorld_GridSize_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeGlobal_set", _wrap_ContWorld_GridSizeGlobal_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeGlobal_get", _wrap_ContWorld_GridSizeGlobal_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeOriginal_set", _wrap_ContWorld_GridSizeOriginal_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeOriginal_get", _wrap_ContWorld_GridSizeOriginal_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_XYZ_set", _wrap_ContWorld_GS_XYZ_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_XYZ_get", _wrap_ContWorld_GS_XYZ_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_XY_set", _wrap_ContWorld_GS_XY_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_XY_get", _wrap_ContWorld_GS_XY_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_X_set", _wrap_ContWorld_GS_X_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_X_get", _wrap_ContWorld_GS_X_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_Y_set", _wrap_ContWorld_GS_Y_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_Y_get", _wrap_ContWorld_GS_Y_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_Z_set", _wrap_ContWorld_GS_Z_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GS_Z_get", _wrap_ContWorld_GS_Z_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeXYZGlobal_set", _wrap_ContWorld_GridSizeXYZGlobal_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeXYZGlobal_get", _wrap_ContWorld_GridSizeXYZGlobal_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeXYZOriginal_set", _wrap_ContWorld_GridSizeXYZOriginal_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridSizeXYZOriginal_get", _wrap_ContWorld_GridSizeXYZOriginal_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_startBlackAndWhite_set", _wrap_ContWorld_startBlackAndWhite_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_startBlackAndWhite_get", _wrap_ContWorld_startBlackAndWhite_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridScale_set", _wrap_ContWorld_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GridScale_get", _wrap_ContWorld_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_NIndexing_set", _wrap_ContWorld_NIndexing_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_NIndexing_get", _wrap_ContWorld_NIndexing_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Epsilon_set", _wrap_ContWorld_Epsilon_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Epsilon_get", _wrap_ContWorld_Epsilon_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Qstat_set", _wrap_ContWorld_Qstat_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Qstat_get", _wrap_ContWorld_Qstat_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_C_set", _wrap_ContWorld_C_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_C_get", _wrap_ContWorld_C_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_CDouble_set", _wrap_ContWorld_CDouble_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_CDouble_get", _wrap_ContWorld_CDouble_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_D_set", _wrap_ContWorld_D_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_D_get", _wrap_ContWorld_D_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_PMF_set", _wrap_ContWorld_PMF_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_PMF_get", _wrap_ContWorld_PMF_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Potential_set", _wrap_ContWorld_Potential_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Potential_get", _wrap_ContWorld_Potential_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_PotentialDouble_set", _wrap_ContWorld_PotentialDouble_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_PotentialDouble_get", _wrap_ContWorld_PotentialDouble_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_PBC_set", _wrap_ContWorld_PBC_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_PBC_get", _wrap_ContWorld_PBC_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_BoundaryCondition_set", _wrap_ContWorld_BoundaryCondition_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_BoundaryCondition_get", _wrap_ContWorld_BoundaryCondition_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_SystemEnergy_set", _wrap_ContWorld_SystemEnergy_set, METH_VARARGS, NULL},
	 { (char *)"ContWorld_SystemEnergy_get", _wrap_ContWorld_SystemEnergy_get, METH_VARARGS, NULL},
	 { (char *)"ContWorld_SetContWorld", _wrap_ContWorld_SetContWorld, METH_VARARGS, NULL},
	 { (char *)"ContWorld_SetContWorldNoMobIons", _wrap_ContWorld_SetContWorldNoMobIons, METH_VARARGS, NULL},
	 { (char *)"ContWorld_SetContWorldTwoMobIons", _wrap_ContWorld_SetContWorldTwoMobIons, METH_VARARGS, NULL},
	 { (char *)"ContWorld_Print", _wrap_ContWorld_Print, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadMaps", _wrap_ContWorld_ReadMaps, METH_VARARGS, NULL},
	 { (char *)"ContWorld_WriteMaps", _wrap_ContWorld_WriteMaps, METH_VARARGS, NULL},
	 { (char *)"ContWorld_CheckGridOfVectorField3D", _wrap_ContWorld_CheckGridOfVectorField3D, METH_VARARGS, NULL},
	 { (char *)"ContWorld_SaveQstPhi", _wrap_ContWorld_SaveQstPhi, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadPotential", _wrap_ContWorld_ReadPotential, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadPotentialChargeZRange", _wrap_ContWorld_ReadPotentialChargeZRange, METH_VARARGS, NULL},
	 { (char *)"ContWorld_WritePotential", _wrap_ContWorld_WritePotential, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadPMF", _wrap_ContWorld_ReadPMF, METH_VARARGS, NULL},
	 { (char *)"ContWorld_WritePMF", _wrap_ContWorld_WritePMF, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadNodeIndexing", _wrap_ContWorld_ReadNodeIndexing, METH_VARARGS, NULL},
	 { (char *)"ContWorld_WriteNodeIndexing", _wrap_ContWorld_WriteNodeIndexing, METH_VARARGS, NULL},
	 { (char *)"ContWorld_WriteContTop", _wrap_ContWorld_WriteContTop, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadDynamicCharge", _wrap_ContWorld_ReadDynamicCharge, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadDynamicChargeZRange", _wrap_ContWorld_ReadDynamicChargeZRange, METH_VARARGS, NULL},
	 { (char *)"ContWorld_WriteDynamicCharge", _wrap_ContWorld_WriteDynamicCharge, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadDiffusion", _wrap_ContWorld_ReadDiffusion, METH_VARARGS, NULL},
	 { (char *)"ContWorld_WriteDiffusion", _wrap_ContWorld_WriteDiffusion, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ReadVectorField3D", _wrap_ContWorld_ReadVectorField3D, METH_VARARGS, NULL},
	 { (char *)"ContWorld_BorderExchange", _wrap_ContWorld_BorderExchange, METH_VARARGS, NULL},
	 { (char *)"ContWorld_BorderExchangeInt", _wrap_ContWorld_BorderExchangeInt, METH_VARARGS, NULL},
	 { (char *)"ContWorld_BorderExchangeDouble", _wrap_ContWorld_BorderExchangeDouble, METH_VARARGS, NULL},
	 { (char *)"ContWorld_CheckArrays", _wrap_ContWorld_CheckArrays, METH_VARARGS, NULL},
	 { (char *)"ContWorld_CheckSystem", _wrap_ContWorld_CheckSystem, METH_VARARGS, NULL},
	 { (char *)"ContWorld_SetInitConcentrationFromNIndexing", _wrap_ContWorld_SetInitConcentrationFromNIndexing, METH_VARARGS, NULL},
	 { (char *)"ContWorld_convertRealToOriginalGrid", _wrap_ContWorld_convertRealToOriginalGrid, METH_VARARGS, NULL},
	 { (char *)"ContWorld_convertOriginalToRealGrid", _wrap_ContWorld_convertOriginalToRealGrid, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvFloatToGlobIntUnitsX", _wrap_ContWorld_ConvFloatToGlobIntUnitsX, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvFloatToLocIntUnitsX", _wrap_ContWorld_ConvFloatToLocIntUnitsX, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvFloatToGlobIntUnitsY", _wrap_ContWorld_ConvFloatToGlobIntUnitsY, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvFloatToLocIntUnitsY", _wrap_ContWorld_ConvFloatToLocIntUnitsY, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvFloatToGlobIntUnitsZ", _wrap_ContWorld_ConvFloatToGlobIntUnitsZ, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvFloatToLocIntUnitsZ", _wrap_ContWorld_ConvFloatToLocIntUnitsZ, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvGlobalIntenalXYZToGrdPnt", _wrap_ContWorld_ConvGlobalIntenalXYZToGrdPnt, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvGlobalExternalXYZToGrdPnt", _wrap_ContWorld_ConvGlobalExternalXYZToGrdPnt, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvGlobIntToGlobExtUnitsX", _wrap_ContWorld_ConvGlobIntToGlobExtUnitsX, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvGlobIntToGlobExtUnitsY", _wrap_ContWorld_ConvGlobIntToGlobExtUnitsY, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvGlobIntToGlobExtUnitsZ", _wrap_ContWorld_ConvGlobIntToGlobExtUnitsZ, METH_VARARGS, NULL},
	 { (char *)"ContWorld_GetBorder", _wrap_ContWorld_GetBorder, METH_VARARGS, NULL},
	 { (char *)"ContWorld_AddPotential", _wrap_ContWorld_AddPotential, METH_VARARGS, NULL},
	 { (char *)"ContWorld_cxxApplyAsymConc", _wrap_ContWorld_cxxApplyAsymConc, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ApplyAsymConcByScaling", _wrap_ContWorld_ApplyAsymConcByScaling, METH_VARARGS, NULL},
	 { (char *)"ContWorld_ConvertIonStrengthToDynamicCharge", _wrap_ContWorld_ConvertIonStrengthToDynamicCharge, METH_VARARGS, NULL},
	 { (char *)"ContWorld_RemoveDiffusionPointsAtNegativeC", _wrap_ContWorld_RemoveDiffusionPointsAtNegativeC, METH_VARARGS, NULL},
	 { (char *)"ContWorld_RemoveDiffusionPoints", _wrap_ContWorld_RemoveDiffusionPoints, METH_VARARGS, NULL},
	 { (char *)"ContWorld_FindImplicitMembranePosition", _wrap_ContWorld_FindImplicitMembranePosition, METH_VARARGS, NULL},
	 { (char *)"ContWorld_swigregister", ContWorld_swigregister, METH_VARARGS, NULL},
	 { (char *)"ReadContWorldFromNodeIndexing", _wrap_ReadContWorldFromNodeIndexing, METH_VARARGS, NULL},
	 { (char *)"new_FieldBW", _wrap_new_FieldBW, METH_VARARGS, NULL},
	 { (char *)"delete_FieldBW", _wrap_delete_FieldBW, METH_VARARGS, NULL},
	 { (char *)"FieldBW_B_set", _wrap_FieldBW_B_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_B_get", _wrap_FieldBW_B_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_W_set", _wrap_FieldBW_W_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_W_get", _wrap_FieldBW_W_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Borg_set", _wrap_FieldBW_Borg_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Borg_get", _wrap_FieldBW_Borg_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Worg_set", _wrap_FieldBW_Worg_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Worg_get", _wrap_FieldBW_Worg_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_GS_X_set", _wrap_FieldBW_GS_X_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_GS_X_get", _wrap_FieldBW_GS_X_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_GS_Y_set", _wrap_FieldBW_GS_Y_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_GS_Y_get", _wrap_FieldBW_GS_Y_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_GS_Z_set", _wrap_FieldBW_GS_Z_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_GS_Z_get", _wrap_FieldBW_GS_Z_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_StrideX_set", _wrap_FieldBW_StrideX_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_StrideX_get", _wrap_FieldBW_StrideX_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_StrideXY_set", _wrap_FieldBW_StrideXY_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_StrideXY_get", _wrap_FieldBW_StrideXY_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Bsize_set", _wrap_FieldBW_Bsize_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Bsize_get", _wrap_FieldBW_Bsize_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Wsize_set", _wrap_FieldBW_Wsize_set, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Wsize_get", _wrap_FieldBW_Wsize_get, METH_VARARGS, NULL},
	 { (char *)"FieldBW_Init", _wrap_FieldBW_Init, METH_VARARGS, NULL},
	 { (char *)"FieldBW_SameSize", _wrap_FieldBW_SameSize, METH_VARARGS, NULL},
	 { (char *)"FieldBW_SetFromField", _wrap_FieldBW_SetFromField, METH_VARARGS, NULL},
	 { (char *)"FieldBW_SetField", _wrap_FieldBW_SetField, METH_VARARGS, NULL},
	 { (char *)"FieldBW_BorderExchange", _wrap_FieldBW_BorderExchange, METH_VARARGS, NULL},
	 { (char *)"FieldBW_swigregister", FieldBW_swigregister, METH_VARARGS, NULL},
	 { (char *)"float4_x_set", _wrap_float4_x_set, METH_VARARGS, NULL},
	 { (char *)"float4_x_get", _wrap_float4_x_get, METH_VARARGS, NULL},
	 { (char *)"float4_y_set", _wrap_float4_y_set, METH_VARARGS, NULL},
	 { (char *)"float4_y_get", _wrap_float4_y_get, METH_VARARGS, NULL},
	 { (char *)"float4_z_set", _wrap_float4_z_set, METH_VARARGS, NULL},
	 { (char *)"float4_z_get", _wrap_float4_z_get, METH_VARARGS, NULL},
	 { (char *)"float4_w_set", _wrap_float4_w_set, METH_VARARGS, NULL},
	 { (char *)"float4_w_get", _wrap_float4_w_get, METH_VARARGS, NULL},
	 { (char *)"new_float4", _wrap_new_float4, METH_VARARGS, NULL},
	 { (char *)"delete_float4", _wrap_delete_float4, METH_VARARGS, NULL},
	 { (char *)"float4_swigregister", float4_swigregister, METH_VARARGS, NULL},
	 { (char *)"float3_x_set", _wrap_float3_x_set, METH_VARARGS, NULL},
	 { (char *)"float3_x_get", _wrap_float3_x_get, METH_VARARGS, NULL},
	 { (char *)"float3_y_set", _wrap_float3_y_set, METH_VARARGS, NULL},
	 { (char *)"float3_y_get", _wrap_float3_y_get, METH_VARARGS, NULL},
	 { (char *)"float3_z_set", _wrap_float3_z_set, METH_VARARGS, NULL},
	 { (char *)"float3_z_get", _wrap_float3_z_get, METH_VARARGS, NULL},
	 { (char *)"new_float3", _wrap_new_float3, METH_VARARGS, NULL},
	 { (char *)"delete_float3", _wrap_delete_float3, METH_VARARGS, NULL},
	 { (char *)"float3_swigregister", float3_swigregister, METH_VARARGS, NULL},
	 { (char *)"int3_x_set", _wrap_int3_x_set, METH_VARARGS, NULL},
	 { (char *)"int3_x_get", _wrap_int3_x_get, METH_VARARGS, NULL},
	 { (char *)"int3_y_set", _wrap_int3_y_set, METH_VARARGS, NULL},
	 { (char *)"int3_y_get", _wrap_int3_y_get, METH_VARARGS, NULL},
	 { (char *)"int3_z_set", _wrap_int3_z_set, METH_VARARGS, NULL},
	 { (char *)"int3_z_get", _wrap_int3_z_get, METH_VARARGS, NULL},
	 { (char *)"new_int3", _wrap_new_int3, METH_VARARGS, NULL},
	 { (char *)"delete_int3", _wrap_delete_int3, METH_VARARGS, NULL},
	 { (char *)"int3_swigregister", int3_swigregister, METH_VARARGS, NULL},
	 { (char *)"int4_x_set", _wrap_int4_x_set, METH_VARARGS, NULL},
	 { (char *)"int4_x_get", _wrap_int4_x_get, METH_VARARGS, NULL},
	 { (char *)"int4_y_set", _wrap_int4_y_set, METH_VARARGS, NULL},
	 { (char *)"int4_y_get", _wrap_int4_y_get, METH_VARARGS, NULL},
	 { (char *)"int4_z_set", _wrap_int4_z_set, METH_VARARGS, NULL},
	 { (char *)"int4_z_get", _wrap_int4_z_get, METH_VARARGS, NULL},
	 { (char *)"int4_w_set", _wrap_int4_w_set, METH_VARARGS, NULL},
	 { (char *)"int4_w_get", _wrap_int4_w_get, METH_VARARGS, NULL},
	 { (char *)"new_int4", _wrap_new_int4, METH_VARARGS, NULL},
	 { (char *)"delete_int4", _wrap_delete_int4, METH_VARARGS, NULL},
	 { (char *)"int4_swigregister", int4_swigregister, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_GS_set", _wrap_PoissonSolverOnCudaStruct_GS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_GS_get", _wrap_PoissonSolverOnCudaStruct_GS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_GridScale_set", _wrap_PoissonSolverOnCudaStruct_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_GridScale_get", _wrap_PoissonSolverOnCudaStruct_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_set", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_get", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_X_set", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_X_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_X_get", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_X_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_XY_set", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_XY_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_XY_get", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_XY_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_XYZ_set", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_XYZ_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_spltGSWBC_XYZ_get", _wrap_PoissonSolverOnCudaStruct_spltGSWBC_XYZ_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_P_set", _wrap_PoissonSolverOnCudaStruct_P_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_P_get", _wrap_PoissonSolverOnCudaStruct_P_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_MaxIterations_set", _wrap_PoissonSolverOnCudaStruct_MaxIterations_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_MaxIterations_get", _wrap_PoissonSolverOnCudaStruct_MaxIterations_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Relaxation_set", _wrap_PoissonSolverOnCudaStruct_Relaxation_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Relaxation_get", _wrap_PoissonSolverOnCudaStruct_Relaxation_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Qnum_set", _wrap_PoissonSolverOnCudaStruct_Qnum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Qnum_get", _wrap_PoissonSolverOnCudaStruct_Qnum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Q_set", _wrap_PoissonSolverOnCudaStruct_Q_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Q_get", _wrap_PoissonSolverOnCudaStruct_Q_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Qmult_set", _wrap_PoissonSolverOnCudaStruct_Qmult_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Qmult_get", _wrap_PoissonSolverOnCudaStruct_Qmult_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Qpos_set", _wrap_PoissonSolverOnCudaStruct_Qpos_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Qpos_get", _wrap_PoissonSolverOnCudaStruct_Qpos_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_DielBordNum_set", _wrap_PoissonSolverOnCudaStruct_DielBordNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_DielBordNum_get", _wrap_PoissonSolverOnCudaStruct_DielBordNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_DielMult_set", _wrap_PoissonSolverOnCudaStruct_DielMult_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_DielMult_get", _wrap_PoissonSolverOnCudaStruct_DielMult_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_DielBordPos_set", _wrap_PoissonSolverOnCudaStruct_DielBordPos_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_DielBordPos_get", _wrap_PoissonSolverOnCudaStruct_DielBordPos_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_ConvergenceCheck_set", _wrap_PoissonSolverOnCudaStruct_ConvergenceCheck_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_ConvergenceCheck_get", _wrap_PoissonSolverOnCudaStruct_ConvergenceCheck_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Tolerance_set", _wrap_PoissonSolverOnCudaStruct_Tolerance_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_Tolerance_get", _wrap_PoissonSolverOnCudaStruct_Tolerance_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_TotalEnergy_set", _wrap_PoissonSolverOnCudaStruct_TotalEnergy_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_TotalEnergy_get", _wrap_PoissonSolverOnCudaStruct_TotalEnergy_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_AvrOverChecks_set", _wrap_PoissonSolverOnCudaStruct_AvrOverChecks_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_AvrOverChecks_get", _wrap_PoissonSolverOnCudaStruct_AvrOverChecks_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_TEavr_set", _wrap_PoissonSolverOnCudaStruct_TEavr_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_TEavr_get", _wrap_PoissonSolverOnCudaStruct_TEavr_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_stdevTE_set", _wrap_PoissonSolverOnCudaStruct_stdevTE_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_stdevTE_get", _wrap_PoissonSolverOnCudaStruct_stdevTE_get, METH_VARARGS, NULL},
	 { (char *)"new_PoissonSolverOnCudaStruct", _wrap_new_PoissonSolverOnCudaStruct, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonSolverOnCudaStruct", _wrap_delete_PoissonSolverOnCudaStruct, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaStruct_swigregister", PoissonSolverOnCudaStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_GS_set", _wrap_PSolverOnCudaStructDouble_GS_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_GS_get", _wrap_PSolverOnCudaStructDouble_GS_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_GridScale_set", _wrap_PSolverOnCudaStructDouble_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_GridScale_get", _wrap_PSolverOnCudaStructDouble_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_set", _wrap_PSolverOnCudaStructDouble_spltGSWBC_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_get", _wrap_PSolverOnCudaStructDouble_spltGSWBC_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_X_set", _wrap_PSolverOnCudaStructDouble_spltGSWBC_X_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_X_get", _wrap_PSolverOnCudaStructDouble_spltGSWBC_X_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_XY_set", _wrap_PSolverOnCudaStructDouble_spltGSWBC_XY_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_XY_get", _wrap_PSolverOnCudaStructDouble_spltGSWBC_XY_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_XYZ_set", _wrap_PSolverOnCudaStructDouble_spltGSWBC_XYZ_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_spltGSWBC_XYZ_get", _wrap_PSolverOnCudaStructDouble_spltGSWBC_XYZ_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_P_set", _wrap_PSolverOnCudaStructDouble_P_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_P_get", _wrap_PSolverOnCudaStructDouble_P_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_MaxIterations_set", _wrap_PSolverOnCudaStructDouble_MaxIterations_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_MaxIterations_get", _wrap_PSolverOnCudaStructDouble_MaxIterations_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Relaxation_set", _wrap_PSolverOnCudaStructDouble_Relaxation_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Relaxation_get", _wrap_PSolverOnCudaStructDouble_Relaxation_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Qnum_set", _wrap_PSolverOnCudaStructDouble_Qnum_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Qnum_get", _wrap_PSolverOnCudaStructDouble_Qnum_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Q_set", _wrap_PSolverOnCudaStructDouble_Q_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Q_get", _wrap_PSolverOnCudaStructDouble_Q_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Qmult_set", _wrap_PSolverOnCudaStructDouble_Qmult_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Qmult_get", _wrap_PSolverOnCudaStructDouble_Qmult_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Qpos_set", _wrap_PSolverOnCudaStructDouble_Qpos_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Qpos_get", _wrap_PSolverOnCudaStructDouble_Qpos_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_DielBordNum_set", _wrap_PSolverOnCudaStructDouble_DielBordNum_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_DielBordNum_get", _wrap_PSolverOnCudaStructDouble_DielBordNum_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_DielMult_set", _wrap_PSolverOnCudaStructDouble_DielMult_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_DielMult_get", _wrap_PSolverOnCudaStructDouble_DielMult_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_DielBordPos_set", _wrap_PSolverOnCudaStructDouble_DielBordPos_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_DielBordPos_get", _wrap_PSolverOnCudaStructDouble_DielBordPos_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_ConvergenceCheck_set", _wrap_PSolverOnCudaStructDouble_ConvergenceCheck_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_ConvergenceCheck_get", _wrap_PSolverOnCudaStructDouble_ConvergenceCheck_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Tolerance_set", _wrap_PSolverOnCudaStructDouble_Tolerance_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_Tolerance_get", _wrap_PSolverOnCudaStructDouble_Tolerance_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_TotalEnergy_set", _wrap_PSolverOnCudaStructDouble_TotalEnergy_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_TotalEnergy_get", _wrap_PSolverOnCudaStructDouble_TotalEnergy_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_AvrOverChecks_set", _wrap_PSolverOnCudaStructDouble_AvrOverChecks_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_AvrOverChecks_get", _wrap_PSolverOnCudaStructDouble_AvrOverChecks_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_TEavr_set", _wrap_PSolverOnCudaStructDouble_TEavr_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_TEavr_get", _wrap_PSolverOnCudaStructDouble_TEavr_get, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_stdevTE_set", _wrap_PSolverOnCudaStructDouble_stdevTE_set, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_stdevTE_get", _wrap_PSolverOnCudaStructDouble_stdevTE_get, METH_VARARGS, NULL},
	 { (char *)"new_PSolverOnCudaStructDouble", _wrap_new_PSolverOnCudaStructDouble, METH_VARARGS, NULL},
	 { (char *)"delete_PSolverOnCudaStructDouble", _wrap_delete_PSolverOnCudaStructDouble, METH_VARARGS, NULL},
	 { (char *)"PSolverOnCudaStructDouble_swigregister", PSolverOnCudaStructDouble_swigregister, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_GS_set", _wrap_PoissonSolverOnCuda4Struct_GS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_GS_get", _wrap_PoissonSolverOnCuda4Struct_GS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_ps4GS_set", _wrap_PoissonSolverOnCuda4Struct_ps4GS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_ps4GS_get", _wrap_PoissonSolverOnCuda4Struct_ps4GS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_GridScale_set", _wrap_PoissonSolverOnCuda4Struct_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_GridScale_get", _wrap_PoissonSolverOnCuda4Struct_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Pot_set", _wrap_PoissonSolverOnCuda4Struct_Pot_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Pot_get", _wrap_PoissonSolverOnCuda4Struct_Pot_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P000_set", _wrap_PoissonSolverOnCuda4Struct_P000_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P000_get", _wrap_PoissonSolverOnCuda4Struct_P000_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P100_set", _wrap_PoissonSolverOnCuda4Struct_P100_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P100_get", _wrap_PoissonSolverOnCuda4Struct_P100_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P200_set", _wrap_PoissonSolverOnCuda4Struct_P200_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P200_get", _wrap_PoissonSolverOnCuda4Struct_P200_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P300_set", _wrap_PoissonSolverOnCuda4Struct_P300_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P300_get", _wrap_PoissonSolverOnCuda4Struct_P300_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P010_set", _wrap_PoissonSolverOnCuda4Struct_P010_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P010_get", _wrap_PoissonSolverOnCuda4Struct_P010_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P110_set", _wrap_PoissonSolverOnCuda4Struct_P110_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P110_get", _wrap_PoissonSolverOnCuda4Struct_P110_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P210_set", _wrap_PoissonSolverOnCuda4Struct_P210_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P210_get", _wrap_PoissonSolverOnCuda4Struct_P210_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P310_set", _wrap_PoissonSolverOnCuda4Struct_P310_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P310_get", _wrap_PoissonSolverOnCuda4Struct_P310_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P020_set", _wrap_PoissonSolverOnCuda4Struct_P020_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P020_get", _wrap_PoissonSolverOnCuda4Struct_P020_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P120_set", _wrap_PoissonSolverOnCuda4Struct_P120_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P120_get", _wrap_PoissonSolverOnCuda4Struct_P120_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P220_set", _wrap_PoissonSolverOnCuda4Struct_P220_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P220_get", _wrap_PoissonSolverOnCuda4Struct_P220_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P320_set", _wrap_PoissonSolverOnCuda4Struct_P320_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P320_get", _wrap_PoissonSolverOnCuda4Struct_P320_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P030_set", _wrap_PoissonSolverOnCuda4Struct_P030_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P030_get", _wrap_PoissonSolverOnCuda4Struct_P030_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P130_set", _wrap_PoissonSolverOnCuda4Struct_P130_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P130_get", _wrap_PoissonSolverOnCuda4Struct_P130_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P230_set", _wrap_PoissonSolverOnCuda4Struct_P230_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P230_get", _wrap_PoissonSolverOnCuda4Struct_P230_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P330_set", _wrap_PoissonSolverOnCuda4Struct_P330_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P330_get", _wrap_PoissonSolverOnCuda4Struct_P330_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P001_set", _wrap_PoissonSolverOnCuda4Struct_P001_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P001_get", _wrap_PoissonSolverOnCuda4Struct_P001_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P101_set", _wrap_PoissonSolverOnCuda4Struct_P101_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P101_get", _wrap_PoissonSolverOnCuda4Struct_P101_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P201_set", _wrap_PoissonSolverOnCuda4Struct_P201_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P201_get", _wrap_PoissonSolverOnCuda4Struct_P201_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P301_set", _wrap_PoissonSolverOnCuda4Struct_P301_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P301_get", _wrap_PoissonSolverOnCuda4Struct_P301_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P011_set", _wrap_PoissonSolverOnCuda4Struct_P011_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P011_get", _wrap_PoissonSolverOnCuda4Struct_P011_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P111_set", _wrap_PoissonSolverOnCuda4Struct_P111_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P111_get", _wrap_PoissonSolverOnCuda4Struct_P111_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P211_set", _wrap_PoissonSolverOnCuda4Struct_P211_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P211_get", _wrap_PoissonSolverOnCuda4Struct_P211_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P311_set", _wrap_PoissonSolverOnCuda4Struct_P311_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P311_get", _wrap_PoissonSolverOnCuda4Struct_P311_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P021_set", _wrap_PoissonSolverOnCuda4Struct_P021_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P021_get", _wrap_PoissonSolverOnCuda4Struct_P021_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P121_set", _wrap_PoissonSolverOnCuda4Struct_P121_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P121_get", _wrap_PoissonSolverOnCuda4Struct_P121_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P221_set", _wrap_PoissonSolverOnCuda4Struct_P221_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P221_get", _wrap_PoissonSolverOnCuda4Struct_P221_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P321_set", _wrap_PoissonSolverOnCuda4Struct_P321_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P321_get", _wrap_PoissonSolverOnCuda4Struct_P321_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P031_set", _wrap_PoissonSolverOnCuda4Struct_P031_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P031_get", _wrap_PoissonSolverOnCuda4Struct_P031_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P131_set", _wrap_PoissonSolverOnCuda4Struct_P131_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P131_get", _wrap_PoissonSolverOnCuda4Struct_P131_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P231_set", _wrap_PoissonSolverOnCuda4Struct_P231_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P231_get", _wrap_PoissonSolverOnCuda4Struct_P231_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P331_set", _wrap_PoissonSolverOnCuda4Struct_P331_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P331_get", _wrap_PoissonSolverOnCuda4Struct_P331_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P002_set", _wrap_PoissonSolverOnCuda4Struct_P002_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P002_get", _wrap_PoissonSolverOnCuda4Struct_P002_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P102_set", _wrap_PoissonSolverOnCuda4Struct_P102_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P102_get", _wrap_PoissonSolverOnCuda4Struct_P102_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P202_set", _wrap_PoissonSolverOnCuda4Struct_P202_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P202_get", _wrap_PoissonSolverOnCuda4Struct_P202_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P302_set", _wrap_PoissonSolverOnCuda4Struct_P302_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P302_get", _wrap_PoissonSolverOnCuda4Struct_P302_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P012_set", _wrap_PoissonSolverOnCuda4Struct_P012_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P012_get", _wrap_PoissonSolverOnCuda4Struct_P012_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P112_set", _wrap_PoissonSolverOnCuda4Struct_P112_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P112_get", _wrap_PoissonSolverOnCuda4Struct_P112_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P212_set", _wrap_PoissonSolverOnCuda4Struct_P212_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P212_get", _wrap_PoissonSolverOnCuda4Struct_P212_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P312_set", _wrap_PoissonSolverOnCuda4Struct_P312_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P312_get", _wrap_PoissonSolverOnCuda4Struct_P312_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P022_set", _wrap_PoissonSolverOnCuda4Struct_P022_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P022_get", _wrap_PoissonSolverOnCuda4Struct_P022_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P122_set", _wrap_PoissonSolverOnCuda4Struct_P122_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P122_get", _wrap_PoissonSolverOnCuda4Struct_P122_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P222_set", _wrap_PoissonSolverOnCuda4Struct_P222_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P222_get", _wrap_PoissonSolverOnCuda4Struct_P222_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P322_set", _wrap_PoissonSolverOnCuda4Struct_P322_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P322_get", _wrap_PoissonSolverOnCuda4Struct_P322_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P032_set", _wrap_PoissonSolverOnCuda4Struct_P032_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P032_get", _wrap_PoissonSolverOnCuda4Struct_P032_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P132_set", _wrap_PoissonSolverOnCuda4Struct_P132_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P132_get", _wrap_PoissonSolverOnCuda4Struct_P132_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P232_set", _wrap_PoissonSolverOnCuda4Struct_P232_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P232_get", _wrap_PoissonSolverOnCuda4Struct_P232_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P332_set", _wrap_PoissonSolverOnCuda4Struct_P332_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P332_get", _wrap_PoissonSolverOnCuda4Struct_P332_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P003_set", _wrap_PoissonSolverOnCuda4Struct_P003_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P003_get", _wrap_PoissonSolverOnCuda4Struct_P003_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P103_set", _wrap_PoissonSolverOnCuda4Struct_P103_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P103_get", _wrap_PoissonSolverOnCuda4Struct_P103_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P203_set", _wrap_PoissonSolverOnCuda4Struct_P203_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P203_get", _wrap_PoissonSolverOnCuda4Struct_P203_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P303_set", _wrap_PoissonSolverOnCuda4Struct_P303_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P303_get", _wrap_PoissonSolverOnCuda4Struct_P303_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P013_set", _wrap_PoissonSolverOnCuda4Struct_P013_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P013_get", _wrap_PoissonSolverOnCuda4Struct_P013_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P113_set", _wrap_PoissonSolverOnCuda4Struct_P113_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P113_get", _wrap_PoissonSolverOnCuda4Struct_P113_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P213_set", _wrap_PoissonSolverOnCuda4Struct_P213_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P213_get", _wrap_PoissonSolverOnCuda4Struct_P213_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P313_set", _wrap_PoissonSolverOnCuda4Struct_P313_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P313_get", _wrap_PoissonSolverOnCuda4Struct_P313_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P023_set", _wrap_PoissonSolverOnCuda4Struct_P023_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P023_get", _wrap_PoissonSolverOnCuda4Struct_P023_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P123_set", _wrap_PoissonSolverOnCuda4Struct_P123_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P123_get", _wrap_PoissonSolverOnCuda4Struct_P123_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P223_set", _wrap_PoissonSolverOnCuda4Struct_P223_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P223_get", _wrap_PoissonSolverOnCuda4Struct_P223_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P323_set", _wrap_PoissonSolverOnCuda4Struct_P323_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P323_get", _wrap_PoissonSolverOnCuda4Struct_P323_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P033_set", _wrap_PoissonSolverOnCuda4Struct_P033_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P033_get", _wrap_PoissonSolverOnCuda4Struct_P033_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P133_set", _wrap_PoissonSolverOnCuda4Struct_P133_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P133_get", _wrap_PoissonSolverOnCuda4Struct_P133_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P233_set", _wrap_PoissonSolverOnCuda4Struct_P233_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P233_get", _wrap_PoissonSolverOnCuda4Struct_P233_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P333_set", _wrap_PoissonSolverOnCuda4Struct_P333_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_P333_get", _wrap_PoissonSolverOnCuda4Struct_P333_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_set", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_get", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_X_set", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_X_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_X_get", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_X_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_XY_set", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XY_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_XY_get", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XY_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_set", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_get", _wrap_PoissonSolverOnCuda4Struct_spltGSWBC_XYZ_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_MaxIter_set", _wrap_PoissonSolverOnCuda4Struct_MaxIter_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_MaxIter_get", _wrap_PoissonSolverOnCuda4Struct_MaxIter_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Rel_set", _wrap_PoissonSolverOnCuda4Struct_Rel_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Rel_get", _wrap_PoissonSolverOnCuda4Struct_Rel_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Tol_set", _wrap_PoissonSolverOnCuda4Struct_Tol_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Tol_get", _wrap_PoissonSolverOnCuda4Struct_Tol_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Qnum_set", _wrap_PoissonSolverOnCuda4Struct_Qnum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Qnum_get", _wrap_PoissonSolverOnCuda4Struct_Qnum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Q_set", _wrap_PoissonSolverOnCuda4Struct_Q_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Q_get", _wrap_PoissonSolverOnCuda4Struct_Q_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Qmult_set", _wrap_PoissonSolverOnCuda4Struct_Qmult_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Qmult_get", _wrap_PoissonSolverOnCuda4Struct_Qmult_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Qpos_set", _wrap_PoissonSolverOnCuda4Struct_Qpos_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_Qpos_get", _wrap_PoissonSolverOnCuda4Struct_Qpos_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_DielBordNum_set", _wrap_PoissonSolverOnCuda4Struct_DielBordNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_DielBordNum_get", _wrap_PoissonSolverOnCuda4Struct_DielBordNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_DielMult_set", _wrap_PoissonSolverOnCuda4Struct_DielMult_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_DielMult_get", _wrap_PoissonSolverOnCuda4Struct_DielMult_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_DielBordPos_set", _wrap_PoissonSolverOnCuda4Struct_DielBordPos_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_DielBordPos_get", _wrap_PoissonSolverOnCuda4Struct_DielBordPos_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_ConvergenceCheck_set", _wrap_PoissonSolverOnCuda4Struct_ConvergenceCheck_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_ConvergenceCheck_get", _wrap_PoissonSolverOnCuda4Struct_ConvergenceCheck_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_TotalEnergy_set", _wrap_PoissonSolverOnCuda4Struct_TotalEnergy_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_TotalEnergy_get", _wrap_PoissonSolverOnCuda4Struct_TotalEnergy_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_AvrOverChecks_set", _wrap_PoissonSolverOnCuda4Struct_AvrOverChecks_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_AvrOverChecks_get", _wrap_PoissonSolverOnCuda4Struct_AvrOverChecks_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_TEavr_set", _wrap_PoissonSolverOnCuda4Struct_TEavr_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_TEavr_get", _wrap_PoissonSolverOnCuda4Struct_TEavr_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_stdevTE_set", _wrap_PoissonSolverOnCuda4Struct_stdevTE_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_stdevTE_get", _wrap_PoissonSolverOnCuda4Struct_stdevTE_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_om1_set", _wrap_PoissonSolverOnCuda4Struct_om1_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_om1_get", _wrap_PoissonSolverOnCuda4Struct_om1_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_om2d6_set", _wrap_PoissonSolverOnCuda4Struct_om2d6_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_om2d6_get", _wrap_PoissonSolverOnCuda4Struct_om2d6_get, METH_VARARGS, NULL},
	 { (char *)"new_PoissonSolverOnCuda4Struct", _wrap_new_PoissonSolverOnCuda4Struct, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonSolverOnCuda4Struct", _wrap_delete_PoissonSolverOnCuda4Struct, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda4Struct_swigregister", PoissonSolverOnCuda4Struct_swigregister, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_GS_set", _wrap_PoissonSolverOnCuda1Struct_GS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_GS_get", _wrap_PoissonSolverOnCuda1Struct_GS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_GridScale_set", _wrap_PoissonSolverOnCuda1Struct_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_GridScale_get", _wrap_PoissonSolverOnCuda1Struct_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_Pot_set", _wrap_PoissonSolverOnCuda1Struct_Pot_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_Pot_get", _wrap_PoissonSolverOnCuda1Struct_Pot_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_PotCu_set", _wrap_PoissonSolverOnCuda1Struct_PotCu_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_PotCu_get", _wrap_PoissonSolverOnCuda1Struct_PotCu_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_set", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_get", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_X_set", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_X_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_X_get", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_X_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_XY_set", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XY_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_XY_get", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XY_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_set", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_get", _wrap_PoissonSolverOnCuda1Struct_spltGSWBC_XYZ_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_MaxIter_set", _wrap_PoissonSolverOnCuda1Struct_MaxIter_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_MaxIter_get", _wrap_PoissonSolverOnCuda1Struct_MaxIter_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_Rel_set", _wrap_PoissonSolverOnCuda1Struct_Rel_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_Rel_get", _wrap_PoissonSolverOnCuda1Struct_Rel_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_Tol_set", _wrap_PoissonSolverOnCuda1Struct_Tol_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_Tol_get", _wrap_PoissonSolverOnCuda1Struct_Tol_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_om1_set", _wrap_PoissonSolverOnCuda1Struct_om1_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_om1_get", _wrap_PoissonSolverOnCuda1Struct_om1_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_om2d6_set", _wrap_PoissonSolverOnCuda1Struct_om2d6_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_om2d6_get", _wrap_PoissonSolverOnCuda1Struct_om2d6_get, METH_VARARGS, NULL},
	 { (char *)"new_PoissonSolverOnCuda1Struct", _wrap_new_PoissonSolverOnCuda1Struct, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonSolverOnCuda1Struct", _wrap_delete_PoissonSolverOnCuda1Struct, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCuda1Struct_swigregister", PoissonSolverOnCuda1Struct_swigregister, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_X_set", _wrap_PoissonSolverOnCudaParamStruct_BS_X_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_X_get", _wrap_PoissonSolverOnCudaParamStruct_BS_X_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_Y_set", _wrap_PoissonSolverOnCudaParamStruct_BS_Y_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_Y_get", _wrap_PoissonSolverOnCudaParamStruct_BS_Y_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_Z_set", _wrap_PoissonSolverOnCudaParamStruct_BS_Z_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_Z_get", _wrap_PoissonSolverOnCudaParamStruct_BS_Z_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_XY_set", _wrap_PoissonSolverOnCudaParamStruct_BS_XY_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_XY_get", _wrap_PoissonSolverOnCudaParamStruct_BS_XY_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_XYZ_set", _wrap_PoissonSolverOnCudaParamStruct_BS_XYZ_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_BS_XYZ_get", _wrap_PoissonSolverOnCudaParamStruct_BS_XYZ_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_Qblock_set", _wrap_PoissonSolverOnCudaParamStruct_Qblock_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_Qblock_get", _wrap_PoissonSolverOnCudaParamStruct_Qblock_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_DBblock_set", _wrap_PoissonSolverOnCudaParamStruct_DBblock_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_DBblock_get", _wrap_PoissonSolverOnCudaParamStruct_DBblock_get, METH_VARARGS, NULL},
	 { (char *)"new_PoissonSolverOnCudaParamStruct", _wrap_new_PoissonSolverOnCudaParamStruct, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonSolverOnCudaParamStruct", _wrap_delete_PoissonSolverOnCudaParamStruct, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverOnCudaParamStruct_swigregister", PoissonSolverOnCudaParamStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_GS_X_set", _wrap_GOAtomsStruct_GS_X_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_GS_X_get", _wrap_GOAtomsStruct_GS_X_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_GS_Y_set", _wrap_GOAtomsStruct_GS_Y_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_GS_Y_get", _wrap_GOAtomsStruct_GS_Y_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_GS_Z_set", _wrap_GOAtomsStruct_GS_Z_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_GS_Z_get", _wrap_GOAtomsStruct_GS_Z_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Natoms_set", _wrap_GOAtomsStruct_Natoms_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Natoms_get", _wrap_GOAtomsStruct_Natoms_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_r_set", _wrap_GOAtomsStruct_r_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_r_get", _wrap_GOAtomsStruct_r_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_R_set", _wrap_GOAtomsStruct_R_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_R_get", _wrap_GOAtomsStruct_R_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_q_set", _wrap_GOAtomsStruct_q_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_q_get", _wrap_GOAtomsStruct_q_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Rsmoth_set", _wrap_GOAtomsStruct_Rsmoth_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Rsmoth_get", _wrap_GOAtomsStruct_Rsmoth_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_iDiel_set", _wrap_GOAtomsStruct_iDiel_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_iDiel_get", _wrap_GOAtomsStruct_iDiel_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_iDielBulk_set", _wrap_GOAtomsStruct_iDielBulk_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_iDielBulk_get", _wrap_GOAtomsStruct_iDielBulk_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Surf_set", _wrap_GOAtomsStruct_Surf_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Surf_get", _wrap_GOAtomsStruct_Surf_get, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_iVtmp_set", _wrap_GOAtomsStruct_iVtmp_set, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_iVtmp_get", _wrap_GOAtomsStruct_iVtmp_get, METH_VARARGS, NULL},
	 { (char *)"new_GOAtomsStruct", _wrap_new_GOAtomsStruct, METH_VARARGS, NULL},
	 { (char *)"delete_GOAtomsStruct", _wrap_delete_GOAtomsStruct, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_swigregister", GOAtomsStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Create", _wrap_GOAtomsStruct_Create, METH_VARARGS, NULL},
	 { (char *)"GOAtomsStruct_Delete", _wrap_GOAtomsStruct_Delete, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_borderPoints_set", _wrap_PoissonSolverDataW_borderPoints_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_borderPoints_get", _wrap_PoissonSolverDataW_borderPoints_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_om2InverseDielectricSum_set", _wrap_PoissonSolverDataW_om2InverseDielectricSum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_om2InverseDielectricSum_get", _wrap_PoissonSolverDataW_om2InverseDielectricSum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_typeOfBorderPoint_set", _wrap_PoissonSolverDataW_typeOfBorderPoint_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_typeOfBorderPoint_get", _wrap_PoissonSolverDataW_typeOfBorderPoint_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_maxIterations_set", _wrap_PoissonSolverDataW_maxIterations_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_maxIterations_get", _wrap_PoissonSolverDataW_maxIterations_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_convergence_set", _wrap_PoissonSolverDataW_convergence_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_convergence_get", _wrap_PoissonSolverDataW_convergence_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_relaxation_set", _wrap_PoissonSolverDataW_relaxation_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_relaxation_get", _wrap_PoissonSolverDataW_relaxation_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_hasDynamicCharges_set", _wrap_PoissonSolverDataW_hasDynamicCharges_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_hasDynamicCharges_get", _wrap_PoissonSolverDataW_hasDynamicCharges_get, METH_VARARGS, NULL},
	 { (char *)"new_PoissonSolverDataW", _wrap_new_PoissonSolverDataW, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonSolverDataW", _wrap_delete_PoissonSolverDataW, METH_VARARGS, NULL},
	 { (char *)"PoissonSolverDataW_swigregister", PoissonSolverDataW_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PoissonSolver", _wrap_new_PoissonSolver, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonSolver", _wrap_delete_PoissonSolver, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_InitZero", _wrap_PoissonSolver_InitZero, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Clear", _wrap_PoissonSolver_Clear, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_solver_set", _wrap_PoissonSolver_solver_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_solver_get", _wrap_PoissonSolver_solver_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_MaxIterations_set", _wrap_PoissonSolver_MaxIterations_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_MaxIterations_get", _wrap_PoissonSolver_MaxIterations_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_MinIterations_set", _wrap_PoissonSolver_MinIterations_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_MinIterations_get", _wrap_PoissonSolver_MinIterations_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ConvergenceCheck_set", _wrap_PoissonSolver_ConvergenceCheck_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ConvergenceCheck_get", _wrap_PoissonSolver_ConvergenceCheck_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Convergence_set", _wrap_PoissonSolver_Convergence_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Convergence_get", _wrap_PoissonSolver_Convergence_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Relaxation_set", _wrap_PoissonSolver_Relaxation_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Relaxation_get", _wrap_PoissonSolver_Relaxation_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobMod_set", _wrap_PoissonSolver_QmobMod_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobMod_get", _wrap_PoissonSolver_QmobMod_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_verbose_set", _wrap_PoissonSolver_verbose_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_verbose_get", _wrap_PoissonSolver_verbose_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_totalChange_set", _wrap_PoissonSolver_totalChange_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_totalChange_get", _wrap_PoissonSolver_totalChange_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_relativeChange_set", _wrap_PoissonSolver_relativeChange_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_relativeChange_get", _wrap_PoissonSolver_relativeChange_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_totalEnergy_set", _wrap_PoissonSolver_totalEnergy_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_totalEnergy_get", _wrap_PoissonSolver_totalEnergy_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_totalEnergyInd_set", _wrap_PoissonSolver_totalEnergyInd_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_totalEnergyInd_get", _wrap_PoissonSolver_totalEnergyInd_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ConvFac_set", _wrap_PoissonSolver_ConvFac_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ConvFac_get", _wrap_PoissonSolver_ConvFac_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_WayToCalcSystemEnergy_set", _wrap_PoissonSolver_WayToCalcSystemEnergy_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_WayToCalcSystemEnergy_get", _wrap_PoissonSolver_WayToCalcSystemEnergy_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ConvFacMaxHistory_set", _wrap_PoissonSolver_ConvFacMaxHistory_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ConvFacMaxHistory_get", _wrap_PoissonSolver_ConvFacMaxHistory_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_World_set", _wrap_PoissonSolver_World_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_World_get", _wrap_PoissonSolver_World_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_NoSingularNum_set", _wrap_PoissonSolver_NoSingularNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_NoSingularNum_get", _wrap_PoissonSolver_NoSingularNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexNoSingular_set", _wrap_PoissonSolver_IndexNoSingular_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexNoSingular_get", _wrap_PoissonSolver_IndexNoSingular_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_SingularNum_set", _wrap_PoissonSolver_SingularNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_SingularNum_get", _wrap_PoissonSolver_SingularNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexSingular_set", _wrap_PoissonSolver_IndexSingular_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexSingular_get", _wrap_PoissonSolver_IndexSingular_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXS_set", _wrap_PoissonSolver_dielectricXS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXS_get", _wrap_PoissonSolver_dielectricXS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYS_set", _wrap_PoissonSolver_dielectricYS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYS_get", _wrap_PoissonSolver_dielectricYS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZS_set", _wrap_PoissonSolver_dielectricZS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZS_get", _wrap_PoissonSolver_dielectricZS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZSSUM_set", _wrap_PoissonSolver_dielectricZSSUM_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZSSUM_get", _wrap_PoissonSolver_dielectricZSSUM_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmS_set", _wrap_PoissonSolver_dielectricXmS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmS_get", _wrap_PoissonSolver_dielectricXmS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmS_set", _wrap_PoissonSolver_dielectricYmS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmS_get", _wrap_PoissonSolver_dielectricYmS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmS_set", _wrap_PoissonSolver_dielectricZmS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmS_get", _wrap_PoissonSolver_dielectricZmS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QstS_set", _wrap_PoissonSolver_QstS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QstS_get", _wrap_PoissonSolver_QstS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_PhiSingular_set", _wrap_PoissonSolver_PhiSingular_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_PhiSingular_get", _wrap_PoissonSolver_PhiSingular_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_DielBoarderNum_set", _wrap_PoissonSolver_DielBoarderNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_DielBoarderNum_get", _wrap_PoissonSolver_DielBoarderNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexDielBoarder_set", _wrap_PoissonSolver_IndexDielBoarder_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexDielBoarder_get", _wrap_PoissonSolver_IndexDielBoarder_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXDB_set", _wrap_PoissonSolver_dielectricXDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXDB_get", _wrap_PoissonSolver_dielectricXDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYDB_set", _wrap_PoissonSolver_dielectricYDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYDB_get", _wrap_PoissonSolver_dielectricYDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZDB_set", _wrap_PoissonSolver_dielectricZDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZDB_get", _wrap_PoissonSolver_dielectricZDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZDBSUM_set", _wrap_PoissonSolver_dielectricZDBSUM_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZDBSUM_get", _wrap_PoissonSolver_dielectricZDBSUM_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmDB_set", _wrap_PoissonSolver_dielectricXmDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmDB_get", _wrap_PoissonSolver_dielectricXmDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmDB_set", _wrap_PoissonSolver_dielectricYmDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmDB_get", _wrap_PoissonSolver_dielectricYmDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmDB_set", _wrap_PoissonSolver_dielectricZmDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmDB_get", _wrap_PoissonSolver_dielectricZmDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ChargeNum_set", _wrap_PoissonSolver_ChargeNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ChargeNum_get", _wrap_PoissonSolver_ChargeNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexCharge_set", _wrap_PoissonSolver_IndexCharge_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexCharge_get", _wrap_PoissonSolver_IndexCharge_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricCh_set", _wrap_PoissonSolver_dielectricCh_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricCh_get", _wrap_PoissonSolver_dielectricCh_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Qst_set", _wrap_PoissonSolver_Qst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Qst_get", _wrap_PoissonSolver_Qst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_PhiCharge_set", _wrap_PoissonSolver_PhiCharge_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_PhiCharge_get", _wrap_PoissonSolver_PhiCharge_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ChargeSum_set", _wrap_PoissonSolver_ChargeSum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ChargeSum_get", _wrap_PoissonSolver_ChargeSum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobNum_set", _wrap_PoissonSolver_QmobNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobNum_get", _wrap_PoissonSolver_QmobNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexQmob_set", _wrap_PoissonSolver_IndexQmob_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexQmob_get", _wrap_PoissonSolver_IndexQmob_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Qmob_set", _wrap_PoissonSolver_Qmob_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Qmob_get", _wrap_PoissonSolver_Qmob_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricChMob_set", _wrap_PoissonSolver_dielectricChMob_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricChMob_get", _wrap_PoissonSolver_dielectricChMob_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcVolume_set", _wrap_PoissonSolver_CalcVolume_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcVolume_get", _wrap_PoissonSolver_CalcVolume_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarderNum_set", _wrap_PoissonSolver_QmobDielBoarderNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarderNum_get", _wrap_PoissonSolver_QmobDielBoarderNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexQmobDielBoarder_set", _wrap_PoissonSolver_IndexQmobDielBoarder_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexQmobDielBoarder_get", _wrap_PoissonSolver_IndexQmobDielBoarder_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarder_set", _wrap_PoissonSolver_QmobDielBoarder_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarder_get", _wrap_PoissonSolver_QmobDielBoarder_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXQmobDB_set", _wrap_PoissonSolver_dielectricXQmobDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXQmobDB_get", _wrap_PoissonSolver_dielectricXQmobDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYQmobDB_set", _wrap_PoissonSolver_dielectricYQmobDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYQmobDB_get", _wrap_PoissonSolver_dielectricYQmobDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDB_set", _wrap_PoissonSolver_dielectricZQmobDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDB_get", _wrap_PoissonSolver_dielectricZQmobDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmQmobDB_set", _wrap_PoissonSolver_dielectricXmQmobDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmQmobDB_get", _wrap_PoissonSolver_dielectricXmQmobDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmQmobDB_set", _wrap_PoissonSolver_dielectricYmQmobDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmQmobDB_get", _wrap_PoissonSolver_dielectricYmQmobDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmQmobDB_set", _wrap_PoissonSolver_dielectricZmQmobDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmQmobDB_get", _wrap_PoissonSolver_dielectricZmQmobDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDBSUM_set", _wrap_PoissonSolver_dielectricZQmobDBSUM_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDBSUM_get", _wrap_PoissonSolver_dielectricZQmobDBSUM_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarderQstNum_set", _wrap_PoissonSolver_QmobDielBoarderQstNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarderQstNum_get", _wrap_PoissonSolver_QmobDielBoarderQstNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexQmobDielBoarderQst_set", _wrap_PoissonSolver_IndexQmobDielBoarderQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_IndexQmobDielBoarderQst_get", _wrap_PoissonSolver_IndexQmobDielBoarderQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarderQst_set", _wrap_PoissonSolver_QmobDielBoarderQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QmobDielBoarderQst_get", _wrap_PoissonSolver_QmobDielBoarderQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QstQmobDielBoarderQst_set", _wrap_PoissonSolver_QstQmobDielBoarderQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_QstQmobDielBoarderQst_get", _wrap_PoissonSolver_QstQmobDielBoarderQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXQmobDBQst_set", _wrap_PoissonSolver_dielectricXQmobDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXQmobDBQst_get", _wrap_PoissonSolver_dielectricXQmobDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYQmobDBQst_set", _wrap_PoissonSolver_dielectricYQmobDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYQmobDBQst_get", _wrap_PoissonSolver_dielectricYQmobDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDBQst_set", _wrap_PoissonSolver_dielectricZQmobDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDBQst_get", _wrap_PoissonSolver_dielectricZQmobDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmQmobDBQst_set", _wrap_PoissonSolver_dielectricXmQmobDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricXmQmobDBQst_get", _wrap_PoissonSolver_dielectricXmQmobDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmQmobDBQst_set", _wrap_PoissonSolver_dielectricYmQmobDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricYmQmobDBQst_get", _wrap_PoissonSolver_dielectricYmQmobDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmQmobDBQst_set", _wrap_PoissonSolver_dielectricZmQmobDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZmQmobDBQst_get", _wrap_PoissonSolver_dielectricZmQmobDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDBSUMQst_set", _wrap_PoissonSolver_dielectricZQmobDBSUMQst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_dielectricZQmobDBSUMQst_get", _wrap_PoissonSolver_dielectricZQmobDBSUMQst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_poissonSolverData_set", _wrap_PoissonSolver_poissonSolverData_set, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_poissonSolverData_get", _wrap_PoissonSolver_poissonSolverData_get, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_LoadParamFromPyDict", _wrap_PoissonSolver_LoadParamFromPyDict, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_SetContWorld", _wrap_PoissonSolver_SetContWorld, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_InitSolver", _wrap_PoissonSolver_InitSolver, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_InitSolverNIB", _wrap_PoissonSolver_InitSolverNIB, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_InitSolverW", _wrap_PoissonSolver_InitSolverW, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_InitSolverAD", _wrap_PoissonSolver_InitSolverAD, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_SetQmobForPNP", _wrap_PoissonSolver_SetQmobForPNP, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_SetQmobFromConcentration", _wrap_PoissonSolver_SetQmobFromConcentration, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_SetQmobFromConcentrationDouble", _wrap_PoissonSolver_SetQmobFromConcentrationDouble, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_Solve", _wrap_PoissonSolver_Solve, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_PoissonSolverNIB", _wrap_PoissonSolver_PoissonSolverNIB, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_PoissonSolverAD", _wrap_PoissonSolver_PoissonSolverAD, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_PoissonSolverW", _wrap_PoissonSolver_PoissonSolverW, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergy", _wrap_PoissonSolver_CalcSystemEnergy, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergyFloat", _wrap_PoissonSolver_CalcSystemEnergyFloat, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergyDouble", _wrap_PoissonSolver_CalcSystemEnergyDouble, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergyLongDouble", _wrap_PoissonSolver_CalcSystemEnergyLongDouble, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergyAnalizer", _wrap_PoissonSolver_CalcSystemEnergyAnalizer, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergy0", _wrap_PoissonSolver_CalcSystemEnergy0, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergy1", _wrap_PoissonSolver_CalcSystemEnergy1, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergy3", _wrap_PoissonSolver_CalcSystemEnergy3, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergyMaxPhiChange", _wrap_PoissonSolver_CalcSystemEnergyMaxPhiChange, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalcSystemEnergyStdDevPhi", _wrap_PoissonSolver_CalcSystemEnergyStdDevPhi, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_CalculateEnergyPAD", _wrap_PoissonSolver_CalculateEnergyPAD, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ShowParameters", _wrap_PoissonSolver_ShowParameters, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_ShowProperties", _wrap_PoissonSolver_ShowProperties, METH_VARARGS, NULL},
	 { (char *)"PoissonSolver_swigregister", PoissonSolver_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PoissonBoltzmannSolver", _wrap_new_PoissonBoltzmannSolver, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonBoltzmannSolver", _wrap_delete_PoissonBoltzmannSolver, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_InitZero", _wrap_PoissonBoltzmannSolver_InitZero, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Clear", _wrap_PoissonBoltzmannSolver_Clear, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_solver_set", _wrap_PoissonBoltzmannSolver_solver_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_solver_get", _wrap_PoissonBoltzmannSolver_solver_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_MaxIterationsLPB_set", _wrap_PoissonBoltzmannSolver_MaxIterationsLPB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_MaxIterationsLPB_get", _wrap_PoissonBoltzmannSolver_MaxIterationsLPB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_MaxIterationsNPB_set", _wrap_PoissonBoltzmannSolver_MaxIterationsNPB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_MaxIterationsNPB_get", _wrap_PoissonBoltzmannSolver_MaxIterationsNPB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ConvergenceCheck_set", _wrap_PoissonBoltzmannSolver_ConvergenceCheck_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ConvergenceCheck_get", _wrap_PoissonBoltzmannSolver_ConvergenceCheck_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Convergence_set", _wrap_PoissonBoltzmannSolver_Convergence_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Convergence_get", _wrap_PoissonBoltzmannSolver_Convergence_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Relaxation_set", _wrap_PoissonBoltzmannSolver_Relaxation_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Relaxation_get", _wrap_PoissonBoltzmannSolver_Relaxation_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_verbose_set", _wrap_PoissonBoltzmannSolver_verbose_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_verbose_get", _wrap_PoissonBoltzmannSolver_verbose_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_totalChange_set", _wrap_PoissonBoltzmannSolver_totalChange_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_totalChange_get", _wrap_PoissonBoltzmannSolver_totalChange_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_relativeChange_set", _wrap_PoissonBoltzmannSolver_relativeChange_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_relativeChange_get", _wrap_PoissonBoltzmannSolver_relativeChange_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_totalEnergy_set", _wrap_PoissonBoltzmannSolver_totalEnergy_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_totalEnergy_get", _wrap_PoissonBoltzmannSolver_totalEnergy_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_totalEnergyInd_set", _wrap_PoissonBoltzmannSolver_totalEnergyInd_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_totalEnergyInd_get", _wrap_PoissonBoltzmannSolver_totalEnergyInd_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ConvFac_set", _wrap_PoissonBoltzmannSolver_ConvFac_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ConvFac_get", _wrap_PoissonBoltzmannSolver_ConvFac_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_m_ContWorld_set", _wrap_PoissonBoltzmannSolver_m_ContWorld_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_m_ContWorld_get", _wrap_PoissonBoltzmannSolver_m_ContWorld_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_NoSingularNum_set", _wrap_PoissonBoltzmannSolver_NoSingularNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_NoSingularNum_get", _wrap_PoissonBoltzmannSolver_NoSingularNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexNoSingular_set", _wrap_PoissonBoltzmannSolver_IndexNoSingular_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexNoSingular_get", _wrap_PoissonBoltzmannSolver_IndexNoSingular_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_SingularNum_set", _wrap_PoissonBoltzmannSolver_SingularNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_SingularNum_get", _wrap_PoissonBoltzmannSolver_SingularNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexSingular_set", _wrap_PoissonBoltzmannSolver_IndexSingular_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexSingular_get", _wrap_PoissonBoltzmannSolver_IndexSingular_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXS_set", _wrap_PoissonBoltzmannSolver_dielectricXS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXS_get", _wrap_PoissonBoltzmannSolver_dielectricXS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYS_set", _wrap_PoissonBoltzmannSolver_dielectricYS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYS_get", _wrap_PoissonBoltzmannSolver_dielectricYS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZS_set", _wrap_PoissonBoltzmannSolver_dielectricZS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZS_get", _wrap_PoissonBoltzmannSolver_dielectricZS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZSSUM_set", _wrap_PoissonBoltzmannSolver_dielectricZSSUM_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZSSUM_get", _wrap_PoissonBoltzmannSolver_dielectricZSSUM_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXmS_set", _wrap_PoissonBoltzmannSolver_dielectricXmS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXmS_get", _wrap_PoissonBoltzmannSolver_dielectricXmS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYmS_set", _wrap_PoissonBoltzmannSolver_dielectricYmS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYmS_get", _wrap_PoissonBoltzmannSolver_dielectricYmS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZmS_set", _wrap_PoissonBoltzmannSolver_dielectricZmS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZmS_get", _wrap_PoissonBoltzmannSolver_dielectricZmS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_QstS_set", _wrap_PoissonBoltzmannSolver_QstS_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_QstS_get", _wrap_PoissonBoltzmannSolver_QstS_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_PhiSingular_set", _wrap_PoissonBoltzmannSolver_PhiSingular_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_PhiSingular_get", _wrap_PoissonBoltzmannSolver_PhiSingular_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_DielBoarderNum_set", _wrap_PoissonBoltzmannSolver_DielBoarderNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_DielBoarderNum_get", _wrap_PoissonBoltzmannSolver_DielBoarderNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexDielBoarder_set", _wrap_PoissonBoltzmannSolver_IndexDielBoarder_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexDielBoarder_get", _wrap_PoissonBoltzmannSolver_IndexDielBoarder_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXDB_set", _wrap_PoissonBoltzmannSolver_dielectricXDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXDB_get", _wrap_PoissonBoltzmannSolver_dielectricXDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYDB_set", _wrap_PoissonBoltzmannSolver_dielectricYDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYDB_get", _wrap_PoissonBoltzmannSolver_dielectricYDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZDB_set", _wrap_PoissonBoltzmannSolver_dielectricZDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZDB_get", _wrap_PoissonBoltzmannSolver_dielectricZDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZDBSUM_set", _wrap_PoissonBoltzmannSolver_dielectricZDBSUM_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZDBSUM_get", _wrap_PoissonBoltzmannSolver_dielectricZDBSUM_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXmDB_set", _wrap_PoissonBoltzmannSolver_dielectricXmDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricXmDB_get", _wrap_PoissonBoltzmannSolver_dielectricXmDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYmDB_set", _wrap_PoissonBoltzmannSolver_dielectricYmDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricYmDB_get", _wrap_PoissonBoltzmannSolver_dielectricYmDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZmDB_set", _wrap_PoissonBoltzmannSolver_dielectricZmDB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricZmDB_get", _wrap_PoissonBoltzmannSolver_dielectricZmDB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ChargeNum_set", _wrap_PoissonBoltzmannSolver_ChargeNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ChargeNum_get", _wrap_PoissonBoltzmannSolver_ChargeNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexCharge_set", _wrap_PoissonBoltzmannSolver_IndexCharge_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexCharge_get", _wrap_PoissonBoltzmannSolver_IndexCharge_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricCh_set", _wrap_PoissonBoltzmannSolver_dielectricCh_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_dielectricCh_get", _wrap_PoissonBoltzmannSolver_dielectricCh_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Qst_set", _wrap_PoissonBoltzmannSolver_Qst_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Qst_get", _wrap_PoissonBoltzmannSolver_Qst_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_PhiCharge_set", _wrap_PoissonBoltzmannSolver_PhiCharge_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_PhiCharge_get", _wrap_PoissonBoltzmannSolver_PhiCharge_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_PBZoneNum_set", _wrap_PoissonBoltzmannSolver_PBZoneNum_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_PBZoneNum_get", _wrap_PoissonBoltzmannSolver_PBZoneNum_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexPBZone_set", _wrap_PoissonBoltzmannSolver_IndexPBZone_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IndexPBZone_get", _wrap_PoissonBoltzmannSolver_IndexPBZone_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om2d6LPB_set", _wrap_PoissonBoltzmannSolver_om2d6LPB_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om2d6LPB_get", _wrap_PoissonBoltzmannSolver_om2d6LPB_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IonicStrength_set", _wrap_PoissonBoltzmannSolver_IonicStrength_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_IonicStrength_get", _wrap_PoissonBoltzmannSolver_IonicStrength_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_X_set", _wrap_PoissonBoltzmannSolver_GS_X_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_X_get", _wrap_PoissonBoltzmannSolver_GS_X_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_Y_set", _wrap_PoissonBoltzmannSolver_GS_Y_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_Y_get", _wrap_PoissonBoltzmannSolver_GS_Y_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_Z_set", _wrap_PoissonBoltzmannSolver_GS_Z_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_Z_get", _wrap_PoissonBoltzmannSolver_GS_Z_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_XY_set", _wrap_PoissonBoltzmannSolver_GS_XY_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_XY_get", _wrap_PoissonBoltzmannSolver_GS_XY_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_XYZ_set", _wrap_PoissonBoltzmannSolver_GS_XYZ_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GS_XYZ_get", _wrap_PoissonBoltzmannSolver_GS_XYZ_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GridScale_set", _wrap_PoissonBoltzmannSolver_GridScale_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GridScale_get", _wrap_PoissonBoltzmannSolver_GridScale_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_potential_set", _wrap_PoissonBoltzmannSolver_potential_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_potential_get", _wrap_PoissonBoltzmannSolver_potential_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om2_set", _wrap_PoissonBoltzmannSolver_om2_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om2_get", _wrap_PoissonBoltzmannSolver_om2_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om1_set", _wrap_PoissonBoltzmannSolver_om1_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om1_get", _wrap_PoissonBoltzmannSolver_om1_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om2d6_set", _wrap_PoissonBoltzmannSolver_om2d6_set, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_om2d6_get", _wrap_PoissonBoltzmannSolver_om2d6_get, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_GuessNumberOfIteration", _wrap_PoissonBoltzmannSolver_GuessNumberOfIteration, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_SetRelaxation", _wrap_PoissonBoltzmannSolver_SetRelaxation, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_SetContWorld", _wrap_PoissonBoltzmannSolver_SetContWorld, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_InitSolver", _wrap_PoissonBoltzmannSolver_InitSolver, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_InitSolverNIB", _wrap_PoissonBoltzmannSolver_InitSolverNIB, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_Solve", _wrap_PoissonBoltzmannSolver_Solve, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_LinearPBSolverNIB", _wrap_PoissonBoltzmannSolver_LinearPBSolverNIB, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_NonlinearPBSolverNIB", _wrap_PoissonBoltzmannSolver_NonlinearPBSolverNIB, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_CalcSystemEnergy", _wrap_PoissonBoltzmannSolver_CalcSystemEnergy, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_CalcSystemEnergyStdDevPhi", _wrap_PoissonBoltzmannSolver_CalcSystemEnergyStdDevPhi, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ShowParameters", _wrap_PoissonBoltzmannSolver_ShowParameters, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_ShowProperties", _wrap_PoissonBoltzmannSolver_ShowProperties, METH_VARARGS, NULL},
	 { (char *)"PoissonBoltzmannSolver_swigregister", PoissonBoltzmannSolver_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PoissonNernstPlanckSolver", _wrap_new_PoissonNernstPlanckSolver, METH_VARARGS, NULL},
	 { (char *)"delete_PoissonNernstPlanckSolver", _wrap_delete_PoissonNernstPlanckSolver, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_InitZero", _wrap_PoissonNernstPlanckSolver_InitZero, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Clear", _wrap_PoissonNernstPlanckSolver_Clear, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_MaxIterations_set", _wrap_PoissonNernstPlanckSolver_MaxIterations_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_MaxIterations_get", _wrap_PoissonNernstPlanckSolver_MaxIterations_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_ConvergenceCheck_set", _wrap_PoissonNernstPlanckSolver_ConvergenceCheck_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_ConvergenceCheck_get", _wrap_PoissonNernstPlanckSolver_ConvergenceCheck_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_tolerance_set", _wrap_PoissonNernstPlanckSolver_tolerance_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_tolerance_get", _wrap_PoissonNernstPlanckSolver_tolerance_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_currentDimension_set", _wrap_PoissonNernstPlanckSolver_currentDimension_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_currentDimension_get", _wrap_PoissonNernstPlanckSolver_currentDimension_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_verbose_set", _wrap_PoissonNernstPlanckSolver_verbose_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_verbose_get", _wrap_PoissonNernstPlanckSolver_verbose_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_PMFWeightMode_set", _wrap_PoissonNernstPlanckSolver_PMFWeightMode_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_PMFWeightMode_get", _wrap_PoissonNernstPlanckSolver_PMFWeightMode_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_PMFWeightModeStr_set", _wrap_PoissonNernstPlanckSolver_PMFWeightModeStr_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_PMFWeightModeStr_get", _wrap_PoissonNernstPlanckSolver_PMFWeightModeStr_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Itot_set", _wrap_PoissonNernstPlanckSolver_Itot_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Itot_get", _wrap_PoissonNernstPlanckSolver_Itot_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Ipos_set", _wrap_PoissonNernstPlanckSolver_Ipos_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Ipos_get", _wrap_PoissonNernstPlanckSolver_Ipos_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Ineg_set", _wrap_PoissonNernstPlanckSolver_Ineg_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Ineg_get", _wrap_PoissonNernstPlanckSolver_Ineg_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_ItotErr_set", _wrap_PoissonNernstPlanckSolver_ItotErr_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_ItotErr_get", _wrap_PoissonNernstPlanckSolver_ItotErr_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_IposErr_set", _wrap_PoissonNernstPlanckSolver_IposErr_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_IposErr_get", _wrap_PoissonNernstPlanckSolver_IposErr_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_InegErr_set", _wrap_PoissonNernstPlanckSolver_InegErr_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_InegErr_get", _wrap_PoissonNernstPlanckSolver_InegErr_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_positiveCurrentProfile_set", _wrap_PoissonNernstPlanckSolver_positiveCurrentProfile_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_positiveCurrentProfile_get", _wrap_PoissonNernstPlanckSolver_positiveCurrentProfile_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_negativeCurrentProfile_set", _wrap_PoissonNernstPlanckSolver_negativeCurrentProfile_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_negativeCurrentProfile_get", _wrap_PoissonNernstPlanckSolver_negativeCurrentProfile_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_bLimitCurrentCalc_set", _wrap_PoissonNernstPlanckSolver_bLimitCurrentCalc_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_bLimitCurrentCalc_get", _wrap_PoissonNernstPlanckSolver_bLimitCurrentCalc_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_LimitCurrentCalcZ_set", _wrap_PoissonNernstPlanckSolver_LimitCurrentCalcZ_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_LimitCurrentCalcZ_get", _wrap_PoissonNernstPlanckSolver_LimitCurrentCalcZ_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_SaveMemory_set", _wrap_PoissonNernstPlanckSolver_SaveMemory_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_SaveMemory_get", _wrap_PoissonNernstPlanckSolver_SaveMemory_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_bDouble_set", _wrap_PoissonNernstPlanckSolver_bDouble_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_bDouble_get", _wrap_PoissonNernstPlanckSolver_bDouble_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_World_set", _wrap_PoissonNernstPlanckSolver_World_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_World_get", _wrap_PoissonNernstPlanckSolver_World_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Poisson_set", _wrap_PoissonNernstPlanckSolver_Poisson_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Poisson_get", _wrap_PoissonNernstPlanckSolver_Poisson_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_NernstPlank_set", _wrap_PoissonNernstPlanckSolver_NernstPlank_set, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_NernstPlank_get", _wrap_PoissonNernstPlanckSolver_NernstPlank_get, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_LoadParamFromPyDict", _wrap_PoissonNernstPlanckSolver_LoadParamFromPyDict, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_SetContWorld", _wrap_PoissonNernstPlanckSolver_SetContWorld, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_ShowParameters", _wrap_PoissonNernstPlanckSolver_ShowParameters, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_ShowProperties", _wrap_PoissonNernstPlanckSolver_ShowProperties, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_InitSolver", _wrap_PoissonNernstPlanckSolver_InitSolver, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_Solve", _wrap_PoissonNernstPlanckSolver_Solve, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_SolveSingle", _wrap_PoissonNernstPlanckSolver_SolveSingle, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_SolveDouble", _wrap_PoissonNernstPlanckSolver_SolveDouble, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_CalcCartI", _wrap_PoissonNernstPlanckSolver_CalcCartI, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_CalcIinout", _wrap_PoissonNernstPlanckSolver_CalcIinout, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_CalcAvrI", _wrap_PoissonNernstPlanckSolver_CalcAvrI, METH_VARARGS, NULL},
	 { (char *)"PoissonNernstPlanckSolver_swigregister", PoissonNernstPlanckSolver_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PNPUtil", _wrap_new_PNPUtil, METH_VARARGS, NULL},
	 { (char *)"delete_PNPUtil", _wrap_delete_PNPUtil, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveLargePMFfromPNP", _wrap_PNPUtil_RemoveLargePMFfromPNP, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveSmallCfromPNP", _wrap_PNPUtil_RemoveSmallCfromPNP, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveSmallCfromPNPNearDiffBoarder", _wrap_PNPUtil_RemoveSmallCfromPNPNearDiffBoarder, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveLargedPMFfromPNP", _wrap_PNPUtil_RemoveLargedPMFfromPNP, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveLargedPMFandLargePMFfromPNP", _wrap_PNPUtil_RemoveLargedPMFandLargePMFfromPNP, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveLargedPMFandLargePMFfromPNPOld", _wrap_PNPUtil_RemoveLargedPMFandLargePMFfromPNPOld, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveCavitiesAtDiffusionMap", _wrap_PNPUtil_RemoveCavitiesAtDiffusionMap, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_ScaleDiffusionInTheChannel", _wrap_PNPUtil_ScaleDiffusionInTheChannel, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_ConvertPBLJresultsToDynamicCharge", _wrap_PNPUtil_ConvertPBLJresultsToDynamicCharge, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_SetInternalCtoZero", _wrap_PNPUtil_SetInternalCtoZero, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_SetCtoZeroWhereDZero", _wrap_PNPUtil_SetCtoZeroWhereDZero, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_SetDzeroAtEps", _wrap_PNPUtil_SetDzeroAtEps, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_SetDZeroWithIndex", _wrap_PNPUtil_SetDZeroWithIndex, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveQfromNI", _wrap_PNPUtil_RemoveQfromNI, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria", _wrap_PNPUtil_RemoveNodesFromPNPBasedOnNPCriteria, METH_VARARGS, NULL},
	 { (char *)"PNPUtil_swigregister", PNPUtil_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_NPMaskBuilder", _wrap_new_NPMaskBuilder, METH_VARARGS, NULL},
	 { (char *)"delete_NPMaskBuilder", _wrap_delete_NPMaskBuilder, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_CmdNPMaskBuilder", _wrap_NPMaskBuilder_CmdNPMaskBuilder, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_InitNPMask", _wrap_NPMaskBuilder_InitNPMask, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_SetToNIDiffusion", _wrap_NPMaskBuilder_SetToNIDiffusion, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_RemoveTubeRegion", _wrap_NPMaskBuilder_RemoveTubeRegion, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_RemoveHighC", _wrap_NPMaskBuilder_RemoveHighC, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_ReadNPMask", _wrap_NPMaskBuilder_ReadNPMask, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_WriteNPMask", _wrap_NPMaskBuilder_WriteNPMask, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_m_ContWorld_set", _wrap_NPMaskBuilder_m_ContWorld_set, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_m_ContWorld_get", _wrap_NPMaskBuilder_m_ContWorld_get, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_NPMask_set", _wrap_NPMaskBuilder_NPMask_set, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_NPMask_get", _wrap_NPMaskBuilder_NPMask_get, METH_VARARGS, NULL},
	 { (char *)"NPMaskBuilder_swigregister", NPMaskBuilder_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IAVCalc", _wrap_new_IAVCalc, METH_VARARGS, NULL},
	 { (char *)"delete_IAVCalc", _wrap_delete_IAVCalc, METH_VARARGS, NULL},
	 { (char *)"IAVCalc_CmdIAVCalcDict", _wrap_IAVCalc_CmdIAVCalcDict, METH_VARARGS, NULL},
	 { (char *)"IAVCalc_swigregister", IAVCalc_swigregister, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_X_set", _wrap_PartialWorldForSAS_GS_X_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_X_get", _wrap_PartialWorldForSAS_GS_X_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_Y_set", _wrap_PartialWorldForSAS_GS_Y_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_Y_get", _wrap_PartialWorldForSAS_GS_Y_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_Z_set", _wrap_PartialWorldForSAS_GS_Z_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_Z_get", _wrap_PartialWorldForSAS_GS_Z_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_XY_set", _wrap_PartialWorldForSAS_GS_XY_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_GS_XY_get", _wrap_PartialWorldForSAS_GS_XY_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_locGS_Z_set", _wrap_PartialWorldForSAS_locGS_Z_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_locGS_Z_get", _wrap_PartialWorldForSAS_locGS_Z_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_locR0_Z_set", _wrap_PartialWorldForSAS_locR0_Z_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_locR0_Z_get", _wrap_PartialWorldForSAS_locR0_Z_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_Surf_set", _wrap_PartialWorldForSAS_Surf_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_Surf_get", _wrap_PartialWorldForSAS_Surf_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_Field_set", _wrap_PartialWorldForSAS_Field_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_Field_get", _wrap_PartialWorldForSAS_Field_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_surf_points_set", _wrap_PartialWorldForSAS_surf_points_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_surf_points_get", _wrap_PartialWorldForSAS_surf_points_get, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_Nsurf_points_set", _wrap_PartialWorldForSAS_Nsurf_points_set, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_Nsurf_points_get", _wrap_PartialWorldForSAS_Nsurf_points_get, METH_VARARGS, NULL},
	 { (char *)"new_PartialWorldForSAS", _wrap_new_PartialWorldForSAS, METH_VARARGS, NULL},
	 { (char *)"delete_PartialWorldForSAS", _wrap_delete_PartialWorldForSAS, METH_VARARGS, NULL},
	 { (char *)"PartialWorldForSAS_swigregister", PartialWorldForSAS_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GenericGeometricalObject", _wrap_new_GenericGeometricalObject, METH_VARARGS, NULL},
	 { (char *)"delete_GenericGeometricalObject", _wrap_delete_GenericGeometricalObject, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_Copy", _wrap_GenericGeometricalObject_Copy, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_InitZero", _wrap_GenericGeometricalObject_InitZero, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_Clear", _wrap_GenericGeometricalObject_Clear, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_Epsilon_set", _wrap_GenericGeometricalObject_Epsilon_set, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_Epsilon_get", _wrap_GenericGeometricalObject_Epsilon_get, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_NIonsTypes_set", _wrap_GenericGeometricalObject_NIonsTypes_set, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_NIonsTypes_get", _wrap_GenericGeometricalObject_NIonsTypes_get, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_IonsD_set", _wrap_GenericGeometricalObject_IonsD_set, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_IonsD_get", _wrap_GenericGeometricalObject_IonsD_get, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_C_set", _wrap_GenericGeometricalObject_C_set, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_C_get", _wrap_GenericGeometricalObject_C_get, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_setPar", _wrap_GenericGeometricalObject_setPar, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_Print", _wrap_GenericGeometricalObject_Print, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_cxxSetParam", _wrap_GenericGeometricalObject_cxxSetParam, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_ChangeUnits", _wrap_GenericGeometricalObject_ChangeUnits, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_BuildPreMaps", _wrap_GenericGeometricalObject_BuildPreMaps, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_BuildDistMapsFromAtomsCenter", _wrap_GenericGeometricalObject_BuildDistMapsFromAtomsCenter, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_BuildDistMaps", _wrap_GenericGeometricalObject_BuildDistMaps, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_BuildPreMapsMemLim", _wrap_GenericGeometricalObject_BuildPreMapsMemLim, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_BuildPreMapsCharges", _wrap_GenericGeometricalObject_BuildPreMapsCharges, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_BuildLJRepultionMap", _wrap_GenericGeometricalObject_BuildLJRepultionMap, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_SetBoundaryCondition", _wrap_GenericGeometricalObject_SetBoundaryCondition, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_RotateGGO", _wrap_GenericGeometricalObject_RotateGGO, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_RotateVecDouble", _wrap_GenericGeometricalObject_RotateVecDouble, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_RotateVecFloat", _wrap_GenericGeometricalObject_RotateVecFloat, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_ID_GridBegin_set", _wrap_GenericGeometricalObject_ID_GridBegin_set, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_ID_GridBegin_get", _wrap_GenericGeometricalObject_ID_GridBegin_get, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_ID_GridEnd_set", _wrap_GenericGeometricalObject_ID_GridEnd_set, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_ID_GridEnd_get", _wrap_GenericGeometricalObject_ID_GridEnd_get, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_SetGridIDs", _wrap_GenericGeometricalObject_SetGridIDs, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_GetDistToSurf", _wrap_GenericGeometricalObject_GetDistToSurf, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_GetDistSQToUnitCenter", _wrap_GenericGeometricalObject_GetDistSQToUnitCenter, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_GetClosestSurfPoint", _wrap_GenericGeometricalObject_GetClosestSurfPoint, METH_VARARGS, NULL},
	 { (char *)"GenericGeometricalObject_swigregister", GenericGeometricalObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GOAtoms", _wrap_new_GOAtoms, METH_VARARGS, NULL},
	 { (char *)"delete_GOAtoms", _wrap_delete_GOAtoms, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_Copy", _wrap_GOAtoms_Copy, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_InitZero", _wrap_GOAtoms_InitZero, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_Clear", _wrap_GOAtoms_Clear, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_Print", _wrap_GOAtoms_Print, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_NAtoms_set", _wrap_GOAtoms_NAtoms_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_NAtoms_get", _wrap_GOAtoms_NAtoms_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_x_set", _wrap_GOAtoms_r_x_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_x_get", _wrap_GOAtoms_r_x_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_y_set", _wrap_GOAtoms_r_y_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_y_get", _wrap_GOAtoms_r_y_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_z_set", _wrap_GOAtoms_r_z_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_z_get", _wrap_GOAtoms_r_z_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_set", _wrap_GOAtoms_r_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_r_get", _wrap_GOAtoms_r_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_R_set", _wrap_GOAtoms_R_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_R_get", _wrap_GOAtoms_R_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_q_set", _wrap_GOAtoms_q_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_q_get", _wrap_GOAtoms_q_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_HalfSigma_set", _wrap_GOAtoms_HalfSigma_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_HalfSigma_get", _wrap_GOAtoms_HalfSigma_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_FourEpsilon_set", _wrap_GOAtoms_FourEpsilon_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_FourEpsilon_get", _wrap_GOAtoms_FourEpsilon_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LJA_set", _wrap_GOAtoms_LJA_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LJA_get", _wrap_GOAtoms_LJA_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LJB_set", _wrap_GOAtoms_LJB_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LJB_get", _wrap_GOAtoms_LJB_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SRA_set", _wrap_GOAtoms_SRA_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SRA_get", _wrap_GOAtoms_SRA_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SRN_set", _wrap_GOAtoms_SRN_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SRN_get", _wrap_GOAtoms_SRN_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_IER_set", _wrap_GOAtoms_IER_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_IER_get", _wrap_GOAtoms_IER_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_DefineChargeDist", _wrap_GOAtoms_DefineChargeDist, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_ChargeDist_set", _wrap_GOAtoms_ChargeDist_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_ChargeDist_get", _wrap_GOAtoms_ChargeDist_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_ChargeDistN_set", _wrap_GOAtoms_ChargeDistN_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_ChargeDistN_get", _wrap_GOAtoms_ChargeDistN_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_Offset_set", _wrap_GOAtoms_Offset_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_Offset_get", _wrap_GOAtoms_Offset_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_MakePreRoll_set", _wrap_GOAtoms_MakePreRoll_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_MakePreRoll_get", _wrap_GOAtoms_MakePreRoll_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_setPar", _wrap_GOAtoms_setPar, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SavePQR", _wrap_GOAtoms_SavePQR, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadPQR", _wrap_GOAtoms_LoadPQR, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadPQRonlyQR", _wrap_GOAtoms_LoadPQRonlyQR, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadPRQ", _wrap_GOAtoms_LoadPRQ, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadDelphiStyle", _wrap_GOAtoms_LoadDelphiStyle, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadPRE", _wrap_GOAtoms_LoadPRE, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadPAB", _wrap_GOAtoms_LoadPAB, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadIER", _wrap_GOAtoms_LoadIER, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadPAN", _wrap_GOAtoms_LoadPAN, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_LoadAtomicParam", _wrap_GOAtoms_LoadAtomicParam, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_IAVMethod_set", _wrap_GOAtoms_IAVMethod_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_IAVMethod_get", _wrap_GOAtoms_IAVMethod_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SetCenterToOrigin", _wrap_GOAtoms_SetCenterToOrigin, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SetCenterToOriginWithRad", _wrap_GOAtoms_SetCenterToOriginWithRad, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_ChangeUnits", _wrap_GOAtoms_ChangeUnits, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_BuildPreMaps", _wrap_GOAtoms_BuildPreMaps, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_BuildPreMapsMemLim", _wrap_GOAtoms_BuildPreMapsMemLim, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_BuildDistMapsFromAtomsCenter", _wrap_GOAtoms_BuildDistMapsFromAtomsCenter, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_BuildPreMapsCharges", _wrap_GOAtoms_BuildPreMapsCharges, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_BuildLJRepultionMap", _wrap_GOAtoms_BuildLJRepultionMap, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SetBoundaryCondition", _wrap_GOAtoms_SetBoundaryCondition, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SetBoundaryConditionOnCuda", _wrap_GOAtoms_SetBoundaryConditionOnCuda, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_RotateGGO", _wrap_GOAtoms_RotateGGO, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_SetGridIDs", _wrap_GOAtoms_SetGridIDs, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_GetDistToSurf", _wrap_GOAtoms_GetDistToSurf, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_GetDistSQToUnitCenter", _wrap_GOAtoms_GetDistSQToUnitCenter, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_GetClosestSurfPoint", _wrap_GOAtoms_GetClosestSurfPoint, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_ChargeDistStrs_set", _wrap_GOAtoms_ChargeDistStrs_set, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_ChargeDistStrs_get", _wrap_GOAtoms_ChargeDistStrs_get, METH_VARARGS, NULL},
	 { (char *)"GOAtoms_swigregister", GOAtoms_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GOTube", _wrap_new_GOTube, METH_VARARGS, NULL},
	 { (char *)"delete_GOTube", _wrap_delete_GOTube, METH_VARARGS, NULL},
	 { (char *)"GOTube_InitZero", _wrap_GOTube_InitZero, METH_VARARGS, NULL},
	 { (char *)"GOTube_Clear", _wrap_GOTube_Clear, METH_VARARGS, NULL},
	 { (char *)"GOTube_Print", _wrap_GOTube_Print, METH_VARARGS, NULL},
	 { (char *)"GOTube_XY_set", _wrap_GOTube_XY_set, METH_VARARGS, NULL},
	 { (char *)"GOTube_XY_get", _wrap_GOTube_XY_get, METH_VARARGS, NULL},
	 { (char *)"GOTube_Z_set", _wrap_GOTube_Z_set, METH_VARARGS, NULL},
	 { (char *)"GOTube_Z_get", _wrap_GOTube_Z_get, METH_VARARGS, NULL},
	 { (char *)"GOTube_R_set", _wrap_GOTube_R_set, METH_VARARGS, NULL},
	 { (char *)"GOTube_R_get", _wrap_GOTube_R_get, METH_VARARGS, NULL},
	 { (char *)"GOTube_HalfSigma_set", _wrap_GOTube_HalfSigma_set, METH_VARARGS, NULL},
	 { (char *)"GOTube_HalfSigma_get", _wrap_GOTube_HalfSigma_get, METH_VARARGS, NULL},
	 { (char *)"GOTube_FourEpsilon_set", _wrap_GOTube_FourEpsilon_set, METH_VARARGS, NULL},
	 { (char *)"GOTube_FourEpsilon_get", _wrap_GOTube_FourEpsilon_get, METH_VARARGS, NULL},
	 { (char *)"GOTube_setTubeParam", _wrap_GOTube_setTubeParam, METH_VARARGS, NULL},
	 { (char *)"GOTube_ChangeUnits", _wrap_GOTube_ChangeUnits, METH_VARARGS, NULL},
	 { (char *)"GOTube_BuildPreMaps", _wrap_GOTube_BuildPreMaps, METH_VARARGS, NULL},
	 { (char *)"GOTube_BuildPreMapsMemLim", _wrap_GOTube_BuildPreMapsMemLim, METH_VARARGS, NULL},
	 { (char *)"GOTube_BuildDistMapsFromAtomsCenter", _wrap_GOTube_BuildDistMapsFromAtomsCenter, METH_VARARGS, NULL},
	 { (char *)"GOTube_BuildLJRepultionMap", _wrap_GOTube_BuildLJRepultionMap, METH_VARARGS, NULL},
	 { (char *)"GOTube_RotateGGO", _wrap_GOTube_RotateGGO, METH_VARARGS, NULL},
	 { (char *)"GOTube_GetDistToSurf", _wrap_GOTube_GetDistToSurf, METH_VARARGS, NULL},
	 { (char *)"GOTube_GetClosestSurfPoint", _wrap_GOTube_GetClosestSurfPoint, METH_VARARGS, NULL},
	 { (char *)"GOTube_swigregister", GOTube_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GODonut", _wrap_new_GODonut, METH_VARARGS, NULL},
	 { (char *)"delete_GODonut", _wrap_delete_GODonut, METH_VARARGS, NULL},
	 { (char *)"GODonut_InitZero", _wrap_GODonut_InitZero, METH_VARARGS, NULL},
	 { (char *)"GODonut_Clear", _wrap_GODonut_Clear, METH_VARARGS, NULL},
	 { (char *)"GODonut_R_set", _wrap_GODonut_R_set, METH_VARARGS, NULL},
	 { (char *)"GODonut_R_get", _wrap_GODonut_R_get, METH_VARARGS, NULL},
	 { (char *)"GODonut_r_set", _wrap_GODonut_r_set, METH_VARARGS, NULL},
	 { (char *)"GODonut_r_get", _wrap_GODonut_r_get, METH_VARARGS, NULL},
	 { (char *)"GODonut_X_set", _wrap_GODonut_X_set, METH_VARARGS, NULL},
	 { (char *)"GODonut_X_get", _wrap_GODonut_X_get, METH_VARARGS, NULL},
	 { (char *)"GODonut_Y_set", _wrap_GODonut_Y_set, METH_VARARGS, NULL},
	 { (char *)"GODonut_Y_get", _wrap_GODonut_Y_get, METH_VARARGS, NULL},
	 { (char *)"GODonut_Z_set", _wrap_GODonut_Z_set, METH_VARARGS, NULL},
	 { (char *)"GODonut_Z_get", _wrap_GODonut_Z_get, METH_VARARGS, NULL},
	 { (char *)"GODonut_ChangeUnits", _wrap_GODonut_ChangeUnits, METH_VARARGS, NULL},
	 { (char *)"GODonut_BuildPreMaps", _wrap_GODonut_BuildPreMaps, METH_VARARGS, NULL},
	 { (char *)"GODonut_BuildPreMapsMemLim", _wrap_GODonut_BuildPreMapsMemLim, METH_VARARGS, NULL},
	 { (char *)"GODonut_swigregister", GODonut_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GOMembraneZ", _wrap_new_GOMembraneZ, METH_VARARGS, NULL},
	 { (char *)"delete_GOMembraneZ", _wrap_delete_GOMembraneZ, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_InitZero", _wrap_GOMembraneZ_InitZero, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_Clear", _wrap_GOMembraneZ_Clear, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_Print", _wrap_GOMembraneZ_Print, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_Z_set", _wrap_GOMembraneZ_Z_set, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_Z_get", _wrap_GOMembraneZ_Z_get, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_ChangeUnits", _wrap_GOMembraneZ_ChangeUnits, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_BuildPreMaps", _wrap_GOMembraneZ_BuildPreMaps, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_BuildPreMapsMemLim", _wrap_GOMembraneZ_BuildPreMapsMemLim, METH_VARARGS, NULL},
	 { (char *)"GOMembraneZ_swigregister", GOMembraneZ_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BuildWorldNI", _wrap_new_BuildWorldNI, METH_VARARGS, NULL},
	 { (char *)"delete_BuildWorldNI", _wrap_delete_BuildWorldNI, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_InitZero", _wrap_BuildWorldNI_InitZero, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Clear", _wrap_BuildWorldNI_Clear, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Print", _wrap_BuildWorldNI_Print, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setEpsilonValues", _wrap_BuildWorldNI_setEpsilonValues, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setDiffusionValues", _wrap_BuildWorldNI_setDiffusionValues, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_getEpsilonValueIndex", _wrap_BuildWorldNI_getEpsilonValueIndex, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_getDiffusionValueIndex", _wrap_BuildWorldNI_getDiffusionValueIndex, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setIonsR", _wrap_BuildWorldNI_setIonsR, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setRwat", _wrap_BuildWorldNI_setRwat, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setRsmooth", _wrap_BuildWorldNI_setRsmooth, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setDiffusionMode", _wrap_BuildWorldNI_setDiffusionMode, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setExpDifPar", _wrap_BuildWorldNI_setExpDifPar, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setMakeDielectricMap", _wrap_BuildWorldNI_setMakeDielectricMap, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setMakeChargeMap", _wrap_BuildWorldNI_setMakeChargeMap, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setMakeDiffusionMap", _wrap_BuildWorldNI_setMakeDiffusionMap, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setMakeConcentrationMap", _wrap_BuildWorldNI_setMakeConcentrationMap, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setMakeSoftRepultionMap", _wrap_BuildWorldNI_setMakeSoftRepultionMap, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_setBulkPar", _wrap_BuildWorldNI_setBulkPar, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_cxxSetBulkParam", _wrap_BuildWorldNI_cxxSetBulkParam, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_cxxSetIonsRadii", _wrap_BuildWorldNI_cxxSetIonsRadii, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_addGGO", _wrap_BuildWorldNI_addGGO, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Rwat_set", _wrap_BuildWorldNI_Rwat_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Rwat_get", _wrap_BuildWorldNI_Rwat_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Rsmooth_set", _wrap_BuildWorldNI_Rsmooth_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Rsmooth_get", _wrap_BuildWorldNI_Rsmooth_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BoundaryCondition_set", _wrap_BuildWorldNI_BoundaryCondition_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BoundaryCondition_get", _wrap_BuildWorldNI_BoundaryCondition_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BldBCatPlane_set", _wrap_BuildWorldNI_BldBCatPlane_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BldBCatPlane_get", _wrap_BuildWorldNI_BldBCatPlane_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_NIonsTypes_set", _wrap_BuildWorldNI_NIonsTypes_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_NIonsTypes_get", _wrap_BuildWorldNI_NIonsTypes_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsR_set", _wrap_BuildWorldNI_IonsR_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsR_get", _wrap_BuildWorldNI_IonsR_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsHalfSigma_set", _wrap_BuildWorldNI_IonsHalfSigma_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsHalfSigma_get", _wrap_BuildWorldNI_IonsHalfSigma_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsFourEpsilon_set", _wrap_BuildWorldNI_IonsFourEpsilon_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsFourEpsilon_get", _wrap_BuildWorldNI_IonsFourEpsilon_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsLJA_set", _wrap_BuildWorldNI_IonsLJA_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsLJA_get", _wrap_BuildWorldNI_IonsLJA_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsLJB_set", _wrap_BuildWorldNI_IonsLJB_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_IonsLJB_get", _wrap_BuildWorldNI_IonsLJB_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DielNum_set", _wrap_BuildWorldNI_DielNum_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DielNum_get", _wrap_BuildWorldNI_DielNum_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DielConst_set", _wrap_BuildWorldNI_DielConst_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DielConst_get", _wrap_BuildWorldNI_DielConst_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffusionNum_set", _wrap_BuildWorldNI_DiffusionNum_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffusionNum_get", _wrap_BuildWorldNI_DiffusionNum_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffusionConst_set", _wrap_BuildWorldNI_DiffusionConst_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffusionConst_get", _wrap_BuildWorldNI_DiffusionConst_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffusionMode_set", _wrap_BuildWorldNI_DiffusionMode_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffusionMode_get", _wrap_BuildWorldNI_DiffusionMode_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Kexpdiff_set", _wrap_BuildWorldNI_Kexpdiff_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Kexpdiff_get", _wrap_BuildWorldNI_Kexpdiff_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Rexpdiff_set", _wrap_BuildWorldNI_Rexpdiff_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_Rexpdiff_get", _wrap_BuildWorldNI_Rexpdiff_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffRmaxAffect_set", _wrap_BuildWorldNI_DiffRmaxAffect_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_DiffRmaxAffect_get", _wrap_BuildWorldNI_DiffRmaxAffect_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_iDzero_set", _wrap_BuildWorldNI_iDzero_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_iDzero_get", _wrap_BuildWorldNI_iDzero_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_SaveDistMap_set", _wrap_BuildWorldNI_SaveDistMap_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_SaveDistMap_get", _wrap_BuildWorldNI_SaveDistMap_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeDielectricMap_set", _wrap_BuildWorldNI_MakeDielectricMap_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeDielectricMap_get", _wrap_BuildWorldNI_MakeDielectricMap_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeDiffusionMap_set", _wrap_BuildWorldNI_MakeDiffusionMap_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeDiffusionMap_get", _wrap_BuildWorldNI_MakeDiffusionMap_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeConcentrationMap_set", _wrap_BuildWorldNI_MakeConcentrationMap_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeConcentrationMap_get", _wrap_BuildWorldNI_MakeConcentrationMap_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeChargeMap_set", _wrap_BuildWorldNI_MakeChargeMap_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeChargeMap_get", _wrap_BuildWorldNI_MakeChargeMap_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeLJRepultion_set", _wrap_BuildWorldNI_MakeLJRepultion_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MakeLJRepultion_get", _wrap_BuildWorldNI_MakeLJRepultion_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_AddElPotToPMF_set", _wrap_BuildWorldNI_AddElPotToPMF_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_AddElPotToPMF_get", _wrap_BuildWorldNI_AddElPotToPMF_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemovingCavities_set", _wrap_BuildWorldNI_RemovingCavities_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemovingCavities_get", _wrap_BuildWorldNI_RemovingCavities_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemovingCavitiesOnDielectricMap_set", _wrap_BuildWorldNI_RemovingCavitiesOnDielectricMap_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemovingCavitiesOnDielectricMap_get", _wrap_BuildWorldNI_RemovingCavitiesOnDielectricMap_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemCavOnDielFillWith_set", _wrap_BuildWorldNI_RemCavOnDielFillWith_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemCavOnDielFillWith_get", _wrap_BuildWorldNI_RemCavOnDielFillWith_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemCavOnDielWhere2Look_set", _wrap_BuildWorldNI_RemCavOnDielWhere2Look_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemCavOnDielWhere2Look_get", _wrap_BuildWorldNI_RemCavOnDielWhere2Look_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_LimitVlj_set", _wrap_BuildWorldNI_LimitVlj_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_LimitVlj_get", _wrap_BuildWorldNI_LimitVlj_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BoundaryStr_set", _wrap_BuildWorldNI_BoundaryStr_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BoundaryStr_get", _wrap_BuildWorldNI_BoundaryStr_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BuildUsingGPU_set", _wrap_BuildWorldNI_BuildUsingGPU_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BuildUsingGPU_get", _wrap_BuildWorldNI_BuildUsingGPU_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MemoryLimitOnOneArray_set", _wrap_BuildWorldNI_MemoryLimitOnOneArray_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_MemoryLimitOnOneArray_get", _wrap_BuildWorldNI_MemoryLimitOnOneArray_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_ChangeUnits", _wrap_BuildWorldNI_ChangeUnits, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_cxxBuildContWorld", _wrap_BuildWorldNI_cxxBuildContWorld, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BuildDielMapsOnCuda", _wrap_BuildWorldNI_BuildDielMapsOnCuda, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BuildDiffExp", _wrap_BuildWorldNI_BuildDiffExp, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_BuildDiffExpOld", _wrap_BuildWorldNI_BuildDiffExpOld, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_FinalazeSEV", _wrap_BuildWorldNI_FinalazeSEV, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_FinalazeSEV2", _wrap_BuildWorldNI_FinalazeSEV2, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_FinalazeSEVDiff", _wrap_BuildWorldNI_FinalazeSEVDiff, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemovingCavitiesList", _wrap_BuildWorldNI_RemovingCavitiesList, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_RemovingCavitiesAtValues", _wrap_BuildWorldNI_RemovingCavitiesAtValues, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_StdStrDiffusionModes_set", _wrap_BuildWorldNI_StdStrDiffusionModes_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_StdStrDiffusionModes_get", _wrap_BuildWorldNI_StdStrDiffusionModes_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldNI_swigregister", BuildWorldNI_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BuildWorldEu", _wrap_new_BuildWorldEu, METH_VARARGS, NULL},
	 { (char *)"delete_BuildWorldEu", _wrap_delete_BuildWorldEu, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_InitZero", _wrap_BuildWorldEu_InitZero, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_Clear", _wrap_BuildWorldEu_Clear, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_cxxBuildContWorld", _wrap_BuildWorldEu_cxxBuildContWorld, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_BuildPreMapsAtoms", _wrap_BuildWorldEu_BuildPreMapsAtoms, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_BuildPreMapsTube", _wrap_BuildWorldEu_BuildPreMapsTube, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_FinalazeSEV", _wrap_BuildWorldEu_FinalazeSEV, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_FinalazeSEV2", _wrap_BuildWorldEu_FinalazeSEV2, METH_VARARGS, NULL},
	 { (char *)"BuildWorldEu_swigregister", BuildWorldEu_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BuildWorldCmp", _wrap_new_BuildWorldCmp, METH_VARARGS, NULL},
	 { (char *)"delete_BuildWorldCmp", _wrap_delete_BuildWorldCmp, METH_VARARGS, NULL},
	 { (char *)"BuildWorldCmp_InitZero", _wrap_BuildWorldCmp_InitZero, METH_VARARGS, NULL},
	 { (char *)"BuildWorldCmp_Clear", _wrap_BuildWorldCmp_Clear, METH_VARARGS, NULL},
	 { (char *)"BuildWorldCmp_cxxBuildContWorld", _wrap_BuildWorldCmp_cxxBuildContWorld, METH_VARARGS, NULL},
	 { (char *)"BuildWorldCmp_BuildPreMapsAtoms", _wrap_BuildWorldCmp_BuildPreMapsAtoms, METH_VARARGS, NULL},
	 { (char *)"BuildWorldCmp_FinalazeSEV", _wrap_BuildWorldCmp_FinalazeSEV, METH_VARARGS, NULL},
	 { (char *)"BuildWorldCmp_swigregister", BuildWorldCmp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BuildWorldScaled", _wrap_new_BuildWorldScaled, METH_VARARGS, NULL},
	 { (char *)"delete_BuildWorldScaled", _wrap_delete_BuildWorldScaled, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_InitZero", _wrap_BuildWorldScaled_InitZero, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_Clear", _wrap_BuildWorldScaled_Clear, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_BuildContWorld", _wrap_BuildWorldScaled_BuildContWorld, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_BuildContWorldCharges", _wrap_BuildWorldScaled_BuildContWorldCharges, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_BuildContWorldDielMaps", _wrap_BuildWorldScaled_BuildContWorldDielMaps, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_Rwat_set", _wrap_BuildWorldScaled_Rwat_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_Rwat_get", _wrap_BuildWorldScaled_Rwat_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_DielNum_set", _wrap_BuildWorldScaled_DielNum_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_DielNum_get", _wrap_BuildWorldScaled_DielNum_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_DielConst_set", _wrap_BuildWorldScaled_DielConst_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_DielConst_get", _wrap_BuildWorldScaled_DielConst_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_BoundaryCondition_set", _wrap_BuildWorldScaled_BoundaryCondition_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_BoundaryCondition_get", _wrap_BuildWorldScaled_BoundaryCondition_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_BulkParam_set", _wrap_BuildWorldScaled_BulkParam_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_BulkParam_get", _wrap_BuildWorldScaled_BulkParam_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_GOElms_set", _wrap_BuildWorldScaled_GOElms_set, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_GOElms_get", _wrap_BuildWorldScaled_GOElms_get, METH_VARARGS, NULL},
	 { (char *)"BuildWorldScaled_swigregister", BuildWorldScaled_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DielDiffMapsPatcher", _wrap_new_DielDiffMapsPatcher, METH_VARARGS, NULL},
	 { (char *)"delete_DielDiffMapsPatcher", _wrap_delete_DielDiffMapsPatcher, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_m_ContWorld_set", _wrap_DielDiffMapsPatcher_m_ContWorld_set, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_m_ContWorld_get", _wrap_DielDiffMapsPatcher_m_ContWorld_get, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_eps_set", _wrap_DielDiffMapsPatcher_eps_set, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_eps_get", _wrap_DielDiffMapsPatcher_eps_get, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_GetIntDielMaps", _wrap_DielDiffMapsPatcher_GetIntDielMaps, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_PushIntDielMaps", _wrap_DielDiffMapsPatcher_PushIntDielMaps, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_PatchDielMaps", _wrap_DielDiffMapsPatcher_PatchDielMaps, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_refDiff_set", _wrap_DielDiffMapsPatcher_refDiff_set, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_refDiff_get", _wrap_DielDiffMapsPatcher_refDiff_get, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_InitNewDiff", _wrap_DielDiffMapsPatcher_InitNewDiff, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_DelRefDiff", _wrap_DielDiffMapsPatcher_DelRefDiff, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_PatchDiffMaps", _wrap_DielDiffMapsPatcher_PatchDiffMaps, METH_VARARGS, NULL},
	 { (char *)"DielDiffMapsPatcher_swigregister", DielDiffMapsPatcher_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PBwithLJSolver", _wrap_new_PBwithLJSolver, METH_VARARGS, NULL},
	 { (char *)"delete_PBwithLJSolver", _wrap_delete_PBwithLJSolver, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_InitZero", _wrap_PBwithLJSolver_InitZero, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Clear", _wrap_PBwithLJSolver_Clear, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_solver_set", _wrap_PBwithLJSolver_solver_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_solver_get", _wrap_PBwithLJSolver_solver_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_MaxIterations_set", _wrap_PBwithLJSolver_MaxIterations_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_MaxIterations_get", _wrap_PBwithLJSolver_MaxIterations_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ConvergenceCheck_set", _wrap_PBwithLJSolver_ConvergenceCheck_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ConvergenceCheck_get", _wrap_PBwithLJSolver_ConvergenceCheck_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Convergence_set", _wrap_PBwithLJSolver_Convergence_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Convergence_get", _wrap_PBwithLJSolver_Convergence_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Relaxation_set", _wrap_PBwithLJSolver_Relaxation_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Relaxation_get", _wrap_PBwithLJSolver_Relaxation_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_verbose_set", _wrap_PBwithLJSolver_verbose_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_verbose_get", _wrap_PBwithLJSolver_verbose_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_bPBExpAll_set", _wrap_PBwithLJSolver_bPBExpAll_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_bPBExpAll_get", _wrap_PBwithLJSolver_bPBExpAll_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_bAnalyseExplosion_set", _wrap_PBwithLJSolver_bAnalyseExplosion_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_bAnalyseExplosion_get", _wrap_PBwithLJSolver_bAnalyseExplosion_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_totalChange_set", _wrap_PBwithLJSolver_totalChange_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_totalChange_get", _wrap_PBwithLJSolver_totalChange_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_relativeChange_set", _wrap_PBwithLJSolver_relativeChange_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_relativeChange_get", _wrap_PBwithLJSolver_relativeChange_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_totalEnergy_set", _wrap_PBwithLJSolver_totalEnergy_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_totalEnergy_get", _wrap_PBwithLJSolver_totalEnergy_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_totalEnergyInd_set", _wrap_PBwithLJSolver_totalEnergyInd_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_totalEnergyInd_get", _wrap_PBwithLJSolver_totalEnergyInd_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ConvFac_set", _wrap_PBwithLJSolver_ConvFac_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ConvFac_get", _wrap_PBwithLJSolver_ConvFac_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_m_ContWorld_set", _wrap_PBwithLJSolver_m_ContWorld_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_m_ContWorld_get", _wrap_PBwithLJSolver_m_ContWorld_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_NoSingularNum_set", _wrap_PBwithLJSolver_NoSingularNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_NoSingularNum_get", _wrap_PBwithLJSolver_NoSingularNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexNoSingular_set", _wrap_PBwithLJSolver_IndexNoSingular_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexNoSingular_get", _wrap_PBwithLJSolver_IndexNoSingular_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_SingularNum_set", _wrap_PBwithLJSolver_SingularNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_SingularNum_get", _wrap_PBwithLJSolver_SingularNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexSingular_set", _wrap_PBwithLJSolver_IndexSingular_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexSingular_get", _wrap_PBwithLJSolver_IndexSingular_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXS_set", _wrap_PBwithLJSolver_dielectricXS_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXS_get", _wrap_PBwithLJSolver_dielectricXS_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYS_set", _wrap_PBwithLJSolver_dielectricYS_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYS_get", _wrap_PBwithLJSolver_dielectricYS_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZS_set", _wrap_PBwithLJSolver_dielectricZS_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZS_get", _wrap_PBwithLJSolver_dielectricZS_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZSSUM_set", _wrap_PBwithLJSolver_dielectricZSSUM_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZSSUM_get", _wrap_PBwithLJSolver_dielectricZSSUM_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmS_set", _wrap_PBwithLJSolver_dielectricXmS_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmS_get", _wrap_PBwithLJSolver_dielectricXmS_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmS_set", _wrap_PBwithLJSolver_dielectricYmS_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmS_get", _wrap_PBwithLJSolver_dielectricYmS_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmS_set", _wrap_PBwithLJSolver_dielectricZmS_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmS_get", _wrap_PBwithLJSolver_dielectricZmS_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_QstS_set", _wrap_PBwithLJSolver_QstS_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_QstS_get", _wrap_PBwithLJSolver_QstS_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PhiSingular_set", _wrap_PBwithLJSolver_PhiSingular_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PhiSingular_get", _wrap_PBwithLJSolver_PhiSingular_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_DielBoarderNum_set", _wrap_PBwithLJSolver_DielBoarderNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_DielBoarderNum_get", _wrap_PBwithLJSolver_DielBoarderNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexDielBoarder_set", _wrap_PBwithLJSolver_IndexDielBoarder_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexDielBoarder_get", _wrap_PBwithLJSolver_IndexDielBoarder_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXDB_set", _wrap_PBwithLJSolver_dielectricXDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXDB_get", _wrap_PBwithLJSolver_dielectricXDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYDB_set", _wrap_PBwithLJSolver_dielectricYDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYDB_get", _wrap_PBwithLJSolver_dielectricYDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZDB_set", _wrap_PBwithLJSolver_dielectricZDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZDB_get", _wrap_PBwithLJSolver_dielectricZDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZDBSUM_set", _wrap_PBwithLJSolver_dielectricZDBSUM_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZDBSUM_get", _wrap_PBwithLJSolver_dielectricZDBSUM_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmDB_set", _wrap_PBwithLJSolver_dielectricXmDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmDB_get", _wrap_PBwithLJSolver_dielectricXmDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmDB_set", _wrap_PBwithLJSolver_dielectricYmDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmDB_get", _wrap_PBwithLJSolver_dielectricYmDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmDB_set", _wrap_PBwithLJSolver_dielectricZmDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmDB_get", _wrap_PBwithLJSolver_dielectricZmDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ChargeNum_set", _wrap_PBwithLJSolver_ChargeNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ChargeNum_get", _wrap_PBwithLJSolver_ChargeNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexCharge_set", _wrap_PBwithLJSolver_IndexCharge_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexCharge_get", _wrap_PBwithLJSolver_IndexCharge_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricCh_set", _wrap_PBwithLJSolver_dielectricCh_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricCh_get", _wrap_PBwithLJSolver_dielectricCh_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Qst_set", _wrap_PBwithLJSolver_Qst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Qst_get", _wrap_PBwithLJSolver_Qst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PhiCharge_set", _wrap_PBwithLJSolver_PhiCharge_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PhiCharge_get", _wrap_PBwithLJSolver_PhiCharge_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBZoneNum_set", _wrap_PBwithLJSolver_PBZoneNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBZoneNum_get", _wrap_PBwithLJSolver_PBZoneNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBZone_set", _wrap_PBwithLJSolver_IndexPBZone_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBZone_get", _wrap_PBwithLJSolver_IndexPBZone_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJZoneNum_set", _wrap_PBwithLJSolver_PBLJZoneNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJZoneNum_get", _wrap_PBwithLJSolver_PBLJZoneNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJZone_set", _wrap_PBwithLJSolver_IndexPBLJZone_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJZone_get", _wrap_PBwithLJSolver_IndexPBLJZone_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJQstZoneNum_set", _wrap_PBwithLJSolver_PBLJQstZoneNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJQstZoneNum_get", _wrap_PBwithLJSolver_PBLJQstZoneNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJQstZone_set", _wrap_PBwithLJSolver_IndexPBLJQstZone_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJQstZone_get", _wrap_PBwithLJSolver_IndexPBLJQstZone_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricPBLJQst_set", _wrap_PBwithLJSolver_dielectricPBLJQst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricPBLJQst_get", _wrap_PBwithLJSolver_dielectricPBLJQst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_QstPBLJ_set", _wrap_PBwithLJSolver_QstPBLJ_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_QstPBLJ_get", _wrap_PBwithLJSolver_QstPBLJ_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJDBZoneNum_set", _wrap_PBwithLJSolver_PBLJDBZoneNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJDBZoneNum_get", _wrap_PBwithLJSolver_PBLJDBZoneNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJDBZone_set", _wrap_PBwithLJSolver_IndexPBLJDBZone_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJDBZone_get", _wrap_PBwithLJSolver_IndexPBLJDBZone_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXPBLJDB_set", _wrap_PBwithLJSolver_dielectricXPBLJDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXPBLJDB_get", _wrap_PBwithLJSolver_dielectricXPBLJDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYPBLJDB_set", _wrap_PBwithLJSolver_dielectricYPBLJDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYPBLJDB_get", _wrap_PBwithLJSolver_dielectricYPBLJDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDB_set", _wrap_PBwithLJSolver_dielectricZPBLJDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDB_get", _wrap_PBwithLJSolver_dielectricZPBLJDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDBSUM_set", _wrap_PBwithLJSolver_dielectricZPBLJDBSUM_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDBSUM_get", _wrap_PBwithLJSolver_dielectricZPBLJDBSUM_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmPBLJDB_set", _wrap_PBwithLJSolver_dielectricXmPBLJDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmPBLJDB_get", _wrap_PBwithLJSolver_dielectricXmPBLJDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmPBLJDB_set", _wrap_PBwithLJSolver_dielectricYmPBLJDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmPBLJDB_get", _wrap_PBwithLJSolver_dielectricYmPBLJDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmPBLJDB_set", _wrap_PBwithLJSolver_dielectricZmPBLJDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmPBLJDB_get", _wrap_PBwithLJSolver_dielectricZmPBLJDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJDBQstZoneNum_set", _wrap_PBwithLJSolver_PBLJDBQstZoneNum_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_PBLJDBQstZoneNum_get", _wrap_PBwithLJSolver_PBLJDBQstZoneNum_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJDBQstZone_set", _wrap_PBwithLJSolver_IndexPBLJDBQstZone_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_IndexPBLJDBQstZone_get", _wrap_PBwithLJSolver_IndexPBLJDBQstZone_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXPBLJDBQst_set", _wrap_PBwithLJSolver_dielectricXPBLJDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXPBLJDBQst_get", _wrap_PBwithLJSolver_dielectricXPBLJDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYPBLJDBQst_set", _wrap_PBwithLJSolver_dielectricYPBLJDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYPBLJDBQst_get", _wrap_PBwithLJSolver_dielectricYPBLJDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDBQst_set", _wrap_PBwithLJSolver_dielectricZPBLJDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDBQst_get", _wrap_PBwithLJSolver_dielectricZPBLJDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDBQstSUM_set", _wrap_PBwithLJSolver_dielectricZPBLJDBQstSUM_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZPBLJDBQstSUM_get", _wrap_PBwithLJSolver_dielectricZPBLJDBQstSUM_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmPBLJDBQst_set", _wrap_PBwithLJSolver_dielectricXmPBLJDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricXmPBLJDBQst_get", _wrap_PBwithLJSolver_dielectricXmPBLJDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmPBLJDBQst_set", _wrap_PBwithLJSolver_dielectricYmPBLJDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricYmPBLJDBQst_get", _wrap_PBwithLJSolver_dielectricYmPBLJDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmPBLJDBQst_set", _wrap_PBwithLJSolver_dielectricZmPBLJDBQst_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_dielectricZmPBLJDBQst_get", _wrap_PBwithLJSolver_dielectricZmPBLJDBQst_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_QstPBLJDB_set", _wrap_PBwithLJSolver_QstPBLJDB_set, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_QstPBLJDB_get", _wrap_PBwithLJSolver_QstPBLJDB_get, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_LoadParamFromPyDict", _wrap_PBwithLJSolver_LoadParamFromPyDict, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_SetContWorld", _wrap_PBwithLJSolver_SetContWorld, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_InitSolver", _wrap_PBwithLJSolver_InitSolver, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_InitSolverNIB", _wrap_PBwithLJSolver_InitSolverNIB, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_Solve", _wrap_PBwithLJSolver_Solve, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_AnalyseExplosion", _wrap_PBwithLJSolver_AnalyseExplosion, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_CalcSystemEnergy", _wrap_PBwithLJSolver_CalcSystemEnergy, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_CalcSystemEnergyStdDevPhi", _wrap_PBwithLJSolver_CalcSystemEnergyStdDevPhi, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ShowParameters", _wrap_PBwithLJSolver_ShowParameters, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_ShowProperties", _wrap_PBwithLJSolver_ShowProperties, METH_VARARGS, NULL},
	 { (char *)"PBwithLJSolver_swigregister", PBwithLJSolver_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_a_6__p_doublepTo_p_a_6__p_double(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((double *(*)[6])  ((doublep *(*)[6]) x));
}
static void *_p_p_doublepTo_p_p_double(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((double **)  ((doublep **) x));
}
static void *_p_doublepTo_p_double(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((double *)  ((doublep *) x));
}
static void *_p_BuildWorldEuTo_p_BuildWorldNI(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((BuildWorldNI *)  ((BuildWorldEu *) x));
}
static void *_p_BuildWorldCmpTo_p_BuildWorldNI(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((BuildWorldNI *)  ((BuildWorldCmp *) x));
}
static void *_p_PoissonSolverTo_p_GenericSolver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericSolver *)  ((PoissonSolver *) x));
}
static void *_p_PoissonBoltzmannSolverTo_p_GenericSolver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericSolver *)  ((PoissonBoltzmannSolver *) x));
}
static void *_p_PBwithLJSolverTo_p_GenericSolver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericSolver *)  ((PBwithLJSolver *) x));
}
static void *_p_PoissonNernstPlanckSolverTo_p_GenericSolver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericSolver *)  ((PoissonNernstPlanckSolver *) x));
}
static void *_p_GenericGeometricalObjectTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((GenericGeometricalObject *) x));
}
static void *_p_MapsIODataTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((MapsIOData *) x));
}
static void *_p_BuildWorldScaledTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((BuildWorldScaled *) x));
}
static void *_p_GOMembraneZTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *) (GenericGeometricalObject *) ((GOMembraneZ *) x));
}
static void *_p_GOAtomsTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *) (GenericGeometricalObject *) ((GOAtoms *) x));
}
static void *_p_BuildWorldCmpTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *) (BuildWorldNI *) ((BuildWorldCmp *) x));
}
static void *_p_PoissonNernstPlanckSolverTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((PoissonNernstPlanckSolver *) x));
}
static void *_p_GODonutTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *) (GenericGeometricalObject *) ((GODonut *) x));
}
static void *_p_PoissonBoltzmannSolverTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((PoissonBoltzmannSolver *) x));
}
static void *_p_PoissonSolverTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((PoissonSolver *) x));
}
static void *_p_PBwithLJSolverTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((PBwithLJSolver *) x));
}
static void *_p_BuildWorldEuTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *) (BuildWorldNI *) ((BuildWorldEu *) x));
}
static void *_p_GOTubeTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *) (GenericGeometricalObject *) ((GOTube *) x));
}
static void *_p_ContWorldTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((ContWorld *) x));
}
static void *_p_DielDiffMapsPatcherTo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((DielDiffMapsPatcher *) x));
}
static void *_p_BuildWorldNITo_p_PnpsObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PnpsObject *)  ((BuildWorldNI *) x));
}
static void *_p_p_intpTo_p_p_int(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((int **)  ((intp **) x));
}
static void *_p_intpTo_p_int(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((int *)  ((intp *) x));
}
static void *_p_GOTubeTo_p_GenericGeometricalObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericGeometricalObject *)  ((GOTube *) x));
}
static void *_p_GODonutTo_p_GenericGeometricalObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericGeometricalObject *)  ((GODonut *) x));
}
static void *_p_GOAtomsTo_p_GenericGeometricalObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericGeometricalObject *)  ((GOAtoms *) x));
}
static void *_p_GOMembraneZTo_p_GenericGeometricalObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((GenericGeometricalObject *)  ((GOMembraneZ *) x));
}
static swig_type_info _swigt__p_BuildWorldCmp = {"_p_BuildWorldCmp", "BuildWorldCmp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BuildWorldEu = {"_p_BuildWorldEu", "BuildWorldEu *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BuildWorldNI = {"_p_BuildWorldNI", "BuildWorldNI *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BuildWorldScaled = {"_p_BuildWorldScaled", "BuildWorldScaled *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Bytef = {"_p_Bytef", "Bytef *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContWorld = {"_p_ContWorld", "ContWorld *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DielDiffMapsPatcher = {"_p_DielDiffMapsPatcher", "DielDiffMapsPatcher *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FILE = {"_p_FILE", "FILE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FieldBW = {"_p_FieldBW", "FieldBW *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GOAtoms = {"_p_GOAtoms", "GOAtoms *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GOAtomsStruct = {"_p_GOAtomsStruct", "GOAtomsStruct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GODonut = {"_p_GODonut", "GODonut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GOMembraneZ = {"_p_GOMembraneZ", "GOMembraneZ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GOTube = {"_p_GOTube", "GOTube *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GenericGeometricalObject = {"_p_GenericGeometricalObject", "GenericGeometricalObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GenericSolver = {"_p_GenericSolver", "GenericSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HaVectorField3DT_double_t = {"_p_HaVectorField3DT_double_t", "HaPyDoubleVectorField3D *|HaVectorField3D< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IAVCalc = {"_p_IAVCalc", "IAVCalc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MapsIOData = {"_p_MapsIOData", "MapsIOData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NPMaskBuilder = {"_p_NPMaskBuilder", "NPMaskBuilder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NernstPlankSolver = {"_p_NernstPlankSolver", "NernstPlankSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NodeIndexing = {"_p_NodeIndexing", "NodeIndexing *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PBwithLJSolver = {"_p_PBwithLJSolver", "PBwithLJSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PNPSApp = {"_p_PNPSApp", "PNPSApp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PNPUtil = {"_p_PNPUtil", "PNPUtil *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PSolverOnCudaStructDouble = {"_p_PSolverOnCudaStructDouble", "PSolverOnCudaStructDouble *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PartialWorldForSAS = {"_p_PartialWorldForSAS", "PartialWorldForSAS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PnpsObject = {"_p_PnpsObject", "PnpsObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoissonBoltzmannSolver = {"_p_PoissonBoltzmannSolver", "PoissonBoltzmannSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoissonNernstPlanckSolver = {"_p_PoissonNernstPlanckSolver", "PoissonNernstPlanckSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoissonSolver = {"_p_PoissonSolver", "PoissonSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoissonSolverOnCuda1Struct = {"_p_PoissonSolverOnCuda1Struct", "PoissonSolverOnCuda1Struct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoissonSolverOnCuda4Struct = {"_p_PoissonSolverOnCuda4Struct", "PoissonSolverOnCuda4Struct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoissonSolverOnCudaParamStruct = {"_p_PoissonSolverOnCudaParamStruct", "PoissonSolverOnCudaParamStruct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoissonSolverOnCudaStruct = {"_p_PoissonSolverOnCudaStruct", "PoissonSolverOnCudaStruct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TiXmlElement = {"_p_TiXmlElement", "TiXmlElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VectorField3D = {"_p_VectorField3D", "VectorField3D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VectorIntField3D = {"_p_VectorIntField3D", "VectorIntField3D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__PoissonSolverData = {"_p__PoissonSolverData", "_PoissonSolverData *|PoissonSolverDataW *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__object = {"_p__object", "_object *|PyObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_a_6__p_double = {"_p_a_6__p_double", "double *(*)[6]", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_a_6__p_doublep = {"_p_a_6__p_doublep", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_a_6__p_float = {"_p_a_6__p_float", "float *(*)[6]", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_doublep = {"_p_doublep", "doublep *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float3 = {"_p_float3", "float3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float4 = {"_p_float4", "float4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gzFile = {"_p_gzFile", "gzFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int3 = {"_p_int3", "int3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int4 = {"_p_int4", "int4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_intp = {"_p_intp", "intp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_Bytef = {"_p_p_Bytef", "Bytef **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_TiXmlElement = {"_p_p_TiXmlElement", "TiXmlElement **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p__object = {"_p_p__object", "_object **|PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_double = {"_p_p_double", "double **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_doublep = {"_p_p_doublep", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_float = {"_p_p_float", "float **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_int = {"_p_p_int", "int **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_intp = {"_p_p_intp", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_signed_char = {"_p_p_signed_char", "signed char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_float_t = {"_p_std__allocatorT_float_t", "std::vector< float >::allocator_type *|std::allocator< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t = {"_p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t", "std::vector< GenericGeometricalObject *,std::allocator< GenericGeometricalObject * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_float_std__allocatorT_float_t_t = {"_p_std__vectorT_float_std__allocatorT_float_t_t", "std::vector< float > *|std::vector< float,std::allocator< float > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t", "std::vector< std::string,std::allocator< std::string > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t = {"_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t", "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t = {"_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t", "std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_timeval = {"_p_timeval", "timeval *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uLong = {"_p_uLong", "uLong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uLongf = {"_p_uLongf", "uLongf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "NodeIndex *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_BuildWorldCmp,
  &_swigt__p_BuildWorldEu,
  &_swigt__p_BuildWorldNI,
  &_swigt__p_BuildWorldScaled,
  &_swigt__p_Bytef,
  &_swigt__p_ContWorld,
  &_swigt__p_DielDiffMapsPatcher,
  &_swigt__p_FILE,
  &_swigt__p_FieldBW,
  &_swigt__p_GOAtoms,
  &_swigt__p_GOAtomsStruct,
  &_swigt__p_GODonut,
  &_swigt__p_GOMembraneZ,
  &_swigt__p_GOTube,
  &_swigt__p_GenericGeometricalObject,
  &_swigt__p_GenericSolver,
  &_swigt__p_HaVectorField3DT_double_t,
  &_swigt__p_IAVCalc,
  &_swigt__p_MapsIOData,
  &_swigt__p_NPMaskBuilder,
  &_swigt__p_NernstPlankSolver,
  &_swigt__p_NodeIndexing,
  &_swigt__p_PBwithLJSolver,
  &_swigt__p_PNPSApp,
  &_swigt__p_PNPUtil,
  &_swigt__p_PSolverOnCudaStructDouble,
  &_swigt__p_PartialWorldForSAS,
  &_swigt__p_PnpsObject,
  &_swigt__p_PoissonBoltzmannSolver,
  &_swigt__p_PoissonNernstPlanckSolver,
  &_swigt__p_PoissonSolver,
  &_swigt__p_PoissonSolverOnCuda1Struct,
  &_swigt__p_PoissonSolverOnCuda4Struct,
  &_swigt__p_PoissonSolverOnCudaParamStruct,
  &_swigt__p_PoissonSolverOnCudaStruct,
  &_swigt__p_TiXmlElement,
  &_swigt__p_VectorField3D,
  &_swigt__p_VectorIntField3D,
  &_swigt__p__PoissonSolverData,
  &_swigt__p__object,
  &_swigt__p_a_6__p_double,
  &_swigt__p_a_6__p_doublep,
  &_swigt__p_a_6__p_float,
  &_swigt__p_allocator_type,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_double,
  &_swigt__p_doublep,
  &_swigt__p_float,
  &_swigt__p_float3,
  &_swigt__p_float4,
  &_swigt__p_gzFile,
  &_swigt__p_int,
  &_swigt__p_int3,
  &_swigt__p_int4,
  &_swigt__p_intp,
  &_swigt__p_long,
  &_swigt__p_p_Bytef,
  &_swigt__p_p_TiXmlElement,
  &_swigt__p_p__object,
  &_swigt__p_p_double,
  &_swigt__p_p_doublep,
  &_swigt__p_p_float,
  &_swigt__p_p_int,
  &_swigt__p_p_intp,
  &_swigt__p_p_signed_char,
  &_swigt__p_short,
  &_swigt__p_size_type,
  &_swigt__p_std__allocatorT_float_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t,
  &_swigt__p_std__vectorT_float_std__allocatorT_float_t_t,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  &_swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t,
  &_swigt__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_timeval,
  &_swigt__p_uLong,
  &_swigt__p_uLongf,
  &_swigt__p_unsigned_int,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc__p_BuildWorldCmp[] = {  {&_swigt__p_BuildWorldCmp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BuildWorldEu[] = {  {&_swigt__p_BuildWorldEu, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BuildWorldNI[] = {  {&_swigt__p_BuildWorldNI, 0, 0, 0},  {&_swigt__p_BuildWorldEu, _p_BuildWorldEuTo_p_BuildWorldNI, 0, 0},  {&_swigt__p_BuildWorldCmp, _p_BuildWorldCmpTo_p_BuildWorldNI, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BuildWorldScaled[] = {  {&_swigt__p_BuildWorldScaled, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Bytef[] = {  {&_swigt__p_Bytef, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContWorld[] = {  {&_swigt__p_ContWorld, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DielDiffMapsPatcher[] = {  {&_swigt__p_DielDiffMapsPatcher, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FILE[] = {  {&_swigt__p_FILE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FieldBW[] = {  {&_swigt__p_FieldBW, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GOAtoms[] = {  {&_swigt__p_GOAtoms, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GOAtomsStruct[] = {  {&_swigt__p_GOAtomsStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GODonut[] = {  {&_swigt__p_GODonut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GOMembraneZ[] = {  {&_swigt__p_GOMembraneZ, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GOTube[] = {  {&_swigt__p_GOTube, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GenericGeometricalObject[] = {  {&_swigt__p_GODonut, _p_GODonutTo_p_GenericGeometricalObject, 0, 0},  {&_swigt__p_GOTube, _p_GOTubeTo_p_GenericGeometricalObject, 0, 0},  {&_swigt__p_GenericGeometricalObject, 0, 0, 0},  {&_swigt__p_GOAtoms, _p_GOAtomsTo_p_GenericGeometricalObject, 0, 0},  {&_swigt__p_GOMembraneZ, _p_GOMembraneZTo_p_GenericGeometricalObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GenericSolver[] = {  {&_swigt__p_PoissonSolver, _p_PoissonSolverTo_p_GenericSolver, 0, 0},  {&_swigt__p_PoissonBoltzmannSolver, _p_PoissonBoltzmannSolverTo_p_GenericSolver, 0, 0},  {&_swigt__p_PBwithLJSolver, _p_PBwithLJSolverTo_p_GenericSolver, 0, 0},  {&_swigt__p_GenericSolver, 0, 0, 0},  {&_swigt__p_PoissonNernstPlanckSolver, _p_PoissonNernstPlanckSolverTo_p_GenericSolver, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HaVectorField3DT_double_t[] = {  {&_swigt__p_HaVectorField3DT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IAVCalc[] = {  {&_swigt__p_IAVCalc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MapsIOData[] = {  {&_swigt__p_MapsIOData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NPMaskBuilder[] = {  {&_swigt__p_NPMaskBuilder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NernstPlankSolver[] = {  {&_swigt__p_NernstPlankSolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NodeIndexing[] = {  {&_swigt__p_NodeIndexing, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PBwithLJSolver[] = {  {&_swigt__p_PBwithLJSolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PNPSApp[] = {  {&_swigt__p_PNPSApp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PNPUtil[] = {  {&_swigt__p_PNPUtil, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PSolverOnCudaStructDouble[] = {  {&_swigt__p_PSolverOnCudaStructDouble, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PartialWorldForSAS[] = {  {&_swigt__p_PartialWorldForSAS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PnpsObject[] = {  {&_swigt__p_GenericGeometricalObject, _p_GenericGeometricalObjectTo_p_PnpsObject, 0, 0},  {&_swigt__p_MapsIOData, _p_MapsIODataTo_p_PnpsObject, 0, 0},  {&_swigt__p_BuildWorldScaled, _p_BuildWorldScaledTo_p_PnpsObject, 0, 0},  {&_swigt__p_GOMembraneZ, _p_GOMembraneZTo_p_PnpsObject, 0, 0},  {&_swigt__p_GOAtoms, _p_GOAtomsTo_p_PnpsObject, 0, 0},  {&_swigt__p_BuildWorldCmp, _p_BuildWorldCmpTo_p_PnpsObject, 0, 0},  {&_swigt__p_PoissonNernstPlanckSolver, _p_PoissonNernstPlanckSolverTo_p_PnpsObject, 0, 0},  {&_swigt__p_GODonut, _p_GODonutTo_p_PnpsObject, 0, 0},  {&_swigt__p_GOTube, _p_GOTubeTo_p_PnpsObject, 0, 0},  {&_swigt__p_PoissonBoltzmannSolver, _p_PoissonBoltzmannSolverTo_p_PnpsObject, 0, 0},  {&_swigt__p_PoissonSolver, _p_PoissonSolverTo_p_PnpsObject, 0, 0},  {&_swigt__p_PBwithLJSolver, _p_PBwithLJSolverTo_p_PnpsObject, 0, 0},  {&_swigt__p_BuildWorldEu, _p_BuildWorldEuTo_p_PnpsObject, 0, 0},  {&_swigt__p_ContWorld, _p_ContWorldTo_p_PnpsObject, 0, 0},  {&_swigt__p_DielDiffMapsPatcher, _p_DielDiffMapsPatcherTo_p_PnpsObject, 0, 0},  {&_swigt__p_PnpsObject, 0, 0, 0},  {&_swigt__p_BuildWorldNI, _p_BuildWorldNITo_p_PnpsObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoissonBoltzmannSolver[] = {  {&_swigt__p_PoissonBoltzmannSolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoissonNernstPlanckSolver[] = {  {&_swigt__p_PoissonNernstPlanckSolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoissonSolver[] = {  {&_swigt__p_PoissonSolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoissonSolverOnCuda1Struct[] = {  {&_swigt__p_PoissonSolverOnCuda1Struct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoissonSolverOnCuda4Struct[] = {  {&_swigt__p_PoissonSolverOnCuda4Struct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoissonSolverOnCudaParamStruct[] = {  {&_swigt__p_PoissonSolverOnCudaParamStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoissonSolverOnCudaStruct[] = {  {&_swigt__p_PoissonSolverOnCudaStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TiXmlElement[] = {  {&_swigt__p_TiXmlElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VectorField3D[] = {  {&_swigt__p_VectorField3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VectorIntField3D[] = {  {&_swigt__p_VectorIntField3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__PoissonSolverData[] = {  {&_swigt__p__PoissonSolverData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__object[] = {  {&_swigt__p__object, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_6__p_doublep[] = {{&_swigt__p_a_6__p_doublep, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_6__p_double[] = {  {&_swigt__p_a_6__p_double, 0, 0, 0},  {&_swigt__p_a_6__p_doublep, _p_a_6__p_doublepTo_p_a_6__p_double, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_6__p_float[] = {  {&_swigt__p_a_6__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},  {&_swigt__p_doublep, _p_doublepTo_p_double, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_doublep[] = {  {&_swigt__p_doublep, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float3[] = {  {&_swigt__p_float3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float4[] = {  {&_swigt__p_float4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gzFile[] = {  {&_swigt__p_gzFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_intp, _p_intpTo_p_int, 0, 0},  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int3[] = {  {&_swigt__p_int3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int4[] = {  {&_swigt__p_int4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_intp[] = {  {&_swigt__p_intp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_Bytef[] = {  {&_swigt__p_p_Bytef, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_TiXmlElement[] = {  {&_swigt__p_p_TiXmlElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p__object[] = {  {&_swigt__p_p__object, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_doublep[] = {{&_swigt__p_p_doublep, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_double[] = {  {&_swigt__p_p_double, 0, 0, 0},  {&_swigt__p_p_doublep, _p_p_doublepTo_p_p_double, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_float[] = {  {&_swigt__p_p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_intp[] = {{&_swigt__p_p_intp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_int[] = {  {&_swigt__p_p_intp, _p_p_intpTo_p_p_int, 0, 0},  {&_swigt__p_p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_signed_char[] = {  {&_swigt__p_p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_float_t[] = {  {&_swigt__p_std__allocatorT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t[] = {  {&_swigt__p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_float_std__allocatorT_float_t_t[] = {  {&_swigt__p_std__vectorT_float_std__allocatorT_float_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_timeval[] = {  {&_swigt__p_timeval, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uLong[] = {  {&_swigt__p_uLong, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uLongf[] = {  {&_swigt__p_uLongf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_BuildWorldCmp,
  _swigc__p_BuildWorldEu,
  _swigc__p_BuildWorldNI,
  _swigc__p_BuildWorldScaled,
  _swigc__p_Bytef,
  _swigc__p_ContWorld,
  _swigc__p_DielDiffMapsPatcher,
  _swigc__p_FILE,
  _swigc__p_FieldBW,
  _swigc__p_GOAtoms,
  _swigc__p_GOAtomsStruct,
  _swigc__p_GODonut,
  _swigc__p_GOMembraneZ,
  _swigc__p_GOTube,
  _swigc__p_GenericGeometricalObject,
  _swigc__p_GenericSolver,
  _swigc__p_HaVectorField3DT_double_t,
  _swigc__p_IAVCalc,
  _swigc__p_MapsIOData,
  _swigc__p_NPMaskBuilder,
  _swigc__p_NernstPlankSolver,
  _swigc__p_NodeIndexing,
  _swigc__p_PBwithLJSolver,
  _swigc__p_PNPSApp,
  _swigc__p_PNPUtil,
  _swigc__p_PSolverOnCudaStructDouble,
  _swigc__p_PartialWorldForSAS,
  _swigc__p_PnpsObject,
  _swigc__p_PoissonBoltzmannSolver,
  _swigc__p_PoissonNernstPlanckSolver,
  _swigc__p_PoissonSolver,
  _swigc__p_PoissonSolverOnCuda1Struct,
  _swigc__p_PoissonSolverOnCuda4Struct,
  _swigc__p_PoissonSolverOnCudaParamStruct,
  _swigc__p_PoissonSolverOnCudaStruct,
  _swigc__p_TiXmlElement,
  _swigc__p_VectorField3D,
  _swigc__p_VectorIntField3D,
  _swigc__p__PoissonSolverData,
  _swigc__p__object,
  _swigc__p_a_6__p_double,
  _swigc__p_a_6__p_doublep,
  _swigc__p_a_6__p_float,
  _swigc__p_allocator_type,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_double,
  _swigc__p_doublep,
  _swigc__p_float,
  _swigc__p_float3,
  _swigc__p_float4,
  _swigc__p_gzFile,
  _swigc__p_int,
  _swigc__p_int3,
  _swigc__p_int4,
  _swigc__p_intp,
  _swigc__p_long,
  _swigc__p_p_Bytef,
  _swigc__p_p_TiXmlElement,
  _swigc__p_p__object,
  _swigc__p_p_double,
  _swigc__p_p_doublep,
  _swigc__p_p_float,
  _swigc__p_p_int,
  _swigc__p_p_intp,
  _swigc__p_p_signed_char,
  _swigc__p_short,
  _swigc__p_size_type,
  _swigc__p_std__allocatorT_float_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__string,
  _swigc__p_std__vectorT_GenericGeometricalObject_p_std__allocatorT_GenericGeometricalObject_p_t_t,
  _swigc__p_std__vectorT_float_std__allocatorT_float_t_t,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  _swigc__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t,
  _swigc__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_timeval,
  _swigc__p_uLong,
  _swigc__p_uLongf,
  _swigc__p_unsigned_int,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version_tag */
#endif
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
#if PY_VERSION_HEX >= 0x02050000
        0,                                  /* tp_prev */
#endif
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "PNPSVERSION",SWIG_FromCharPtr("8.3"));
  SWIG_Python_SetConstant(d, "PNP_MAP_IO_STRING_LENGTH",SWIG_From_int(static_cast< int >(512)));
  PyDict_SetItemString(md,(char *)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char *)"MaxNumOfParts",Swig_var_MaxNumOfParts_get, Swig_var_MaxNumOfParts_set);
  SWIG_addvarlink(SWIG_globals(),(char *)"MaxNPartSize",Swig_var_MaxNPartSize_get, Swig_var_MaxNPartSize_set);
  SWIG_addvarlink(SWIG_globals(),(char *)"pnpsapp",Swig_var_pnpsapp_get, Swig_var_pnpsapp_set);
  SWIG_Python_SetConstant(d, "FILE_MAP_GZ",SWIG_From_int(static_cast< int >(4001)));
  SWIG_Python_SetConstant(d, "FILE_MAP_MBN",SWIG_From_int(static_cast< int >(4002)));
  SWIG_Python_SetConstant(d, "FILE_MAP_MB2",SWIG_From_int(static_cast< int >(4003)));
  SWIG_Python_SetConstant(d, "FILE_MAP_IGB",SWIG_From_int(static_cast< int >(4004)));
  SWIG_Python_SetConstant(d, "FILE_MAP_DX",SWIG_From_int(static_cast< int >(4005)));
  SWIG_Python_SetConstant(d, "VectorIntField3D_INTERNAL_ALLOC",SWIG_From_int(static_cast< int >(VectorIntField3D::INTERNAL_ALLOC)));
  SWIG_Python_SetConstant(d, "VectorIntField3D_EXTERNAL_ALLOC",SWIG_From_int(static_cast< int >(VectorIntField3D::EXTERNAL_ALLOC)));
  SWIG_Python_SetConstant(d, "VectorField3D_INTERNAL_ALLOC",SWIG_From_int(static_cast< int >(VectorField3D::INTERNAL_ALLOC)));
  SWIG_Python_SetConstant(d, "VectorField3D_EXTERNAL_ALLOC",SWIG_From_int(static_cast< int >(VectorField3D::EXTERNAL_ALLOC)));
  SWIG_Python_SetConstant(d, "DO_ONE",SWIG_From_int(static_cast< int >(2001)));
  SWIG_Python_SetConstant(d, "DO_TWO",SWIG_From_int(static_cast< int >(2002)));
  SWIG_Python_SetConstant(d, "DO_THREE",SWIG_From_int(static_cast< int >(2003)));
  SWIG_Python_SetConstant(d, "DO_FOUR",SWIG_From_int(static_cast< int >(2004)));
  SWIG_Python_SetConstant(d, "DO_FIVE",SWIG_From_int(static_cast< int >(2005)));
  SWIG_Python_SetConstant(d, "DO_SIX",SWIG_From_int(static_cast< int >(2006)));
  SWIG_Python_SetConstant(d, "SEND_ENERGY",SWIG_From_int(static_cast< int >(3006)));
  SWIG_Python_SetConstant(d, "MapsIOData_Read",SWIG_From_int(static_cast< int >(MapsIOData::Read)));
  SWIG_Python_SetConstant(d, "MapsIOData_Write",SWIG_From_int(static_cast< int >(MapsIOData::Write)));
  SWIG_Python_SetConstant(d, "MapsIOData_Auto",SWIG_From_int(static_cast< int >(MapsIOData::Auto)));
  SWIG_addvarlink(SWIG_globals(),(char *)"NodeIndexMaxValues",Swig_var_NodeIndexMaxValues_get, Swig_var_NodeIndexMaxValues_set);
  SWIG_addvarlink(SWIG_globals(),(char *)"MaxIonTypes",Swig_var_MaxIonTypes_get, Swig_var_MaxIonTypes_set);
  SWIG_Python_SetConstant(d, "NodeIndexing_Epsilon0",SWIG_From_int(static_cast< int >(NodeIndexing::Epsilon0)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Epsilon1",SWIG_From_int(static_cast< int >(NodeIndexing::Epsilon1)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Epsilon2",SWIG_From_int(static_cast< int >(NodeIndexing::Epsilon2)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion0",SWIG_From_int(static_cast< int >(NodeIndexing::Ion0)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion1",SWIG_From_int(static_cast< int >(NodeIndexing::Ion1)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion2",SWIG_From_int(static_cast< int >(NodeIndexing::Ion2)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion3",SWIG_From_int(static_cast< int >(NodeIndexing::Ion3)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Epsilon0Sft",SWIG_From_int(static_cast< int >(NodeIndexing::Epsilon0Sft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Epsilon1Sft",SWIG_From_int(static_cast< int >(NodeIndexing::Epsilon1Sft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Epsilon2Sft",SWIG_From_int(static_cast< int >(NodeIndexing::Epsilon2Sft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion0Sft",SWIG_From_int(static_cast< int >(NodeIndexing::Ion0Sft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion1Sft",SWIG_From_int(static_cast< int >(NodeIndexing::Ion1Sft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion2Sft",SWIG_From_int(static_cast< int >(NodeIndexing::Ion2Sft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Ion3Sft",SWIG_From_int(static_cast< int >(NodeIndexing::Ion3Sft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Flexible",SWIG_From_int(static_cast< int >(NodeIndexing::Flexible)));
  SWIG_Python_SetConstant(d, "NodeIndexing_BlackAndWhiteMask",SWIG_From_int(static_cast< int >(NodeIndexing::BlackAndWhiteMask)));
  SWIG_Python_SetConstant(d, "NodeIndexing_ChargeMask",SWIG_From_int(static_cast< int >(NodeIndexing::ChargeMask)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DielBoarderMask",SWIG_From_int(static_cast< int >(NodeIndexing::DielBoarderMask)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon0BoarderMask",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon0BoarderMask)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon1BoarderMask",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon1BoarderMask)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon2BoarderMask",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon2BoarderMask)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon3BoarderMask",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon3BoarderMask)));
  SWIG_Python_SetConstant(d, "NodeIndexing_BlackAndWhiteMaskSft",SWIG_From_int(static_cast< int >(NodeIndexing::BlackAndWhiteMaskSft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_ChargeMaskSft",SWIG_From_int(static_cast< int >(NodeIndexing::ChargeMaskSft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DielBoarderMaskSft",SWIG_From_int(static_cast< int >(NodeIndexing::DielBoarderMaskSft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon0BoarderMaskSft",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon0BoarderMaskSft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon1BoarderMaskSft",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon1BoarderMaskSft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon2BoarderMaskSft",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon2BoarderMaskSft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffIon3BoarderMaskSft",SWIG_From_int(static_cast< int >(NodeIndexing::DiffIon3BoarderMaskSft)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DielConst",SWIG_From_int(static_cast< int >(NodeIndexing::DielConst)));
  SWIG_Python_SetConstant(d, "NodeIndexing_DiffConst",SWIG_From_int(static_cast< int >(NodeIndexing::DiffConst)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Conc",SWIG_From_int(static_cast< int >(NodeIndexing::Conc)));
  SWIG_Python_SetConstant(d, "NodeIndexing_Charge",SWIG_From_int(static_cast< int >(NodeIndexing::Charge)));
  SWIG_Python_SetConstant(d, "AligneSize",SWIG_From_int(static_cast< int >(16)));
  SWIG_Python_SetConstant(d, "PlusX",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "MinusX",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PlusY",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "MinusY",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "PlusZ",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "MinusZ",SWIG_From_int(static_cast< int >(5)));
  SWIG_Python_SetConstant(d, "CUDAXTRAX",SWIG_From_int(static_cast< int >(16)));
  SWIG_Python_SetConstant(d, "POISSON_SOLVER_CONVERGENCE_CHECK",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "POISSON_SOLVER_CHARGED_POINT",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "POISSON_SOLVER_UNCOMMON_DIELECTRIC_POINT",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "POISSON_SOLVER_CHARGED_UNCOMMON_DIELECTRIC_POINT",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "PoissonSolver_Auto",SWIG_From_int(static_cast< int >(PoissonSolver::Auto)));
  SWIG_Python_SetConstant(d, "PoissonSolver_NodeIndexBased",SWIG_From_int(static_cast< int >(PoissonSolver::NodeIndexBased)));
  SWIG_Python_SetConstant(d, "PoissonSolver_ArrayDirect",SWIG_From_int(static_cast< int >(PoissonSolver::ArrayDirect)));
  SWIG_Python_SetConstant(d, "PoissonSolver_PNPC",SWIG_From_int(static_cast< int >(PoissonSolver::PNPC)));
  SWIG_Python_SetConstant(d, "PoissonSolver_NoSingular",SWIG_From_int(static_cast< int >(PoissonSolver::NoSingular)));
  SWIG_Python_SetConstant(d, "PoissonSolver_Boarder",SWIG_From_int(static_cast< int >(PoissonSolver::Boarder)));
  SWIG_Python_SetConstant(d, "PoissonSolver_Charge",SWIG_From_int(static_cast< int >(PoissonSolver::Charge)));
  SWIG_Python_SetConstant(d, "PoissonSolver_DielBoarder",SWIG_From_int(static_cast< int >(PoissonSolver::DielBoarder)));
  SWIG_Python_SetConstant(d, "PoissonSolver_ChargeAndDielBoarder",SWIG_From_int(static_cast< int >(PoissonSolver::ChargeAndDielBoarder)));
  SWIG_Python_SetConstant(d, "PoissonSolver_Singular",SWIG_From_int(static_cast< int >(PoissonSolver::Singular)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_Auto",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::Auto)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_NodeIndexBased",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::NodeIndexBased)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_ArrayDirect",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::ArrayDirect)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_NoSingular",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::NoSingular)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_Boarder",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::Boarder)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_Charge",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::Charge)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_DielBoarder",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::DielBoarder)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_ChargeAndDielBoarder",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::ChargeAndDielBoarder)));
  SWIG_Python_SetConstant(d, "PoissonBoltzmannSolver_Singular",SWIG_From_int(static_cast< int >(PoissonBoltzmannSolver::Singular)));
  SWIG_Python_SetConstant(d, "BIGDISTANSE",SWIG_From_int(static_cast< int >(10000)));
  SWIG_Python_SetConstant(d, "GOAtoms_ClosestNode",SWIG_From_int(static_cast< int >(GOAtoms::ClosestNode)));
  SWIG_Python_SetConstant(d, "GOAtoms_Linear",SWIG_From_int(static_cast< int >(GOAtoms::Linear)));
  SWIG_Python_SetConstant(d, "GOAtoms_Cone",SWIG_From_int(static_cast< int >(GOAtoms::Cone)));
  SWIG_Python_SetConstant(d, "BuildWorldNI_ZeroBC",SWIG_From_int(static_cast< int >(BuildWorldNI::ZeroBC)));
  SWIG_Python_SetConstant(d, "BuildWorldNI_CoulBC",SWIG_From_int(static_cast< int >(BuildWorldNI::CoulBC)));
  SWIG_Python_SetConstant(d, "BuildWorldNI_Plain",SWIG_From_int(static_cast< int >(BuildWorldNI::Plain)));
  SWIG_Python_SetConstant(d, "BuildWorldNI_Exp",SWIG_From_int(static_cast< int >(BuildWorldNI::Exp)));
  SWIG_addvarlink(SWIG_globals(),(char *)"PBwithLJConvFacMaxHistory",Swig_var_PBwithLJConvFacMaxHistory_get, Swig_var_PBwithLJConvFacMaxHistory_set);
  SWIG_Python_SetConstant(d, "PBwithLJSolver_Auto",SWIG_From_int(static_cast< int >(PBwithLJSolver::Auto)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_NodeIndexBased",SWIG_From_int(static_cast< int >(PBwithLJSolver::NodeIndexBased)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_ArrayDirect",SWIG_From_int(static_cast< int >(PBwithLJSolver::ArrayDirect)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_NoSingular",SWIG_From_int(static_cast< int >(PBwithLJSolver::NoSingular)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_Boarder",SWIG_From_int(static_cast< int >(PBwithLJSolver::Boarder)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_Charge",SWIG_From_int(static_cast< int >(PBwithLJSolver::Charge)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_DielBoarder",SWIG_From_int(static_cast< int >(PBwithLJSolver::DielBoarder)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_ChargeAndDielBoarder",SWIG_From_int(static_cast< int >(PBwithLJSolver::ChargeAndDielBoarder)));
  SWIG_Python_SetConstant(d, "PBwithLJSolver_Singular",SWIG_From_int(static_cast< int >(PBwithLJSolver::Singular)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

