<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="PY3_Debug|Win32">
      <Configuration>PY3_Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="PY3_Debug|x64">
      <Configuration>PY3_Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="PY3_Release|Win32">
      <Configuration>PY3_Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="PY3_Release|x64">
      <Configuration>PY3_Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7AB0F266-A0A8-47DD-8C82-49E28CF5D872}</ProjectGuid>
    <RootNamespace>hatlem_vs</RootNamespace>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <WholeProgramOptimization>false</WholeProgramOptimization>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <WholeProgramOptimization>false</WholeProgramOptimization>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <WholeProgramOptimization>false</WholeProgramOptimization>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <WholeProgramOptimization>false</WholeProgramOptimization>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <UseIntelMKL>Sequential</UseIntelMKL>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_win32__vcpkg.props" />
    <Import Project="paths_win32__python27.props" />
    <Import Project="paths_win32__mpi.props" />
    <Import Project="paths_win32__intel_compiler.props" />
    <Import Project="paths_win32__intel_mkl.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_win32__vcpkg.props" />
    <Import Project="paths_win32__python27.props" />
    <Import Project="paths_win32__mpi.props" />
    <Import Project="paths_win32__intel_compiler.props" />
    <Import Project="paths_win32__intel_mkl.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_win32__vcpkg.props" />
    <Import Project="paths__python3wx.props" />
    <Import Project="paths_win32__mpi.props" />
    <Import Project="paths_win32__intel_compiler.props" />
    <Import Project="paths_win32__intel_mkl.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_win32__vcpkg.props" />
    <Import Project="paths__python3wx.props" />
    <Import Project="paths_win32__mpi.props" />
    <Import Project="paths_win32__intel_compiler.props" />
    <Import Project="paths_win32__intel_mkl.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_win32_debug__vcpkg.props" />
    <Import Project="paths_win32_debug__python27.props" />
    <Import Project="paths_win32__mpi.props" />
    <Import Project="paths_win32__intel_compiler.props" />
    <Import Project="paths_win32__intel_mkl.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_win32_debug__vcpkg.props" />
    <Import Project="paths_win32_debug__python27.props" />
    <Import Project="paths_win32__mpi.props" />
    <Import Project="paths_win32__intel_compiler.props" />
    <Import Project="paths_win32__intel_mkl.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_win32_debug__vcpkg.props" />
    <Import Project="paths__python3wx.props" />
    <Import Project="paths_win32__mpi.props" />
    <Import Project="paths_win32__intel_compiler.props" />
    <Import Project="paths_win32__intel_mkl.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="haprops.props" />
    <Import Project="paths_x64_debug__vcpkg.props" />
    <Import Project="paths__python3wx.props" />
    <Import Project="paths_x64__intel_compiler.props" />
    <Import Project="paths_x64__intel_mkl.props" />
    <Import Project="paths_x64__mpi.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.40219.1</_ProjectFileVersion>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">true</LinkIncremental>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'" />
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'" />
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'" />
    <PostBuildEventUseInBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</PostBuildEventUseInBuild>
    <PostBuildEventUseInBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</PostBuildEventUseInBuild>
    <PostBuildEventUseInBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">true</PostBuildEventUseInBuild>
    <PostBuildEventUseInBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">true</PostBuildEventUseInBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>harlem</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_AFXDLL;_DEBUG;__WXDEBUG__;_WINDOWS;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplot.lib;plplotcxx.lib;plplotwxwidgets.lib;mkl_intel_c.lib;mkl_sequential.lib;mkl_core.lib;wxbase31ud.lib;wxmsw31ud_core.lib;wxmsw31ud_adv.lib;boost_filesystem-vc140-mt-gd.lib;zlibd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <TargetMachine>MachineX86</TargetMachine>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_AFXDLL;_DEBUG;__WXDEBUG__;_WINDOWS;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplot.lib;plplotcxx.lib;plplotwxwidgets.lib;mkl_intel_c.lib;mkl_sequential.lib;mkl_core.lib;wxbase31ud.lib;wxmsw31ud_core.lib;wxmsw31ud_adv.lib;boost_filesystem-vc140-mt-gd.lib;zlibd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_AFXDLL;_DEBUG;__WXDEBUG__;_WINDOWS;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplotd.lib;plplotcxxd.lib;plplotwxwidgetsd.lib;mkl_intel_c.lib;mkl_sequential.lib;mkl_core.lib;wxbase30ud.lib;wxmsw30ud_core.lib;wxmsw30ud_adv.lib;boost_filesystem-vc140-mt-gd.lib;zlibd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <TargetMachine>MachineX86</TargetMachine>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_AFXDLL;_DEBUG;__WXDEBUG__;_WINDOWS;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplotd.lib;plplotcxxd.lib;plplotwxwidgetsd.lib;mkl_intel_lp64_dll.lib;mkl_sequential_dll.lib;mkl_core_dll.lib;wxbase30ud.lib;wxmsw30ud_core.lib;wxmsw30ud_adv.lib;boost_filesystem-vc140-mt-gd.lib;zlibd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_AFXDLL;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;HA_MORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Async</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level2</WarningLevel>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplot.lib;plplotcxx.lib;plplotwxwidgets.lib;mkl_intel_c.lib;mkl_sequential.lib;mkl_core.lib;wxbase31u.lib;wxmsw31u_core.lib;wxmsw31u_adv.lib;boost_filesystem-vc140-mt.lib;zlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <TargetMachine>MachineX86</TargetMachine>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_AFXDLL;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;HA_MORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Async</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level2</WarningLevel>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplot.lib;plplotcxx.lib;plplotwxwidgets.lib;mkl_intel_c.lib;mkl_sequential.lib;mkl_core.lib;wxbase31u.lib;wxmsw31u_core.lib;wxmsw31u_adv.lib;boost_filesystem-vc140-mt.lib;zlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_AFXDLL;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;HA_MORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Async</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level2</WarningLevel>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplot.lib;plplotcxx.lib;plplotwxwidgets.lib;mkl_intel_c.lib;mkl_sequential.lib;mkl_core.lib;wxbase30u.lib;wxmsw30u_core.lib;wxmsw30u_adv.lib;boost_filesystem-vc140-mt.lib;zlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <TargetMachine>MachineX86</TargetMachine>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\HARLEM\sources;$(ProjectDir)\..\HARLEM\sources\math;$(ProjectDir)\..\HARLEM\sources\gl;$(ProjectDir)\..\HALIB\include;$(ProjectDir)\..\MY_VFLIB\src;$(ProjectDir)\..\WOLFGANG\DO_LIB\include;$(ProjectDir)\..\WOLFGANG\DO_LIB\template;$(ProjectDir)\..\WOLFGANG\IPACK;$(ProjectDir)\..\WOLFGANG\generic;$(ProjectDir)\..\PNPS\src;$(ProjectDir)\..\PNPS\pnpmod;C:\MYPROG\AMBER11_IGOR\AmberTools\src\gleap\mortsrc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_AFXDLL;HARLEM_MOD;THIRTYTWOBIT;HAOGL;BLAS;USE_IPACK;PYTHON_COMMAND;INT_JUMNA;INT_DELPHI;WX;WXUSINGDLL;WITH_LIB_PMEMD;HA_MORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Async</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level2</WarningLevel>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <AdditionalDependencies>delphi_lib.lib;harlem_vs_fort.lib;jumna_lib_fort.lib;pmemd_lib_vs.lib;geoball_lib_fort.lib;mpir.lib;libfmpich2g.a;mpi.lib;Rpcrt4.lib;plplot.lib;plplotcxx.lib;plplotwxwidgets.lib;mkl_intel_c.lib;mkl_sequential.lib;mkl_core.lib;wxbase30u.lib;wxmsw30u_core.lib;wxmsw30u_adv.lib;boost_filesystem-vc140-mt.lib;zlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Message>Copy Python Scripts and Other Dependencies</Message>
      <Command>if not exist $(OutputPath)\scripts\NUL mkdir $(OutputPath)\scripts
copy /Y $(IntDir)\molset.py $(OutputPath)\scripts

set VCPKG_DLL_PATH="$(VCPKG_DLL_PATH)"
set PYTHON_HOME_PATH="$(PYTHON_HOME_PATH)"
set PYTHON_BIN_PATH="$(PYTHON_BIN_PATH)"
set PYTHON_DLLS_PATH="$(PYTHON_DLLS_PATH)"
set WX_DLLS_PATH="$(WX_DLLS_PATH)"
set MKL_DLL_PATH="$(MKL_DLL_PATH)"

set CONF="$(Configuration)_$(PlatformName)"

$(SolutionDir)copy_dependencies.bat
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\HARLEM\sources\hacompmod.cpp" />
    <ClCompile Include="..\HARLEM\sources\apbsmod.cpp" />
    <ClCompile Include="..\HARLEM\sources\electrostmod.cpp" />
    <ClCompile Include="..\HARLEM\sources\elmod.cpp" />
    <ClCompile Include="..\HARLEM\sources\etcoupl.cpp" />
    <ClCompile Include="..\HARLEM\sources\gaufile.cpp" />
    <ClCompile Include="..\HARLEM\sources\haatbasdb.cpp" />
    <ClCompile Include="..\HARLEM\sources\haatombasis.cpp" />
    <ClCompile Include="..\HARLEM\sources\hacoord.cpp" />
    <ClCompile Include="..\HARLEM\sources\hadalton.cpp" />
    <ClCompile Include="..\HARLEM\sources\hagaussian.cpp" />
    <ClCompile Include="..\HARLEM\sources\haintengine.cpp" />
    <ClCompile Include="..\HARLEM\sources\halocorb.cpp" />
    <ClCompile Include="..\HARLEM\sources\hamultipole.cpp" />
    <ClCompile Include="..\HARLEM\sources\hapseudopot.cpp" />
    <ClCompile Include="..\HARLEM\sources\haqchem.cpp" />
    <ClCompile Include="..\HARLEM\sources\hascattermod.cpp" />
    <ClCompile Include="..\HARLEM\sources\hazindo.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_driver_gromacs.cpp" />
    <ClCompile Include="..\HARLEM\sources\ndo.cpp" />
    <ClCompile Include="..\HARLEM\sources\qc_params.cpp" />
    <ClCompile Include="..\HARLEM\sources\protonredox.cpp" />
    <ClCompile Include="..\HARLEM\sources\haflexmod.cpp" />
    <ClCompile Include="..\HARLEM\sources\haintermol.cpp" />
    <ClCompile Include="..\HARLEM\sources\halocexcit.cpp" />
    <ClCompile Include="..\HARLEM\sources\harpaham.cpp" />
    <ClCompile Include="..\HARLEM\sources\harpavec.cpp" />
    <ClCompile Include="..\HARLEM\sources\nuclacidmod.cpp" />
    <ClCompile Include="..\HARLEM\sources\stmmod.cpp" />
    <ClCompile Include="..\HARLEM\sources\haempirical.cpp" />
    <ClCompile Include="..\HARLEM\sources\hasimulator.cpp" />
    <ClCompile Include="..\HARLEM\sources\trajanal.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_mort_mm.cpp" />
    <ClCompile Include="..\HARLEM\sources\hamolmech.cpp" />
    <ClCompile Include="..\HARLEM\sources\haresdb.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_driver_amber.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_driver_tinker.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_elements.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_force_field.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_model.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_params.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_traj_anal.cpp" />
    <ClCompile Include="..\HARLEM\sources\molmech_evt_handler.cpp" />
    <ClCompile Include="..\HARLEM\sources\haproteined.cpp" />
    <ClCompile Include="..\HARLEM\sources\atom_mapping.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_mort_mol.cpp" />
    <ClCompile Include="..\HARLEM\sources\haatgroup.cpp" />
    <ClCompile Include="..\HARLEM\sources\haatom.cpp" />
    <ClCompile Include="..\HARLEM\sources\habond.cpp" />
    <ClCompile Include="..\HARLEM\sources\hahbhp.cpp" />
    <ClCompile Include="..\HARLEM\sources\haintcrd.cpp" />
    <ClCompile Include="..\HARLEM\sources\hamolecule.cpp" />
    <ClCompile Include="..\HARLEM\sources\hamolset.cpp" />
    <ClCompile Include="..\HARLEM\sources\infile.cpp" />
    <ClCompile Include="..\HARLEM\sources\moleditor.cpp" />
    <ClCompile Include="..\HARLEM\sources\molset_evt_handler.cpp" />
    <ClCompile Include="..\HARLEM\sources\rigidbodycoord.cpp" />
    <ClCompile Include="..\HARLEM\sources\vec3d.cpp" />
    <ClCompile Include="..\HARLEM\sources\haio.cpp" />
    <ClCompile Include="..\HARLEM\sources\hastl.cpp" />
    <ClCompile Include="..\HARLEM\sources\hastring.cpp" />
    <ClCompile Include="..\HARLEM\sources\hatypes.cpp" />
    <ClCompile Include="..\HARLEM\sources\manual.cpp" />
    <ClCompile Include="..\HARLEM\sources\dialogs_wx_1.cpp" />
    <ClCompile Include="..\HARLEM\sources\dialogs_wx_2.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_wx_aux_1.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_wx_ed_wdr.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_wx_res_2_wdr.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_wx_res_mikola_wdr.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_wx_res_molflex_wdr.cpp" />
    <ClCompile Include="..\HARLEM\sources\ha_wx_res_wdr.cpp" />
    <ClCompile Include="..\HARLEM\sources\hamainframe_wx.cpp" />
    <ClCompile Include="..\HARLEM\sources\hawx_add.cpp" />
    <ClCompile Include="..\HARLEM\sources\mm_dialogs_wx.cpp" />
    <ClCompile Include="..\HARLEM\sources\qc_dialogs_wx.cpp" />
    <ClCompile Include="..\HARLEM\sources\wx_prot_redox_dlg.cpp" />
    <ClCompile Include="..\HARLEM\sources\wxMolED.cpp" />
    <ClCompile Include="..\HARLEM\sources\wxMolFlex.cpp" />
    <ClCompile Include="..\HARLEM\sources\wxpymod.cpp" />
    <ClCompile Include="..\HARLEM\sources\canvas3d.cpp" />
    <ClCompile Include="..\HARLEM\sources\hacolors.cpp" />
    <ClCompile Include="..\HARLEM\sources\hamolview.cpp" />
    <ClCompile Include="..\HARLEM\sources\object3d.cpp" />
    <ClCompile Include="..\HARLEM\sources\oglview.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\HARLEM\sources\outfile.cpp" />
    <ClCompile Include="..\HARLEM\sources\repres.cpp" />
    <ClCompile Include="..\HARLEM\sources\transfor.cpp" />
    <ClCompile Include="..\HARLEM\sources\hachart.cpp" />
    <ClCompile Include="..\HARLEM\sources\hachart_wx.cpp" />
    <ClCompile Include="..\HARLEM\sources\abstree.cpp" />
    <ClCompile Include="..\HARLEM\sources\command.cpp" />
    <ClCompile Include="..\HARLEM\sources\script.cpp" />
    <ClCompile Include="obj\Debug_Win32\harlem_vs\hamolset_wrap.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="obj\PY3_Debug_Win32\harlem_vs\hamolset_wrap.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">false</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="obj\PY3_Debug_x64\harlem_vs\hamolset_wrap.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">false</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="obj\PY3_Release_Win32\harlem_vs\hamolset_wrap.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">false</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">false</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="obj\Release_Win32\harlem_vs\hamolset_wrap.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\HARLEM\sources\hampi.cpp" />
    <ClCompile Include="..\HARLEM\sources\harlemapp.cpp" />
    <ClCompile Include="..\HARLEM\sources\harlemapp_wx.cpp" />
    <ClCompile Include="..\HARLEM\sources\hasvnrev.cpp" />
    <ClCompile Include="..\HARLEM\sources\fminbr.cpp" />
    <ClCompile Include="..\HARLEM\sources\gmathc.c" />
    <ClCompile Include="..\HARLEM\sources\halinalg.cpp" />
    <ClCompile Include="..\HARLEM\sources\hamatdb.cpp" />
    <ClCompile Include="..\HARLEM\sources\hasurface.cpp" />
    <ClCompile Include="..\HARLEM\sources\march_cube.cpp" />
    <ClCompile Include="..\HARLEM\sources\hatests.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\HARLEM\sources\FCMangle.h" />
    <ClInclude Include="..\HARLEM\sources\hacompmod.h" />
    <ClInclude Include="..\HARLEM\sources\apbsmod.h" />
    <ClInclude Include="..\HARLEM\sources\electrostmod.h" />
    <ClInclude Include="..\HARLEM\sources\elmod.h" />
    <ClInclude Include="..\HARLEM\sources\etcoupl.h" />
    <ClInclude Include="..\HARLEM\sources\g94_globals.h" />
    <ClInclude Include="..\HARLEM\sources\g94_protos.h" />
    <ClInclude Include="..\HARLEM\sources\gaufile.h" />
    <ClInclude Include="..\HARLEM\sources\haatbasdb.h" />
    <ClInclude Include="..\HARLEM\sources\haatombasis.h" />
    <ClInclude Include="..\HARLEM\sources\hadalton.h" />
    <ClInclude Include="..\HARLEM\sources\hagaussian.h" />
    <ClInclude Include="..\HARLEM\sources\haintengine.h" />
    <ClInclude Include="..\HARLEM\sources\halocorb.h" />
    <ClInclude Include="..\HARLEM\sources\hamultipole.h" />
    <ClInclude Include="..\HARLEM\sources\hapseudopot.h" />
    <ClInclude Include="..\HARLEM\sources\haqchem.h" />
    <ClInclude Include="..\HARLEM\sources\hascattermod.h" />
    <ClInclude Include="..\HARLEM\sources\hazindo.h" />
    <ClInclude Include="..\HARLEM\sources\mm_driver_gromacs.h" />
    <ClInclude Include="..\HARLEM\sources\qc_params.h" />
    <ClInclude Include="..\HARLEM\sources\protonredox.h" />
    <ClInclude Include="..\HARLEM\sources\haflexmod.h" />
    <ClInclude Include="..\HARLEM\sources\haintermol.h" />
    <ClInclude Include="..\HARLEM\sources\halocexcit.h" />
    <ClInclude Include="..\HARLEM\sources\harpaham.h" />
    <ClInclude Include="..\HARLEM\sources\harpavec.h" />
    <ClInclude Include="..\HARLEM\sources\nuclacidmod.h" />
    <ClInclude Include="..\HARLEM\sources\stmmod.h" />
    <ClInclude Include="..\HARLEM\sources\haempirical.h" />
    <ClInclude Include="..\HARLEM\sources\haenefunc.h" />
    <ClInclude Include="..\HARLEM\sources\hasimulator.h" />
    <ClInclude Include="..\HARLEM\sources\trajanal.h" />
    <ClInclude Include="..\HARLEM\sources\ha_mort_mm.h" />
    <ClInclude Include="..\HARLEM\sources\hamolmech.h" />
    <ClInclude Include="..\HARLEM\sources\haresdb.h" />
    <ClInclude Include="..\HARLEM\sources\mm_driver_amber.h" />
    <ClInclude Include="..\HARLEM\sources\mm_driver_tinker.h" />
    <ClInclude Include="..\HARLEM\sources\mm_elements.h" />
    <ClInclude Include="..\HARLEM\sources\mm_force_field.h" />
    <ClInclude Include="..\HARLEM\sources\mm_model.h" />
    <ClInclude Include="..\HARLEM\sources\mm_params.h" />
    <ClInclude Include="..\HARLEM\sources\mm_traj_anal.h" />
    <ClInclude Include="..\HARLEM\sources\molmech_evt_handler.h" />
    <ClInclude Include="..\HARLEM\sources\haproteined.h" />
    <ClInclude Include="..\HARLEM\sources\atom_mapping.h" />
    <ClInclude Include="..\HARLEM\sources\haatgroup.h" />
    <ClInclude Include="..\HARLEM\sources\haatom.h" />
    <ClInclude Include="..\HARLEM\sources\habond.h" />
    <ClInclude Include="..\HARLEM\sources\hacoord.h" />
    <ClInclude Include="..\HARLEM\sources\hahbhp.h" />
    <ClInclude Include="..\HARLEM\sources\haintcrd.h" />
    <ClInclude Include="..\HARLEM\sources\hamolecule.h" />
    <ClInclude Include="..\HARLEM\sources\hamolset.h" />
    <ClInclude Include="..\HARLEM\sources\moleditor.h" />
    <ClInclude Include="..\HARLEM\sources\molset_evt_handler.h" />
    <ClInclude Include="..\HARLEM\sources\rigidbodycoord.h" />
    <ClInclude Include="..\HARLEM\sources\vec3d.h" />
    <ClInclude Include="..\HARLEM\sources\builtin.h" />
    <ClInclude Include="..\HARLEM\sources\f2c.h" />
    <ClInclude Include="..\HARLEM\sources\haconst.h" />
    <ClInclude Include="..\HARLEM\sources\haio.h" />
    <ClInclude Include="..\HARLEM\sources\hastl.h" />
    <ClInclude Include="..\HARLEM\sources\hastring.h" />
    <ClInclude Include="..\HARLEM\sources\hatypes.h" />
    <ClInclude Include="..\HARLEM\sources\rapidxml.hpp" />
    <ClInclude Include="..\HARLEM\sources\rapidxml_iterators.hpp" />
    <ClInclude Include="..\HARLEM\sources\rapidxml_print.hpp" />
    <ClInclude Include="..\HARLEM\sources\rapidxml_utils.hpp" />
    <ClInclude Include="..\HARLEM\sources\ctrl_wx.h" />
    <ClInclude Include="..\HARLEM\sources\dialogs_wx_1.h" />
    <ClInclude Include="..\HARLEM\sources\dialogs_wx_2.h" />
    <ClInclude Include="..\HARLEM\sources\ha_wx_aux_1.h" />
    <ClInclude Include="..\HARLEM\sources\ha_wx_ed_wdr.h" />
    <ClInclude Include="..\HARLEM\sources\ha_wx_res_2_wdr.h" />
    <ClInclude Include="..\HARLEM\sources\ha_wx_res_mikola_wdr.h" />
    <ClInclude Include="..\HARLEM\sources\ha_wx_res_molflex_wdr.h" />
    <ClInclude Include="..\HARLEM\sources\ha_wx_res_wdr.h" />
    <ClInclude Include="..\HARLEM\sources\hamainframe_wx.h" />
    <ClInclude Include="..\HARLEM\sources\hawx_add.h" />
    <ClInclude Include="..\HARLEM\sources\mm_dialogs_wx.h" />
    <ClInclude Include="..\HARLEM\sources\qc_dialogs_wx.h" />
    <ClInclude Include="..\HARLEM\sources\wx_prot_redox_dlg.h" />
    <ClInclude Include="..\HARLEM\sources\wxMolED.h" />
    <ClInclude Include="..\HARLEM\sources\wxMolFlex.h" />
    <ClInclude Include="..\HARLEM\sources\wxpymod.h" />
    <ClInclude Include="..\HARLEM\sources\canvas3d.h" />
    <ClInclude Include="..\HARLEM\sources\font.h" />
    <ClInclude Include="..\HARLEM\sources\hamolview.h" />
    <ClInclude Include="..\HARLEM\sources\object3d.h" />
    <ClInclude Include="..\HARLEM\sources\oglview.h" />
    <ClInclude Include="..\HARLEM\sources\hachart.h" />
    <ClInclude Include="..\HARLEM\sources\hachart_wx.h" />
    <ClInclude Include="..\HARLEM\sources\abstree.h" />
    <ClInclude Include="..\HARLEM\sources\command.h" />
    <ClInclude Include="..\HARLEM\sources\tokens.h" />
    <ClInclude Include="..\HARLEM\sources\hampi.h" />
    <ClInclude Include="..\HARLEM\sources\harlemapp.h" />
    <ClInclude Include="..\HARLEM\sources\harlemapp_wx.h" />
    <ClInclude Include="..\HARLEM\sources\hasvnrev.h" />
    <ClInclude Include="..\HARLEM\sources\cg_sngl.h" />
    <ClInclude Include="..\HARLEM\sources\fmat.h" />
    <ClInclude Include="..\HARLEM\sources\halinalg.h" />
    <ClInclude Include="..\HARLEM\sources\hamatdb.h" />
    <ClInclude Include="..\HARLEM\sources\index.h" />
    <ClInclude Include="..\HARLEM\sources\math_num.h" />
    <ClInclude Include="..\HARLEM\sources\region2d.h" />
    <ClInclude Include="..\HARLEM\sources\vec.h" />
    <ClInclude Include="..\HARLEM\sources\etablep.h" />
    <ClInclude Include="..\HARLEM\sources\hasurface.h" />
    <ClInclude Include="..\HARLEM\sources\hatests.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\doc\DEVELOP_NOTES\induced_dipoles_in_pmemd.txt" />
    <None Include="..\doc\DEVELOP_NOTES\recip_space_amoeba_func.txt" />
    <None Include="..\doc\DEVELOP_NOTES\nonb_inter_amoeba.txt" />
    <None Include="..\doc\INSTALL_harlem_1.txt" />
    <CustomBuild Include="..\HARLEM\scripts\hapygui.py">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\HARLEM\scripts\hapygui_init.py">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">copy %(FullPath) $(TargetDir)scripts</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">$(TargetDir)\scripts\%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <None Include="..\HARLEM\sources\rasmol.hlp" />
    <None Include="..\HARLEM\sources\ha_wx_ed.wdr" />
    <None Include="..\HARLEM\sources\ha_wx_res.wdr" />
    <None Include="..\HARLEM\sources\ha_wx_res_2.wdr" />
    <None Include="..\HARLEM\sources\ha_wx_res_2_wdr.xrc" />
    <None Include="..\HARLEM\sources\ha_wx_res_mikola.wdr" />
    <None Include="..\HARLEM\sources\ha_wx_res_molflex.wdr" />
    <None Include="..\HARLEM\sources\ha_wx_res_wdr.xrc" />
    <None Include="..\HARLEM\sources\harlemwin.hlp" />
    <None Include="..\HARLEM\sources\harlem_i.ico" />
    <None Include="..\HARLEM\sources\osgview.i" />
    <None Include="..\HARLEM\HARLEM.kdevelop.filelist" />
    <CustomBuild Include="..\HARLEM\sources\hamolset.i">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">c:\swig\swig.exe -python -shadow -c++  -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">c:\swig\swig.exe -python -shadow -c++  -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">c:\swig\swig.exe -python -py3 -shadow -c++ -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">c:\swig\swig.exe -python -py3 -shadow -c++ -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|Win32'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Debug|x64'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">Generate Python interface hamolset_wrap.cpp file with SWIG</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">c:\swig\swig.exe -python -shadow  -c++  -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">c:\swig\swig.exe -python -shadow  -c++  -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">c:\swig\swig.exe -python -py3 -shadow -c++ -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">c:\swig\swig.exe -python -py3 -shadow -c++ -D_MSC_VER -o $(IntDir)hamolset_wrap.cpp  %(RootDir)%(Directory)\%(Filename)%(Extension)
</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Release|Win32'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='PY3_Release|x64'">$(IntDir)hamolset_wrap.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <None Include="Debug\HARLEM\molset.py" />
    <None Include="Release\HARLEM\molset.py" />
    <None Include="..\doc\DEVELOP_NOTES\amoeba_func.txt" />
    <None Include="..\doc\DEVELOP_NOTES\iterators_1.txt" />
    <None Include="..\doc\DEVELOP_NOTES\thole_coef.txt" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="..\HARLEM\sources\harlemwin.rc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\AMBER11_IGOR\AmberTools\mswin\mortlib\mortlib.vcxproj">
      <Project>{cd7149ea-ed1a-44c9-a7e7-f9a15ea1470e}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="do_lib.vcxproj">
      <Project>{f8db84c9-f3e0-4ab4-98b4-dffb7e829b3f}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <Private>false</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
      <UseLibraryDependencyInputs>false</UseLibraryDependencyInputs>
    </ProjectReference>
    <ProjectReference Include="geoball_lib_c.vcxproj">
      <Project>{0cc84782-ab73-4963-9cfe-f57c9e546651}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <Private>false</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
      <UseLibraryDependencyInputs>false</UseLibraryDependencyInputs>
    </ProjectReference>
    <ProjectReference Include="halib_vs.vcxproj">
      <Project>{b7328421-ac6d-4cb8-8355-995a6a479745}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="harlem_vs.vcxproj">
      <Project>{7ab0f266-a0a8-47dd-8c82-49e28cf5d872}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <Private>false</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
      <UseLibraryDependencyInputs>false</UseLibraryDependencyInputs>
    </ProjectReference>
    <ProjectReference Include="ipack_lib.vcxproj">
      <Project>{c7812881-bc78-4122-a245-e87506bca1a6}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="jumna_lib_c.vcxproj">
      <Project>{5fa1f25a-7f2a-42c5-83b1-a6684b8f342e}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="pmemd_lib_c.vcxproj">
      <Project>{4e65a9c1-a2bd-42b3-9155-5531fe33009f}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="pnplib_vs.vcxproj">
      <Project>{00332771-f366-4c97-80a8-51519a1ff394}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="vf_lib.vcxproj">
      <Project>{f70239d1-0a54-4f2f-a7ff-37f0ead8939a}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>